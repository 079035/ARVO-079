1. Vulnerability:
The vulnerability in the original code was that it allowed a POINT block to contain an unlimited number of points. This could potentially lead to a buffer overflow if the number of points exceeded the maximum size of the array used to store them.

2. Short Summary of the Fix:
The fix introduces a check to ensure that the number of points in a POINT block does not exceed the maximum allowed number of points (`MS_MAXVECTORPOINTS`). If this limit is exceeded, an error is raised and the function returns with a failure status.

3. Detailed Description of the Fix:
The fix is implemented in the `loadSymbol` function, specifically in the `POINTS` case of the switch statement. After the `MS_NUMBER` case, a check is added to see if the number of points (`s->numpoints`) has reached the maximum allowed number of points (`MS_MAXVECTORPOINTS`). If it has, an error is set with the message "POINT block contains too many points." and the function returns with a failure status. This prevents the addition of more points than the array can handle, thus preventing a potential buffer overflow.