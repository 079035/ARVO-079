Vulnerability: Stack-Buffer-Overflow

Summary of the fix: Add a check to verify that the output size is within the bounds of the buffer when a tag is found.

Detailed description of the fix:
1. Before the fix, the code would check if a tag is found in the input data and calculate the size of the tagged data.
2. Then, it would check if the calculated size is within the bounds of the input data.
3. However, it inadvertently missed checking if the remaining data after the tag and size is within the bounds of the input data. This could lead to a stack-buffer-overflow if the remaining data is larger than the available buffer space.
4. The fix introduces a new check to verify if the remaining data after the tag and size is within the bounds of the input data.
5. If the remaining data is larger than the available buffer space, an error message is logged, and the function returns with an "internal error" status.
6. This prevents potential stack-buffer-overflow vulnerabilities by ensuring that the tagged data does not exceed the available buffer space.