From 0aa4e76b8e2ad1f2f40ece6a4552c85837a2a281 Mon Sep 17 00:00:00 2001
From: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date: Fri, 29 Jun 2018 10:59:30 +0200
Subject: [PATCH] Initializes to 0 X86 immediateOffset (#1192)

---
 arch/X86/X86DisassemblerDecoder.h | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/arch/X86/X86DisassemblerDecoder.h b/arch/X86/X86DisassemblerDecoder.h
index 8b3e5ba6a0..90997117a4 100644
--- a/arch/X86/X86DisassemblerDecoder.h
+++ b/arch/X86/X86DisassemblerDecoder.h
@@ -610,6 +610,11 @@ typedef struct InternalInstruction {
   /* The value of the vector extension prefix(EVEX/VEX/XOP), if present */
   uint8_t vectorExtensionPrefix[4];
 
+  /* Offsets from the start of the instruction to the pieces of data, which is
+     needed to find relocation entries for adding symbolic operands */
+  uint8_t displacementOffset;
+  uint8_t immediateOffset;
+
   // end-of-zero-members
 
   /* Reader interface (C) */
@@ -651,11 +656,6 @@ typedef struct InternalInstruction {
 
   uint8_t immSize;	// immediate size for X86_OP_IMM operand
 
-  /* Offsets from the start of the instruction to the pieces of data, which is
-     needed to find relocation entries for adding symbolic operands */
-  uint8_t displacementOffset;
-  uint8_t immediateOffset;
-
   /* opcode state */
 
   /* The last byte of the opcode, not counting any ModR/M extension */
