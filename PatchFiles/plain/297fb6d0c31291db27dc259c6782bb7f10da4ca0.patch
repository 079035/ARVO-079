From 297fb6d0c31291db27dc259c6782bb7f10da4ca0 Mon Sep 17 00:00:00 2001
From: Eduardo Silva <eduardo@treasure-data.com>
Date: Wed, 7 Oct 2020 16:55:48 -0600
Subject: [PATCH] lib: chunkio: sync dev changes v1.0.6 #1c59044

Signed-off-by: Eduardo Silva <eduardo@treasure-data.com>
---
 lib/chunkio/include/chunkio/cio_stream.h |  1 +
 lib/chunkio/src/cio_file_compat.c        |  6 ++
 lib/chunkio/src/cio_stream.c             | 72 ++++++++++++++++++++++++
 lib/chunkio/tests/CMakeLists.txt         |  1 +
 4 files changed, 80 insertions(+)

diff --git a/lib/chunkio/include/chunkio/cio_stream.h b/lib/chunkio/include/chunkio/cio_stream.h
index c77f6a9e000..6e4146cf40b 100644
--- a/lib/chunkio/include/chunkio/cio_stream.h
+++ b/lib/chunkio/include/chunkio/cio_stream.h
@@ -32,6 +32,7 @@ struct cio_stream {
 
 struct cio_stream *cio_stream_create(struct cio_ctx *ctx, const char *name,
                                      int type);
+int cio_stream_delete(struct cio_stream *st);
 void cio_stream_destroy(struct cio_stream *st);
 void cio_stream_destroy_all(struct cio_ctx *ctx);
 
diff --git a/lib/chunkio/src/cio_file_compat.c b/lib/chunkio/src/cio_file_compat.c
index fd67f052b39..e0823234089 100644
--- a/lib/chunkio/src/cio_file_compat.c
+++ b/lib/chunkio/src/cio_file_compat.c
@@ -95,6 +95,12 @@ int cio_file_read_prepare(struct cio_ctx *ctx, struct cio_chunk *ch)
     return -1;
 }
 
+int cio_file_content_copy(struct cio_chunk *ch,
+                          void **out_buf, size_t *out_size)
+{
+    return -1;
+}
+
 int cio_file_is_up(struct cio_chunk *ch, struct cio_file *cf)
 {
     return CIO_FALSE;
diff --git a/lib/chunkio/src/cio_stream.c b/lib/chunkio/src/cio_stream.c
index 3d30e6d9ce2..fa9679fe5bc 100644
--- a/lib/chunkio/src/cio_stream.c
+++ b/lib/chunkio/src/cio_stream.c
@@ -27,9 +27,34 @@
 #include <chunkio/cio_log.h>
 #include <chunkio/cio_chunk.h>
 #include <chunkio/cio_stream.h>
+#include <chunkio/cio_utils.h>
 
 #include <monkey/mk_core/mk_list.h>
 
+static char *get_stream_path(struct cio_ctx *ctx, struct cio_stream *st)
+{
+    int ret;
+    int len;
+    char *p;
+
+    /* Compose final path */
+    len = strlen(ctx->root_path) + strlen(st->name) + 2;
+    p = malloc(len + 1);
+    if (!p) {
+        cio_errno();
+        return NULL;
+    }
+
+    ret = snprintf(p, len, "%s/%s", ctx->root_path, st->name);
+    if (ret == -1) {
+        cio_errno();
+        free(p);
+        return NULL;
+    }
+
+    return p;
+}
+
 static int check_stream_path(struct cio_ctx *ctx, const char *path)
 {
     int ret;
@@ -142,6 +167,53 @@ void cio_stream_destroy(struct cio_stream *st)
     free(st);
 }
 
+/* Deletes a complete stream, this include all chunks available */
+int cio_stream_delete(struct cio_stream *st)
+{
+    int ret;
+    char *path;
+    struct mk_list *tmp;
+    struct mk_list *head;
+    struct cio_chunk *ch;
+    struct cio_ctx *ctx;
+
+    ctx = st->parent;
+
+    /* delete all chunks */
+    mk_list_foreach_safe(head, tmp, &st->chunks) {
+        ch = mk_list_entry(head, struct cio_chunk, _head);
+        cio_chunk_close(ch, CIO_TRUE);
+    }
+
+#ifdef CIO_HAVE_BACKEND_FILESYSTEM
+    /* If the stream is filesystem based, destroy the real directory */
+    if (st->type == CIO_STORE_FS) {
+        path = get_stream_path(ctx, st);
+        if (!path) {
+            cio_log_error(ctx,
+                          "content from stream '%s' has been deleted, but the "
+                          "directory might still exists.");
+            return -1;
+        }
+
+        cio_log_debug(ctx, "[cio stream] delete stream path: %s", path);
+
+        /* Recursive deletion */
+        ret = cio_utils_recursive_delete(path);
+        if (ret == -1) {
+            cio_log_error(ctx, "error in recursive deletion of path %s", path);
+            free(path);
+            return -1;
+        }
+        free(path);
+
+        return ret;
+    }
+#endif
+
+    return 0;
+}
+
 void cio_stream_destroy_all(struct cio_ctx *ctx)
 {
     struct mk_list *tmp;
diff --git a/lib/chunkio/tests/CMakeLists.txt b/lib/chunkio/tests/CMakeLists.txt
index b41ec94eeb3..063d2fa8e8c 100644
--- a/lib/chunkio/tests/CMakeLists.txt
+++ b/lib/chunkio/tests/CMakeLists.txt
@@ -3,6 +3,7 @@ include_directories(lib/acutest)
 set(UNIT_TESTS_FILES
   context.c
   memfs.c
+  stream.c
   )
 if(CIO_BACKEND_FILESYSTEM)
   set(UNIT_TESTS_FILES
