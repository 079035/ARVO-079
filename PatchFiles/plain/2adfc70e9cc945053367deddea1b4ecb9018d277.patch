From 2adfc70e9cc945053367deddea1b4ecb9018d277 Mon Sep 17 00:00:00 2001
From: "Victor M. Alvarez" <vmalvarez@virustotal.com>
Date: Wed, 8 Nov 2017 10:43:55 +0100
Subject: [PATCH] Fix bug introduced in
 15f831264acb82f7722cefd2cd9b7adea541826a.

As the lexer doesn't terminate right after finding an error, a double-free can happen if pointers associated to tokens are not set to NULL after being freed.
---
 libyara/grammar.c     | 22 +++++++++++-----------
 libyara/grammar.y     | 24 ++++++++++++------------
 libyara/hex_grammar.c | 14 +++++++-------
 libyara/hex_grammar.y | 14 +++++++-------
 libyara/re_grammar.c  | 10 +++++-----
 libyara/re_grammar.y  | 10 +++++-----
 6 files changed, 47 insertions(+), 47 deletions(-)

diff --git a/libyara/grammar.c b/libyara/grammar.c
index db8f9bb768..49b00b8099 100644
--- a/libyara/grammar.c
+++ b/libyara/grammar.c
@@ -1343,67 +1343,67 @@ yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, void *yyscanner, Y
     {
           case 10: /* _IDENTIFIER_  */
 #line 202 "grammar.y" /* yacc.c:1257  */
-      { yr_free(((*yyvaluep).c_string)); }
+      { yr_free(((*yyvaluep).c_string)); ((*yyvaluep).c_string) = NULL; }
 #line 1348 "grammar.c" /* yacc.c:1257  */
         break;
 
     case 11: /* _STRING_IDENTIFIER_  */
 #line 206 "grammar.y" /* yacc.c:1257  */
-      { yr_free(((*yyvaluep).c_string)); }
+      { yr_free(((*yyvaluep).c_string)); ((*yyvaluep).c_string) = NULL; }
 #line 1354 "grammar.c" /* yacc.c:1257  */
         break;
 
     case 12: /* _STRING_COUNT_  */
 #line 203 "grammar.y" /* yacc.c:1257  */
-      { yr_free(((*yyvaluep).c_string)); }
+      { yr_free(((*yyvaluep).c_string)); ((*yyvaluep).c_string) = NULL; }
 #line 1360 "grammar.c" /* yacc.c:1257  */
         break;
 
     case 13: /* _STRING_OFFSET_  */
 #line 204 "grammar.y" /* yacc.c:1257  */
-      { yr_free(((*yyvaluep).c_string)); }
+      { yr_free(((*yyvaluep).c_string)); ((*yyvaluep).c_string) = NULL; }
 #line 1366 "grammar.c" /* yacc.c:1257  */
         break;
 
     case 14: /* _STRING_LENGTH_  */
 #line 205 "grammar.y" /* yacc.c:1257  */
-      { yr_free(((*yyvaluep).c_string)); }
+      { yr_free(((*yyvaluep).c_string)); ((*yyvaluep).c_string) = NULL; }
 #line 1372 "grammar.c" /* yacc.c:1257  */
         break;
 
     case 15: /* _STRING_IDENTIFIER_WITH_WILDCARD_  */
 #line 207 "grammar.y" /* yacc.c:1257  */
-      { yr_free(((*yyvaluep).c_string)); }
+      { yr_free(((*yyvaluep).c_string)); ((*yyvaluep).c_string) = NULL; }
 #line 1378 "grammar.c" /* yacc.c:1257  */
         break;
 
     case 19: /* _TEXT_STRING_  */
 #line 208 "grammar.y" /* yacc.c:1257  */
-      { yr_free(((*yyvaluep).sized_string)); }
+      { yr_free(((*yyvaluep).sized_string)); ((*yyvaluep).sized_string) = NULL; }
 #line 1384 "grammar.c" /* yacc.c:1257  */
         break;
 
     case 20: /* _HEX_STRING_  */
 #line 209 "grammar.y" /* yacc.c:1257  */
-      { yr_free(((*yyvaluep).sized_string)); }
+      { yr_free(((*yyvaluep).sized_string)); ((*yyvaluep).sized_string) = NULL; }
 #line 1390 "grammar.c" /* yacc.c:1257  */
         break;
 
     case 21: /* _REGEXP_  */
 #line 210 "grammar.y" /* yacc.c:1257  */
-      { yr_free(((*yyvaluep).sized_string)); }
+      { yr_free(((*yyvaluep).sized_string)); ((*yyvaluep).sized_string) = NULL; }
 #line 1396 "grammar.c" /* yacc.c:1257  */
         break;
 
     case 94: /* arguments  */
 #line 212 "grammar.y" /* yacc.c:1257  */
-      { yr_free(((*yyvaluep).c_string)); }
+      { yr_free(((*yyvaluep).c_string)); ((*yyvaluep).c_string) = NULL; }
 #line 1402 "grammar.c" /* yacc.c:1257  */
         break;
 
     case 95: /* arguments_list  */
 #line 213 "grammar.y" /* yacc.c:1257  */
-      { yr_free(((*yyvaluep).c_string)); }
+      { yr_free(((*yyvaluep).c_string)); ((*yyvaluep).c_string) = NULL; }
 #line 1408 "grammar.c" /* yacc.c:1257  */
         break;
 
diff --git a/libyara/grammar.y b/libyara/grammar.y
index 8a60a8c6f4..3a37514968 100644
--- a/libyara/grammar.y
+++ b/libyara/grammar.y
@@ -199,18 +199,18 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 %type <c_string> arguments
 %type <c_string> arguments_list
 
-%destructor { yr_free($$); } _IDENTIFIER_
-%destructor { yr_free($$); } _STRING_COUNT_
-%destructor { yr_free($$); } _STRING_OFFSET_
-%destructor { yr_free($$); } _STRING_LENGTH_
-%destructor { yr_free($$); } _STRING_IDENTIFIER_
-%destructor { yr_free($$); } _STRING_IDENTIFIER_WITH_WILDCARD_
-%destructor { yr_free($$); } _TEXT_STRING_
-%destructor { yr_free($$); } _HEX_STRING_
-%destructor { yr_free($$); } _REGEXP_
-
-%destructor { yr_free($$); } arguments
-%destructor { yr_free($$); } arguments_list
+%destructor { yr_free($$); $$ = NULL; } _IDENTIFIER_
+%destructor { yr_free($$); $$ = NULL; } _STRING_COUNT_
+%destructor { yr_free($$); $$ = NULL; } _STRING_OFFSET_
+%destructor { yr_free($$); $$ = NULL; } _STRING_LENGTH_
+%destructor { yr_free($$); $$ = NULL; } _STRING_IDENTIFIER_
+%destructor { yr_free($$); $$ = NULL; } _STRING_IDENTIFIER_WITH_WILDCARD_
+%destructor { yr_free($$); $$ = NULL; } _TEXT_STRING_
+%destructor { yr_free($$); $$ = NULL; } _HEX_STRING_
+%destructor { yr_free($$); $$ = NULL; } _REGEXP_
+
+%destructor { yr_free($$); $$ = NULL; } arguments
+%destructor { yr_free($$); $$ = NULL; } arguments_list
 
 %union {
   EXPRESSION      expression;
diff --git a/libyara/hex_grammar.c b/libyara/hex_grammar.c
index 3b611bd8ad..32447864eb 100644
--- a/libyara/hex_grammar.c
+++ b/libyara/hex_grammar.c
@@ -1026,43 +1026,43 @@ yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, void *yyscanner, H
     {
           case 16: /* tokens  */
 #line 102 "hex_grammar.y" /* yacc.c:1257  */
-      { yr_re_node_destroy(((*yyvaluep).re_node)); }
+      { yr_re_node_destroy(((*yyvaluep).re_node)); ((*yyvaluep).re_node) = NULL; }
 #line 1031 "hex_grammar.c" /* yacc.c:1257  */
         break;
 
     case 17: /* token_sequence  */
 #line 103 "hex_grammar.y" /* yacc.c:1257  */
-      { yr_re_node_destroy(((*yyvaluep).re_node)); }
+      { yr_re_node_destroy(((*yyvaluep).re_node)); ((*yyvaluep).re_node) = NULL; }
 #line 1037 "hex_grammar.c" /* yacc.c:1257  */
         break;
 
     case 18: /* token_or_range  */
 #line 104 "hex_grammar.y" /* yacc.c:1257  */
-      { yr_re_node_destroy(((*yyvaluep).re_node)); }
+      { yr_re_node_destroy(((*yyvaluep).re_node)); ((*yyvaluep).re_node) = NULL; }
 #line 1043 "hex_grammar.c" /* yacc.c:1257  */
         break;
 
     case 19: /* token  */
 #line 105 "hex_grammar.y" /* yacc.c:1257  */
-      { yr_re_node_destroy(((*yyvaluep).re_node)); }
+      { yr_re_node_destroy(((*yyvaluep).re_node)); ((*yyvaluep).re_node) = NULL; }
 #line 1049 "hex_grammar.c" /* yacc.c:1257  */
         break;
 
     case 21: /* range  */
 #line 108 "hex_grammar.y" /* yacc.c:1257  */
-      { yr_re_node_destroy(((*yyvaluep).re_node)); }
+      { yr_re_node_destroy(((*yyvaluep).re_node)); ((*yyvaluep).re_node) = NULL; }
 #line 1055 "hex_grammar.c" /* yacc.c:1257  */
         break;
 
     case 22: /* alternatives  */
 #line 107 "hex_grammar.y" /* yacc.c:1257  */
-      { yr_re_node_destroy(((*yyvaluep).re_node)); }
+      { yr_re_node_destroy(((*yyvaluep).re_node)); ((*yyvaluep).re_node) = NULL; }
 #line 1061 "hex_grammar.c" /* yacc.c:1257  */
         break;
 
     case 23: /* byte  */
 #line 106 "hex_grammar.y" /* yacc.c:1257  */
-      { yr_re_node_destroy(((*yyvaluep).re_node)); }
+      { yr_re_node_destroy(((*yyvaluep).re_node)); ((*yyvaluep).re_node) = NULL; }
 #line 1067 "hex_grammar.c" /* yacc.c:1257  */
         break;
 
diff --git a/libyara/hex_grammar.y b/libyara/hex_grammar.y
index 5dbc463e02..cefd999f8c 100644
--- a/libyara/hex_grammar.y
+++ b/libyara/hex_grammar.y
@@ -99,13 +99,13 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 %type <re_node> alternatives
 %type <re_node> range
 
-%destructor { yr_re_node_destroy($$); } tokens
-%destructor { yr_re_node_destroy($$); } token_sequence
-%destructor { yr_re_node_destroy($$); } token_or_range
-%destructor { yr_re_node_destroy($$); } token
-%destructor { yr_re_node_destroy($$); } byte
-%destructor { yr_re_node_destroy($$); } alternatives
-%destructor { yr_re_node_destroy($$); } range
+%destructor { yr_re_node_destroy($$); $$ = NULL; } tokens
+%destructor { yr_re_node_destroy($$); $$ = NULL; } token_sequence
+%destructor { yr_re_node_destroy($$); $$ = NULL; } token_or_range
+%destructor { yr_re_node_destroy($$); $$ = NULL; } token
+%destructor { yr_re_node_destroy($$); $$ = NULL; } byte
+%destructor { yr_re_node_destroy($$); $$ = NULL; } alternatives
+%destructor { yr_re_node_destroy($$); $$ = NULL; } range
 
 %%
 
diff --git a/libyara/re_grammar.c b/libyara/re_grammar.c
index 63c83a39a5..674acc03d0 100644
--- a/libyara/re_grammar.c
+++ b/libyara/re_grammar.c
@@ -1048,31 +1048,31 @@ yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, void *yyscanner, R
     {
           case 6: /* _CLASS_  */
 #line 104 "re_grammar.y" /* yacc.c:1257  */
-      { yr_free(((*yyvaluep).re_class)); }
+      { yr_free(((*yyvaluep).re_class)); ((*yyvaluep).re_class) = NULL; }
 #line 1053 "re_grammar.c" /* yacc.c:1257  */
         break;
 
     case 26: /* alternative  */
 #line 105 "re_grammar.y" /* yacc.c:1257  */
-      { yr_re_node_destroy(((*yyvaluep).re_node)); }
+      { yr_re_node_destroy(((*yyvaluep).re_node)); ((*yyvaluep).re_node) = NULL; }
 #line 1059 "re_grammar.c" /* yacc.c:1257  */
         break;
 
     case 27: /* concatenation  */
 #line 106 "re_grammar.y" /* yacc.c:1257  */
-      { yr_re_node_destroy(((*yyvaluep).re_node)); }
+      { yr_re_node_destroy(((*yyvaluep).re_node)); ((*yyvaluep).re_node) = NULL; }
 #line 1065 "re_grammar.c" /* yacc.c:1257  */
         break;
 
     case 28: /* repeat  */
 #line 107 "re_grammar.y" /* yacc.c:1257  */
-      { yr_re_node_destroy(((*yyvaluep).re_node)); }
+      { yr_re_node_destroy(((*yyvaluep).re_node)); ((*yyvaluep).re_node) = NULL; }
 #line 1071 "re_grammar.c" /* yacc.c:1257  */
         break;
 
     case 29: /* single  */
 #line 108 "re_grammar.y" /* yacc.c:1257  */
-      { yr_re_node_destroy(((*yyvaluep).re_node)); }
+      { yr_re_node_destroy(((*yyvaluep).re_node)); ((*yyvaluep).re_node) = NULL; }
 #line 1077 "re_grammar.c" /* yacc.c:1257  */
         break;
 
diff --git a/libyara/re_grammar.y b/libyara/re_grammar.y
index 256e1f8221..77c608aa06 100644
--- a/libyara/re_grammar.y
+++ b/libyara/re_grammar.y
@@ -101,11 +101,11 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 %type <re_node>  alternative concatenation repeat single
 
-%destructor { yr_free($$); } _CLASS_
-%destructor { yr_re_node_destroy($$); } alternative
-%destructor { yr_re_node_destroy($$); } concatenation
-%destructor { yr_re_node_destroy($$); } repeat
-%destructor { yr_re_node_destroy($$); } single
+%destructor { yr_free($$); $$ = NULL; } _CLASS_
+%destructor { yr_re_node_destroy($$); $$ = NULL; } alternative
+%destructor { yr_re_node_destroy($$); $$ = NULL; } concatenation
+%destructor { yr_re_node_destroy($$); $$ = NULL; } repeat
+%destructor { yr_re_node_destroy($$); $$ = NULL; } single
 
 %%
 
