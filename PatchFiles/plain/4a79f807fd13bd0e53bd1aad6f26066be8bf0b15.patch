commit 4a79f807fd13bd0e53bd1aad6f26066be8bf0b15
Author: Ken Sharp <ken.sharp@artifex.com>
Date:   Thu Feb 24 09:57:34 2022 +0000

    OSS-fuzz #44983 - Apply limits to decryption /Length
    
    We were using the /Length value supplied in the Encrypt dictionary
    even for encryption types where that is not valid. This commit
    fixes the KeyLen value for those encryption types for which it is not
    a variable (most of them), checks the minimum/maximum and multiple of 8
    for the on really variable type, and flags warnings if the /Length is
    supplied for an inappropriate filter.
    
    It's possible we will see a load of files encrypted with V 3-6 which
    supply a /Length where they technically shouldn't, and will raise a
    warning. We might want to not do that in future if it proves irksome.

diff --git a/pdf/pdf_errors.h b/pdf/pdf_errors.h
index 4d15f26bf..e52a6c743 100644
--- a/pdf/pdf_errors.h
+++ b/pdf/pdf_errors.h
@@ -51,5 +51,6 @@ PARAM(E_PDF_NO_SUBTYPE,                "object lacks a required Subtype"),
 PARAM(E_PDF_IMAGECOLOR_ERROR,          "error in image colour"),
 PARAM(E_DICT_SELF_REFERENCE,           "dictionary contains a key which (indirectly) references the dictionary."),
 PARAM(E_IMAGE_MASKWITHCOLOR,           "Image has both ImageMask and ColorSpace keys."),
+PARAM(E_PDF_INVALID_DECRYPT_LEN,       "Invalid /Length in Encryption dictionary (not in range 40-128 or not a multiple of 8)."),
 
 #undef PARAM
diff --git a/pdf/pdf_sec.c b/pdf/pdf_sec.c
index b0a48dc2d..42f4812ff 100644
--- a/pdf/pdf_sec.c
+++ b/pdf/pdf_sec.c
@@ -1369,6 +1369,10 @@ int pdfi_initialise_Decryption(pdf_context *ctx)
         case 2:
             /* Set up the defaults if not already set */
             /* Revision 2 is always 40-bit RC4 */
+            if (KeyLen != 0 && KeyLen < 40 || KeyLen > 128 || KeyLen % 8 != 0) {
+                pdfi_set_error(ctx, 0, NULL, E_PDF_INVALID_DECRYPT_LEN, "pdfi_initialise_Decryption", NULL);
+                return_error(gs_error_rangecheck);
+            }
             if (KeyLen == 0)
                 KeyLen = 40;
             if (ctx->encryption.StmF == CRYPT_NONE)
@@ -1380,8 +1384,9 @@ int pdfi_initialise_Decryption(pdf_context *ctx)
         case 3:
             /* Set up the defaults if not already set */
             /* Revision 3 is always 128-bit RC4 */
-            if (KeyLen == 0)
-                KeyLen = 128;
+            if (KeyLen != 0 && KeyLen != 128)
+                pdfi_set_warning(ctx, 0, NULL, W_PDF_INVALID_DECRYPT_LEN, "pdfi_initialise_Decryption", NULL);
+            KeyLen = 128;
             if (ctx->encryption.StmF == CRYPT_NONE)
                 ctx->encryption.StmF = CRYPT_V2;
             if (ctx->encryption.StrF == CRYPT_NONE)
@@ -1391,16 +1396,18 @@ int pdfi_initialise_Decryption(pdf_context *ctx)
         case 4:
             if (ctx->encryption.StrF != CRYPT_IDENTITY || ctx->encryption.StmF != CRYPT_IDENTITY) {
                 /* Revision 4 is either AES or RC4, but its always 128-bits */
-                if (KeyLen == 0)
-                    KeyLen = 128;
+                if (KeyLen != 0)
+                    pdfi_set_warning(ctx, 0, NULL, W_PDF_INVALID_DECRYPT_LEN, "pdfi_initialise_Decryption", NULL);
+                KeyLen = 128;
                 /* We can't set the encryption filter, so we have to hope the PDF file did */
                 code = check_password_preR5(ctx, ctx->encryption.Password, ctx->encryption.PasswordLen, KeyLen, 4);
             }
             break;
         case 5:
             /* Set up the defaults if not already set */
-            if (KeyLen == 0)
-                KeyLen = 256;
+            if (KeyLen != 0)
+                pdfi_set_warning(ctx, 0, NULL, W_PDF_INVALID_DECRYPT_LEN, "pdfi_initialise_Decryption", NULL);
+            KeyLen = 256;
             if (ctx->encryption.StmF == CRYPT_NONE)
                 ctx->encryption.StmF = CRYPT_AESV2;
             if (ctx->encryption.StrF == CRYPT_NONE)
@@ -1410,8 +1417,9 @@ int pdfi_initialise_Decryption(pdf_context *ctx)
         case 6:
             /* Set up the defaults if not already set */
             /* Revision 6 is always 256-bit AES */
-            if (KeyLen == 0)
-                KeyLen = 256;
+            if (KeyLen != 0)
+                pdfi_set_warning(ctx, 0, NULL, W_PDF_INVALID_DECRYPT_LEN, "pdfi_initialise_Decryption", NULL);
+            KeyLen = 256;
             if (ctx->encryption.StmF == CRYPT_NONE)
                 ctx->encryption.StmF = CRYPT_AESV3;
             if (ctx->encryption.StrF == CRYPT_NONE)
diff --git a/pdf/pdf_warnings.h b/pdf/pdf_warnings.h
index 04999b828..effd5d19d 100644
--- a/pdf/pdf_warnings.h
+++ b/pdf/pdf_warnings.h
@@ -56,5 +56,6 @@ PARAM(W_PDF_DEVICEN_USES_ALL,       "A DeviceN space used the /All ink name."),
 PARAM(W_PDF_BAD_MEDIABOX,           "Couldn't retrieve MediaBox for page, using current media size"),
 PARAM(W_PDF_CA_OUTOFRANGE,          "CA or ca value not in range 0.0 to 1.0, clamped to range."),
 PARAM(W_PDF_INVALID_DEFAULTSPACE,   "Invalid DefaultGray, DefaultRGB or DefaultCMYK space specified, ignored."),
+PARAM(W_PDF_INVALID_DECRYPT_LEN,    "Invalid /Length supplied in Encryption dictionary."),
 
 #undef PARAM
