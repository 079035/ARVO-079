From 55b420a23ab58bb7dc62fb582f205e65d6445270 Mon Sep 17 00:00:00 2001
From: Roman Lebedev <lebedev.ri@gmail.com>
Date: Sun, 24 Sep 2017 16:20:17 +0300
Subject: [PATCH] NikonDecompressor: width should be a multiple of 2

---
 src/librawspeed/decoders/NefDecoder.cpp             | 3 ++-
 src/librawspeed/decompressors/NikonDecompressor.cpp | 6 ++++--
 2 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/src/librawspeed/decoders/NefDecoder.cpp b/src/librawspeed/decoders/NefDecoder.cpp
index 8b067bffa..853c5e470 100644
--- a/src/librawspeed/decoders/NefDecoder.cpp
+++ b/src/librawspeed/decoders/NefDecoder.cpp
@@ -107,7 +107,8 @@ RawImage NefDecoder::decodeRawInternal() {
   uint32 height = raw->getEntry(IMAGELENGTH)->getU32();
   uint32 bitPerPixel = raw->getEntry(BITSPERSAMPLE)->getU32();
 
-  if (width == 0 || height == 0 || width > 8288 || height > 5520)
+  if (width == 0 || height == 0 || width % 2 != 0 || width > 8288 ||
+      height > 5520)
     ThrowRDE("Unexpected image dimensions found: (%u; %u)", width, height);
 
   switch (bitPerPixel) {
diff --git a/src/librawspeed/decompressors/NikonDecompressor.cpp b/src/librawspeed/decompressors/NikonDecompressor.cpp
index 859c8773f..0d450c4f0 100644
--- a/src/librawspeed/decompressors/NikonDecompressor.cpp
+++ b/src/librawspeed/decompressors/NikonDecompressor.cpp
@@ -149,10 +149,12 @@ void NikonDecompressor::decompress(RawImage* mRaw, ByteStream&& data,
 
   int pLeft1 = 0;
   int pLeft2 = 0;
-  uint32 cw = size.x / 2;
   uint32 random = bits.peekBits(24);
   //allow gcc to devirtualize the calls below
   auto* rawdata = reinterpret_cast<RawImageDataU16*>(mRaw->get());
+
+  assert(size.x % 2 == 0);
+  assert(size.x >= 2);
   for (uint32 y = 0; y < static_cast<unsigned>(size.y); y++) {
     if (split && y == split) {
       ht = createHuffmanTable(huffSelect + 1);
@@ -171,7 +173,7 @@ void NikonDecompressor::decompress(RawImage* mRaw, ByteStream&& data,
 
     dest += 2;
 
-    for (uint32 x = 1; x < cw; x++) {
+    for (uint32 x = 2; x < static_cast<uint32>(size.x); x += 2) {
       pLeft1 += ht.decodeNext(bits);
       pLeft2 += ht.decodeNext(bits);
 
