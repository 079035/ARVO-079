From 55ec5cc1938fba3c506e87c5314630f1f0736a15 Mon Sep 17 00:00:00 2001
From: pancake <pancake@nopcode.org>
Date: Sat, 9 Feb 2019 13:22:21 +0100
Subject: [PATCH] Fix
 clusterfuzz-testcase-minimized-ia_fuzz-5166506139189248.dms

---
 libr/bin/p/bin_dex.c | 30 +++++++++++++++++++-----------
 1 file changed, 19 insertions(+), 11 deletions(-)

diff --git a/libr/bin/p/bin_dex.c b/libr/bin/p/bin_dex.c
index 122ea32245cfc..7014769769c9d 100644
--- a/libr/bin/p/bin_dex.c
+++ b/libr/bin/p/bin_dex.c
@@ -276,10 +276,20 @@ static char *dex_method_signature(RBinDexObj *bin, int method_idx) {
 	return dex_get_proto (bin, bin->methods[method_idx].proto_id);
 }
 
+static ut32 read32(RBuffer* b, ut64 addr) {
+	ut32 n = 0;
+	r_buf_read_at (b, addr, (ut8*)&n, sizeof (n));
+	return r_read_le32 (&n);
+}
+
+static ut16 read16(RBuffer* b, ut64 addr) {
+	ut16 n = 0;
+	r_buf_read_at (b, addr, (ut8*)&n, sizeof (n));
+	return r_read_le16 (&n);
+}
+
 static RList *dex_method_signature2(RBinDexObj *bin, int method_idx) {
 	ut32 proto_id, params_off, list_size;
-	char *buff = NULL;
-	ut8 *bufptr;
 	ut16 type_idx;
 	int i;
 
@@ -301,21 +311,17 @@ static RList *dex_method_signature2(RBinDexObj *bin, int method_idx) {
 	if (!params_off) {
 		return params;
 	}
-	bufptr = bin->b->buf;
-	// size of the list, in entries
-	list_size = r_read_le32 (bufptr + params_off);
-	//XXX list_size tainted it may produce huge loop
+	list_size = read32 (bin->b, params_off);
 	for (i = 0; i < list_size; i++) {
 		ut64 of = params_off + 4 + (i * 2);
 		if (of >= bin->size || of < params_off) {
 			break;
 		}
-		type_idx = r_read_le16 (bufptr + of);
-		if (type_idx >= bin->header.types_size ||
-		    type_idx > bin->size) {
+		type_idx = read16 (bin->b, of);
+		if (type_idx >= bin->header.types_size || type_idx > bin->size) {
 			break;
 		}
-		buff = getstr (bin, bin->types[type_idx].descriptor_id);
+		char *buff = getstr (bin, bin->types[type_idx].descriptor_id);
 		if (!buff) {
 			break;
 		}
@@ -337,6 +343,7 @@ static void dex_parse_debug_item(RBinFile *binfile, RBinDexObj *bin,
 	struct r_bin_t *rbin = binfile->rbin;
 	struct r_bin_dex_obj_t *dex = binfile->o->bin_obj;
 	const ut8 *p4 = r_buf_get_at (binfile->buf, debug_info_off, NULL);
+	// runtime error: pointer index expression with base 0x000000004402 overflowed to 0xffffffffff0043fc
 	const ut8 *p4_end = p4 + binfile->buf->length - debug_info_off;
 	ut64 line_start;
 	ut64 parameters_size;
@@ -1533,7 +1540,8 @@ static void parse_class(RBinFile *binfile, RBinDexObj *bin, RBinDexClass *c,
 		}
 
 		p = r_buf_get_at (binfile->buf, c->class_data_offset, NULL);
-		p_end = p + binfile->buf->length - c->class_data_offset;
+		// runtime error: pointer index expression with base 0x000000004402 overflowed to 0xfffffffffffffd46
+		p_end = p + (binfile->buf->length - c->class_data_offset);
 		//XXX check for NULL!!
 		c->class_data = (struct dex_class_data_item_t *)malloc (
 			sizeof (struct dex_class_data_item_t));
