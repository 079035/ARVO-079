From 5bffcdd304f3a4be044dcfb89ca16839c2cceee6 Mon Sep 17 00:00:00 2001
From: Reini Urban <rurban@cpan.org>
Date: Fri, 26 Feb 2021 13:30:26 +0100
Subject: [PATCH] decode: check decode_R13_2000 invalid classes

fixes oss-fuzz issue 31425.
---
 src/decode.c | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/src/decode.c b/src/decode.c
index 281df66c6a..cc3f75399f 100644
--- a/src/decode.c
+++ b/src/decode.c
@@ -1106,6 +1106,15 @@ decode_R13_R2000 (Bit_Chain *restrict dat, Dwg_Data *restrict dwg)
             (long)dwg->header.section[SECTION_CLASSES_R13].size)
   // check sentinel
   dat->byte = dwg->header.section[SECTION_CLASSES_R13].address;
+  if (dat->byte +16 > dat->size ||
+      dwg->header.section[SECTION_CLASSES_R13].address
+      + dwg->header.section[SECTION_CLASSES_R13].size
+             > dat->size)
+    {
+      LOG_ERROR ("Invalid Classes section, skipped")
+      error |= DWG_ERR_SECTIONNOTFOUND;
+      goto handles_section;
+    }
   if (memcmp (dwg_sentinel (DWG_SENTINEL_CLASS_BEGIN), &dat->chain[dat->byte], 16) == 0)
     dat->byte += 16;
   else
@@ -1227,7 +1236,7 @@ decode_R13_R2000 (Bit_Chain *restrict dat, Dwg_Data *restrict dwg)
   /*-------------------------------------------------------------------------
    * Object-map, section 2
    */
-
+handles_section:
   dat->byte = dwg->header.section[SECTION_HANDLES_R13].address;
   dat->bit = 0;
 
