From 5ddb06fe4273bdec0171bc30877959c7bef666c2 Mon Sep 17 00:00:00 2001
From: Hiroshi Hatake <hatake@calyptia.com>
Date: Thu, 19 Jan 2023 17:44:15 +0900
Subject: [PATCH] lib: onigmo: Upgrade fluent/onigmo to
 2bfee1eaf526ec2309822243a976cc792d99fbc3

Signed-off-by: Hiroshi Hatake <hatake@calyptia.com>
---
 lib/onigmo/.gitignore               |   14 +
 lib/onigmo/.travis.yml              |   35 +
 lib/onigmo/doc/UnicodeProps.txt     |   56 +-
 lib/onigmo/enc/unicode/casefold.h   | 6181 +++++++++--------
 lib/onigmo/enc/unicode/name2ctype.h | 9728 +++++++++++++++++++--------
 lib/onigmo/onigmo.h                 |    5 +-
 lib/onigmo/regcomp.c                |    2 -
 lib/onigmo/regenc.c                 |   15 +
 lib/onigmo/regenc.h                 |    1 +
 lib/onigmo/regexec.c                |   20 +-
 lib/onigmo/regint.h                 |    9 +-
 lib/onigmo/regparse.c               |   10 +-
 lib/onigmo/tool/Makefile            |    4 +-
 lib/onigmo/tool/case-folding.rb     |    2 +-
 lib/onigmo/tool/download-ucd.sh     |    2 +-
 lib/onigmo/tool/update-doc.py       |    4 +-
 16 files changed, 10157 insertions(+), 5931 deletions(-)
 create mode 100644 lib/onigmo/.travis.yml

diff --git a/lib/onigmo/.gitignore b/lib/onigmo/.gitignore
index 085b4a143a6..43dbb48353a 100644
--- a/lib/onigmo/.gitignore
+++ b/lib/onigmo/.gitignore
@@ -38,16 +38,30 @@
 /build*/
 
 # autotools generated files
+/aclocal.m4
 /autom4te.cache
+/compile
+/config.guess
 /config.h
+/config.h.in
 /config.log
 /config.status
+/config.sub
+/configure
+/depcomp
+/install-sh
 /libtool
+/ltmain.sh
+/m4/*.m4
+/missing
 /onigmo-config
 /onigmo.pc
 /Makefile
+/Makefile.in
 /sample/Makefile
+/sample/Makefile.in
 /stamp-h1
+/test-driver
 
 # generated executable files
 /enc/mktable
diff --git a/lib/onigmo/.travis.yml b/lib/onigmo/.travis.yml
new file mode 100644
index 00000000000..7942770b09c
--- /dev/null
+++ b/lib/onigmo/.travis.yml
@@ -0,0 +1,35 @@
+language: c
+
+branches:
+  except:
+    - ruby-2.x
+
+compiler:
+  - gcc
+  - clang
+
+env:
+  - CFLAGS=--coverage CONFOPT=
+
+sudo: false
+
+addons:
+  apt:
+    packages:
+      - lcov
+      #- python3
+
+before_install:
+  - gem install lcoveralls
+
+before_script:
+  - ./autogen.sh
+  - ./configure $CONFOPT && make
+
+script:
+  - make test
+
+after_success:
+  - lcov -c -d .libs -d enc/.libs -o coverage.info
+  - lcoveralls --retry-count 5 coverage.info
+  - bash <(curl -s https://codecov.io/bash)
diff --git a/lib/onigmo/doc/UnicodeProps.txt b/lib/onigmo/doc/UnicodeProps.txt
index bc5e15625aa..59124ee28f0 100644
--- a/lib/onigmo/doc/UnicodeProps.txt
+++ b/lib/onigmo/doc/UnicodeProps.txt
@@ -1,4 +1,4 @@
-Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
+Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.2    2022/09/20
 
 * POSIX brackets
     Alpha
@@ -85,13 +85,16 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     Chakma
     Cham
     Cherokee
+    Chorasmian
     Common
     Coptic
     Cuneiform
     Cypriot
+    Cypro_Minoan
     Cyrillic
     Deseret
     Devanagari
+    Dives_Akuru
     Dogra
     Duployan
     Egyptian_Hieroglyphs
@@ -121,8 +124,10 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     Kaithi
     Kannada
     Katakana
+    Kawi
     Kayah_Li
     Kharoshthi
+    Khitan_Small_Script
     Khmer
     Khojki
     Khudawadi
@@ -154,6 +159,7 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     Multani
     Myanmar
     Nabataean
+    Nag_Mundari
     Nandinagari
     New_Tai_Lue
     Newa
@@ -170,6 +176,7 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     Old_Sogdian
     Old_South_Arabian
     Old_Turkic
+    Old_Uyghur
     Oriya
     Osage
     Osmanya
@@ -201,6 +208,7 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     Tai_Viet
     Takri
     Tamil
+    Tangsa
     Tangut
     Telugu
     Thaana
@@ -208,11 +216,14 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     Tibetan
     Tifinagh
     Tirhuta
+    Toto
     Ugaritic
     Unknown
     Vai
+    Vithkuqi
     Wancho
     Warang_Citi
+    Yezidi
     Yi
     Zanabazar_Square
 
@@ -292,6 +303,10 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     DI
     Dep
     Dia
+    EBase
+    EComp
+    EMod
+    EPres
     Ext
     Gr_Base
     Gr_Ext
@@ -390,11 +405,14 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     Cans
     Cari
     Cher
+    Chrs
     Copt
     Qaac
+    Cpmn
     Cprt
     Cyrl
     Deva
+    Diak
     Dogr
     Dsrt
     Dupl
@@ -428,6 +446,7 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     Khar
     Khmr
     Khoj
+    Kits
     Knda
     Kthi
     Lana
@@ -454,6 +473,7 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     Mtei
     Mult
     Mymr
+    Nagm
     Nand
     Narb
     Nbat
@@ -465,6 +485,7 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     Orya
     Osge
     Osma
+    Ougr
     Palm
     Pauc
     Perm
@@ -506,12 +527,15 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     Thaa
     Tibt
     Tirh
+    Tnsa
     Ugar
     Vaii
+    Vith
     Wara
     Wcho
     Xpeo
     Xsux
+    Yezi
     Yiii
     Zanb
     Zinh
@@ -525,6 +549,9 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     Age=11.0
     Age=12.0
     Age=12.1
+    Age=13.0
+    Age=14.0
+    Age=15.0
     Age=2.0
     Age=2.1
     Age=3.0
@@ -564,6 +591,7 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     In_Samaritan
     In_Mandaic
     In_Syriac_Supplement
+    In_Arabic_Extended_B
     In_Arabic_Extended_A
     In_Devanagari
     In_Bengali
@@ -727,7 +755,9 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     In_Osage
     In_Elbasan
     In_Caucasian_Albanian
+    In_Vithkuqi
     In_Linear_A
+    In_Latin_Extended_F
     In_Cypriot_Syllabary
     In_Imperial_Aramaic
     In_Palmyrene
@@ -749,8 +779,12 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     In_Old_Hungarian
     In_Hanifi_Rohingya
     In_Rumi_Numeral_Symbols
+    In_Yezidi
+    In_Arabic_Extended_C
     In_Old_Sogdian
     In_Sogdian
+    In_Old_Uyghur
+    In_Chorasmian
     In_Elymaic
     In_Brahmi
     In_Kaithi
@@ -772,24 +806,31 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     In_Ahom
     In_Dogra
     In_Warang_Citi
+    In_Dives_Akuru
     In_Nandinagari
     In_Zanabazar_Square
     In_Soyombo
+    In_Unified_Canadian_Aboriginal_Syllabics_Extended_A
     In_Pau_Cin_Hau
+    In_Devanagari_Extended_A
     In_Bhaiksuki
     In_Marchen
     In_Masaram_Gondi
     In_Gunjala_Gondi
     In_Makasar
+    In_Kawi
+    In_Lisu_Supplement
     In_Tamil_Supplement
     In_Cuneiform
     In_Cuneiform_Numbers_and_Punctuation
     In_Early_Dynastic_Cuneiform
+    In_Cypro_Minoan
     In_Egyptian_Hieroglyphs
     In_Egyptian_Hieroglyph_Format_Controls
     In_Anatolian_Hieroglyphs
     In_Bamum_Supplement
     In_Mro
+    In_Tangsa
     In_Bassa_Vah
     In_Pahawh_Hmong
     In_Medefaidrin
@@ -797,23 +838,33 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     In_Ideographic_Symbols_and_Punctuation
     In_Tangut
     In_Tangut_Components
+    In_Khitan_Small_Script
+    In_Tangut_Supplement
+    In_Kana_Extended_B
     In_Kana_Supplement
     In_Kana_Extended_A
     In_Small_Kana_Extension
     In_Nushu
     In_Duployan
     In_Shorthand_Format_Controls
+    In_Znamenny_Musical_Notation
     In_Byzantine_Musical_Symbols
     In_Musical_Symbols
     In_Ancient_Greek_Musical_Notation
+    In_Kaktovik_Numerals
     In_Mayan_Numerals
     In_Tai_Xuan_Jing_Symbols
     In_Counting_Rod_Numerals
     In_Mathematical_Alphanumeric_Symbols
     In_Sutton_SignWriting
+    In_Latin_Extended_G
     In_Glagolitic_Supplement
+    In_Cyrillic_Extended_D
     In_Nyiakeng_Puachue_Hmong
+    In_Toto
     In_Wancho
+    In_Nag_Mundari
+    In_Ethiopic_Extended_B
     In_Mende_Kikakui
     In_Adlam
     In_Indic_Siyaq_Numbers
@@ -834,12 +885,15 @@ Onigmo (Oniguruma-mod) Unicode Properties  Version 6.2.1    2019/07/28
     In_Supplemental_Symbols_and_Pictographs
     In_Chess_Symbols
     In_Symbols_and_Pictographs_Extended_A
+    In_Symbols_for_Legacy_Computing
     In_CJK_Unified_Ideographs_Extension_B
     In_CJK_Unified_Ideographs_Extension_C
     In_CJK_Unified_Ideographs_Extension_D
     In_CJK_Unified_Ideographs_Extension_E
     In_CJK_Unified_Ideographs_Extension_F
     In_CJK_Compatibility_Ideographs_Supplement
+    In_CJK_Unified_Ideographs_Extension_G
+    In_CJK_Unified_Ideographs_Extension_H
     In_Tags
     In_Variation_Selectors_Supplement
     In_Supplementary_Private_Use_Area_A
diff --git a/lib/onigmo/enc/unicode/casefold.h b/lib/onigmo/enc/unicode/casefold.h
index 5497e5afe04..cf2fd4a90c7 100644
--- a/lib/onigmo/enc/unicode/casefold.h
+++ b/lib/onigmo/enc/unicode/casefold.h
@@ -2,19 +2,19 @@
 /* Generated by tool/case-folding.rb */
 
 #if defined ONIG_UNICODE_VERSION_STRING && !( \
-      ONIG_UNICODE_VERSION_MAJOR == 12 && \
-      ONIG_UNICODE_VERSION_MINOR == 1 && \
+      ONIG_UNICODE_VERSION_MAJOR == 15 && \
+      ONIG_UNICODE_VERSION_MINOR == 0 && \
       ONIG_UNICODE_VERSION_TEENY == 0 && \
       1)
 # error ONIG_UNICODE_VERSION_STRING mismatch
 #endif
-#define ONIG_UNICODE_VERSION_STRING "12.1.0"
-#define ONIG_UNICODE_VERSION_MAJOR 12
-#define ONIG_UNICODE_VERSION_MINOR 1
+#define ONIG_UNICODE_VERSION_STRING "15.0.0"
+#define ONIG_UNICODE_VERSION_MAJOR 15
+#define ONIG_UNICODE_VERSION_MINOR 0
 #define ONIG_UNICODE_VERSION_TEENY 0
 
 static const CaseFold_11_Type CaseFold_11_Table[] = {
-#define CaseFold (*(CaseFold_11_Type (*)[1485])(CaseFold_11_Table+0))
+#define CaseFold (*(CaseFold_11_Type (*)[1528])(CaseFold_11_Table+0))
   {0x0041, {1|F|D, {0x0061}}},
   {0x0042, {1|F|D, {0x0062}}},
   {0x0043, {1|F|D, {0x0063}}},
@@ -973,6 +973,7 @@ static const CaseFold_11_Type CaseFold_11_Table[] = {
   {0x2c2c, {1|F|D, {0x2c5c}}},
   {0x2c2d, {1|F|D, {0x2c5d}}},
   {0x2c2e, {1|F|D, {0x2c5e}}},
+  {0x2c2f, {1|F|D, {0x2c5f}}},
   {0x2c60, {1|F|D, {0x2c61}}},
   {0x2c62, {1|F|D, {0x026b}}},
   {0x2c63, {1|F|D, {0x1d7d}}},
@@ -1153,10 +1154,17 @@ static const CaseFold_11_Type CaseFold_11_Table[] = {
   {0xa7ba, {1|F|D, {0xa7bb}}},
   {0xa7bc, {1|F|D, {0xa7bd}}},
   {0xa7be, {1|F|D, {0xa7bf}}},
+  {0xa7c0, {1|F|D, {0xa7c1}}},
   {0xa7c2, {1|F|D, {0xa7c3}}},
   {0xa7c4, {1|F|D, {0xa794}}},
   {0xa7c5, {1|F|D, {0x0282}}},
   {0xa7c6, {1|F|D, {0x1d8e}}},
+  {0xa7c7, {1|F|D, {0xa7c8}}},
+  {0xa7c9, {1|F|D, {0xa7ca}}},
+  {0xa7d0, {1|F|D, {0xa7d1}}},
+  {0xa7d6, {1|F|D, {0xa7d7}}},
+  {0xa7d8, {1|F|D, {0xa7d9}}},
+  {0xa7f5, {1|F|D, {0xa7f6}}},
   {0xab70, {1|F|U, {0x13a0}}},
   {0xab71, {1|F|U, {0x13a1}}},
   {0xab72, {1|F|U, {0x13a2}}},
@@ -1351,6 +1359,41 @@ static const CaseFold_11_Type CaseFold_11_Table[] = {
   {0x104d1, {1|F|D, {0x104f9}}},
   {0x104d2, {1|F|D, {0x104fa}}},
   {0x104d3, {1|F|D, {0x104fb}}},
+  {0x10570, {1|F|D, {0x10597}}},
+  {0x10571, {1|F|D, {0x10598}}},
+  {0x10572, {1|F|D, {0x10599}}},
+  {0x10573, {1|F|D, {0x1059a}}},
+  {0x10574, {1|F|D, {0x1059b}}},
+  {0x10575, {1|F|D, {0x1059c}}},
+  {0x10576, {1|F|D, {0x1059d}}},
+  {0x10577, {1|F|D, {0x1059e}}},
+  {0x10578, {1|F|D, {0x1059f}}},
+  {0x10579, {1|F|D, {0x105a0}}},
+  {0x1057a, {1|F|D, {0x105a1}}},
+  {0x1057c, {1|F|D, {0x105a3}}},
+  {0x1057d, {1|F|D, {0x105a4}}},
+  {0x1057e, {1|F|D, {0x105a5}}},
+  {0x1057f, {1|F|D, {0x105a6}}},
+  {0x10580, {1|F|D, {0x105a7}}},
+  {0x10581, {1|F|D, {0x105a8}}},
+  {0x10582, {1|F|D, {0x105a9}}},
+  {0x10583, {1|F|D, {0x105aa}}},
+  {0x10584, {1|F|D, {0x105ab}}},
+  {0x10585, {1|F|D, {0x105ac}}},
+  {0x10586, {1|F|D, {0x105ad}}},
+  {0x10587, {1|F|D, {0x105ae}}},
+  {0x10588, {1|F|D, {0x105af}}},
+  {0x10589, {1|F|D, {0x105b0}}},
+  {0x1058a, {1|F|D, {0x105b1}}},
+  {0x1058c, {1|F|D, {0x105b3}}},
+  {0x1058d, {1|F|D, {0x105b4}}},
+  {0x1058e, {1|F|D, {0x105b5}}},
+  {0x1058f, {1|F|D, {0x105b6}}},
+  {0x10590, {1|F|D, {0x105b7}}},
+  {0x10591, {1|F|D, {0x105b8}}},
+  {0x10592, {1|F|D, {0x105b9}}},
+  {0x10594, {1|F|D, {0x105bb}}},
+  {0x10595, {1|F|D, {0x105bc}}},
   {0x10c80, {1|F|D, {0x10cc0}}},
   {0x10c81, {1|F|D, {0x10cc1}}},
   {0x10c82, {1|F|D, {0x10cc2}}},
@@ -1500,7 +1543,7 @@ static const CaseFold_11_Type CaseFold_11_Table[] = {
   {0x1e91f, {1|F|D, {0x1e941}}},
   {0x1e920, {1|F|D, {0x1e942}}},
   {0x1e921, {1|F|D, {0x1e943}}},
-#define CaseFold_Locale (*(CaseFold_11_Type (*)[2])(CaseFold_11_Table+1485))
+#define CaseFold_Locale (*(CaseFold_11_Type (*)[2])(CaseFold_11_Table+1528))
   {0x0049, {1|F|D, {0x0069}}},
   {0x0130, {2|F|D, {0x0069, 0x0307}}},
 };
@@ -1508,7 +1551,7 @@ static const CaseFold_11_Type CaseFold_11_Table[] = {
 /* ANSI-C code produced by gperf version 3.1 */
 /* Command-line: gperf -7 -k1,2,3 -F,-1 -c -j1 -i1 -t -T -E -C -H onigenc_unicode_CaseFold_11_hash -N onigenc_unicode_CaseFold_11_lookup -n  */
 
-/* maximum key range = 3500, duplicates = 0 */
+/* maximum key range = 3080, duplicates = 0 */
 
 #ifdef __GNUC__
 __inline
@@ -1523,29 +1566,29 @@ onigenc_unicode_CaseFold_11_hash(const OnigCodePoint code)
 {
   static const unsigned short asso_values[] =
     {
-         5,  273,    4,    8,    3,    1,   86,    9,    2,  289,
-       290,    3, 3510, 3510, 3510, 3510, 3510, 3510, 3510, 3510,
-      3510, 3510, 3510, 3510, 3510,   50, 3510, 3510, 3510, 3510,
-      3510, 3510, 3510,  225, 3510, 3510, 3510, 3510, 3510,   28,
-      3510, 3510, 3510, 3510, 3510, 3510, 3510, 3510, 3510,  394,
-      3510, 3510, 3510, 3510, 3510, 3510, 3510,   47, 3510, 3510,
-       255,   40,  286,    1, 3510, 3510,  599,    8, 3510, 3510,
-      3510, 3510, 3510,  282, 3510, 3510,  267,  667,  473,   39,
-      2019,  189,   47,  175, 2001,  107, 1626,    6,   12,   25,
-      1961,  678, 1128,  526, 1945,  148, 1923,  371, 1720,  134,
-      1857,   80, 1375,   66, 1705,  300, 1635,  445, 1611,  472,
-      1795,  216, 1303,  499, 1552,  270, 1511,  243,  121,  619,
-      1284,  540,  875,  592, 1484,  567,  412,  703, 1692,  387,
-      1782,  781, 1767,  664, 1718,  648, 1316,  608, 1647,  715,
-      1592,  771, 1544, 1029, 1563,  887, 1296,  861, 1194,  978,
-        95,  899, 1257,  835, 1335,  765, 1529,  984,  862,  938,
-      1460,  759,  329, 1079, 1159,  940,  234, 1101, 1204,  990,
-       949, 1493,   92, 1438,   77, 1391,    7, 1073,   44, 1377,
-         2, 1435,    4, 1321,  428, 1274,  332, 1206,   11, 1426,
-        46,  478,  200, 1502,   31, 1400,  153, 1663,  352, 1820,
-       229, 1733,  265, 1405,  315, 1879,  198
+         1, 3085,    2,   20,    3,  307,  200,    8,   31,  159,
+         2,  253,   33,  967, 3085, 3085, 3085, 3085, 3085, 3085,
+      3085, 3085, 3085, 3085, 3085, 3085, 3085,   30, 3085, 3085,
+      3085, 3085, 3085, 3085, 3085,  352, 3085, 3085, 3085, 3085,
+      3085,   93, 3085, 3085, 3085, 3085, 3085, 3085, 3085, 3085,
+      3085,  407, 3085, 3085, 3085, 3085, 3085, 3085, 3085,  201,
+      3085, 3085,   14,   13,  373,    1, 3085, 3085,  503,   19,
+      3085, 3085, 3085, 3085, 3085,  325, 3085, 3085,  290, 1064,
+       484,   28, 1906,  447,  272,  414, 2002,   79,  905,    5,
+        11,   22, 2024,  623,  761,  617, 1893,   45, 1874,  113,
+      1856,  255, 1823,   96, 1463,   62, 1841,  130, 1798,  331,
+      1771,  238, 1977,  147, 1387,  464, 1691,  187, 1639,  181,
+       366,  580, 1331,  508, 1287,  547, 1583,  541,  400,  783,
+      1944,  657, 1850,  932, 1785,  858, 1645,  681, 1412,  722,
+      1622,  972, 1306,  807, 1942, 1282,  283, 1218, 1557, 1055,
+      1406, 1258, 1401, 1168, 1327,  864,  893, 1123, 1714, 1195,
+      1885, 1083, 2016, 1232,  823,  678, 1420, 1017,  155, 1261,
+        86, 1351,  794, 1929,   51, 1525,   50,  221,    4, 1383,
+       196,  325,    1, 1562,  102, 1441,    3, 1356,  226, 1304,
+       271, 1516,   68, 1752,   37, 1469,   51, 1920,  143, 2059,
+       198, 2095,  370, 2069,  137,  718,  407, 1926,  136
     };
-  return asso_values[bits_of(code, 2)+79] + asso_values[bits_of(code, 1)] + asso_values[bits_of(code, 0)];
+  return asso_values[bits_of(code, 2)+81] + asso_values[bits_of(code, 1)+2] + asso_values[bits_of(code, 0)];
 }
 
 static const CodePointList3 *
@@ -1555,2028 +1598,2021 @@ onigenc_unicode_CaseFold_11_lookup(const OnigCodePoint code)
     {
       MIN_CODE_VALUE = 0x41,
       MAX_CODE_VALUE = 0x1e921,
-      TOTAL_KEYWORDS = 1487,
+      TOTAL_KEYWORDS = 1530,
       MIN_WORD_LENGTH = 3,
       MAX_WORD_LENGTH = 3,
-      MIN_HASH_VALUE = 10,
-      MAX_HASH_VALUE = 3509
+      MIN_HASH_VALUE = 5,
+      MAX_HASH_VALUE = 3084
     };
 
   static const short wordlist[] =
     {
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1,
-      /*0x1fe7*/ 848,
-      /*0x10408*/ 1268,
+      -1, -1, -1, -1, -1,
+      /*0x1fe9*/ 850,
+      -1,
       /*0x1f88*/ 775,
       /*0x0408*/ 305,
-      /*0x0208*/ 194,
       /*0x0108*/ 61,
-      /*0xab88*/ 1166,
-      /*0x10409*/ 1269,
+      /*0x10408*/ 1276,
+      -1,
+      /*0xab88*/ 1174,
       /*0x1f89*/ 776,
       /*0x0409*/ 306,
-      /*0x0388*/ 235,
-      /*0x2c67*/ 962,
-      /*0xab89*/ 1167,
+      /*0x2c69*/ 964,
+      /*0x10409*/ 1277,
       /*0x2c08*/ 919,
-      -1,
-      /*0x0189*/ 126,
-      /*0x0389*/ 236,
-      -1,
-      /*0x2c6d*/ 965,
+      /*0xab89*/ 1175,
+      /*0x1e88*/ 653,
+      /*0x1e08*/ 589,
+      -1, -1,
       /*0x2c09*/ 920,
-      /*0x1040a*/ 1270,
       /*0x1f8a*/ 777,
       /*0x040a*/ 307,
-      /*0x020a*/ 195,
       /*0x010a*/ 62,
-      /*0xab8a*/ 1168,
-      /*0x2c88*/ 977,
-      /*0x1ff3*/ 855,
-      /*0x018a*/ 127,
-      /*0x038a*/ 237,
-      -1,
-      /*0x2ced*/ 1024,
-      /*0x2c0a*/ 921,
-      -1,
-      /*0x10400*/ 1260,
+      /*0x1040a*/ 1278,
+      /*0x2c88*/ 978,
+      /*0xab8a*/ 1176,
       /*0x1f80*/ 767,
       /*0x0400*/ 297,
-      /*0x0200*/ 190,
       /*0x0100*/ 57,
-      /*0xab80*/ 1158,
-      /*0x1fe3*/ 845,
-      /*0x1e88*/ 653,
-      /*0x10403*/ 1263,
-      /*0x1f83*/ 770,
-      /*0x0403*/ 300,
-      /*0x2c8a*/ 978,
-      /*0x2c00*/ 911,
-      /*0xab83*/ 1161,
-      /*0x1c88*/ 538,
-      /*0x10c88*/ 1344,
-      /*0x2183*/ 884,
-      /*0x2c63*/ 960,
-      /*0x1e908*/ 1459,
-      /*0x2c6f*/ 967,
-      /*0x2c03*/ 914,
-      /*0x10c89*/ 1345,
-      -1, -1,
-      /*0x1e909*/ 1460,
-      /*0x2c80*/ 973,
+      /*0x10400*/ 1268,
+      /*0x2c0a*/ 921,
+      /*0xab80*/ 1166,
       /*0x1e8a*/ 654,
-      /*0x10418*/ 1284,
+      /*0x1e0a*/ 590,
+      /*0x10c88*/ 1387,
+      /*0x0508*/ 425,
+      /*0x2c00*/ 911,
+      -1,
+      /*0x1e80*/ 649,
+      /*0x1e00*/ 585,
+      /*0x10c89*/ 1388,
+      /*0x2c8a*/ 979,
+      -1,
+      /*0x1f90*/ 783,
+      /*0x0410*/ 313,
+      /*0x0110*/ 65,
+      /*0x10410*/ 1284,
+      /*0x2c80*/ 974,
+      /*0xab90*/ 1182,
+      /*0x1ff3*/ 855,
+      -1,
+      /*0x10c8a*/ 1389,
+      /*0x050a*/ 426,
+      /*0x2c10*/ 927,
+      /*0xa780*/ 1106,
+      /*0x1e90*/ 657,
+      /*0x1e10*/ 593,
+      /*0x10c80*/ 1379,
+      /*0x0500*/ 421,
+      -1,
       /*0x1f98*/ 791,
       /*0x0418*/ 321,
-      /*0x0218*/ 202,
       /*0x0118*/ 69,
-      /*0xab98*/ 1182,
+      /*0x10418*/ 1292,
+      /*0x2c90*/ 982,
+      /*0xab98*/ 1190,
       -1,
-      /*0x10c8a*/ 1346,
-      /*0x0198*/ 137,
-      /*0x0398*/ 249,
-      /*0x1e90a*/ 1461,
-      /*0xa780*/ 1105,
+      /*0x00df*/ 56,
+      /*0x00dd*/ 54,
+      /*0x10571*/ 1345,
       /*0x2c18*/ 935,
-      /*0x1e80*/ 649,
-      /*0x10416*/ 1282,
-      /*0x1f96*/ 789,
-      /*0x0416*/ 319,
-      /*0x0216*/ 201,
-      /*0x0116*/ 68,
-      /*0xab96*/ 1180,
-      /*0x1c80*/ 530,
-      /*0x10c80*/ 1336,
-      /*0x0196*/ 135,
-      /*0x0396*/ 247,
-      /*0x1e900*/ 1451,
-      /*0x2c98*/ 985,
-      /*0x2c16*/ 933,
-      -1,
-      /*0x1c83*/ 533,
-      /*0x10c83*/ 1339,
-      /*0x1fc7*/ 830,
-      -1,
-      /*0x1e903*/ 1454,
-      /*0x0147*/ 91,
-      /*0x0047*/ 6,
-      -1, -1,
-      /*0x01c7*/ 159,
-      /*0xa798*/ 1114,
-      /*0x2c96*/ 984,
+      /*0xa790*/ 1112,
       /*0x1e98*/ 662,
-      /*0x10406*/ 1266,
+      /*0x1e18*/ 597,
+      /*0x10c90*/ 1395,
+      /*0x0510*/ 429,
+      /*0x2c6f*/ 968,
       /*0x1f86*/ 773,
       /*0x0406*/ 303,
-      /*0x0206*/ 193,
       /*0x0106*/ 60,
-      /*0xab86*/ 1164,
-      /*0x1c98*/ 547,
-      /*0x10c98*/ 1360,
-      /*0x0186*/ 124,
-      /*0x0386*/ 234,
-      /*0x1e918*/ 1475,
-      /*0xa796*/ 1113,
-      /*0x2c06*/ 917,
-      /*0x1e96*/ 660,
-      /*0x10427*/ 1299,
-      /*0x1fa7*/ 806,
-      /*0x0427*/ 336,
-      -1, -1,
-      /*0xaba7*/ 1197,
-      /*0x1c96*/ 545,
-      /*0x10c96*/ 1358,
-      /*0x01a7*/ 145,
-      /*0x03a7*/ 263,
-      /*0x1e916*/ 1473,
-      /*0x2c86*/ 976,
-      /*0x2c27*/ 950,
-      /*0x10414*/ 1280,
-      /*0x1f94*/ 787,
-      /*0x0414*/ 317,
-      /*0x0214*/ 200,
-      /*0x0114*/ 67,
-      /*0xab94*/ 1178,
-      -1, -1,
-      /*0x0194*/ 134,
-      /*0x0394*/ 245,
+      /*0x10406*/ 1274,
+      /*0x2c98*/ 986,
+      /*0xab86*/ 1172,
+      /*0x10573*/ 1347,
+      /*0x1fd9*/ 841,
+      /*0x0059*/ 23,
       -1,
-      /*0xa786*/ 1108,
-      /*0x2c14*/ 931,
+      /*0x2c06*/ 917,
+      /*0xa798*/ 1115,
       /*0x1e86*/ 652,
-      /*0x10410*/ 1276,
-      /*0x1f90*/ 783,
-      /*0x0410*/ 313,
-      /*0x0210*/ 198,
-      /*0x0110*/ 65,
-      /*0xab90*/ 1174,
-      /*0x1c86*/ 536,
-      /*0x10c86*/ 1342,
-      /*0x0190*/ 131,
-      /*0x0390*/ 241,
-      /*0x1e906*/ 1457,
-      /*0x2c94*/ 983,
-      /*0x2c10*/ 927,
-      -1,
-      /*0x03f5*/ 290,
-      /*0xfb00*/ 1222,
+      /*0x1e06*/ 588,
+      /*0x10c98*/ 1403,
+      /*0x0518*/ 433,
       -1,
-      /*0x2c75*/ 970,
+      /*0x1f96*/ 789,
+      /*0x0416*/ 319,
+      /*0x0116*/ 68,
+      /*0x10416*/ 1290,
+      /*0x2c86*/ 977,
+      /*0xab96*/ 1188,
+      /*0x1fe7*/ 848,
       -1, -1,
-      /*0x1ca7*/ 562,
-      /*0x10ca7*/ 1375,
-      -1,
-      /*0xfb03*/ 1225,
-      -1,
-      /*0x2c90*/ 981,
-      /*0x1e94*/ 659,
-      /*0x10404*/ 1264,
-      /*0x1f84*/ 771,
-      /*0x0404*/ 301,
-      /*0x0204*/ 192,
-      /*0x0104*/ 59,
-      /*0xab84*/ 1162,
-      /*0x1c94*/ 543,
-      /*0x10c94*/ 1356,
-      /*0x0184*/ 123,
+      /*0x00d9*/ 50,
+      /*0x2c16*/ 933,
+      /*0xa786*/ 1109,
+      /*0x1e96*/ 660,
+      /*0x1e16*/ 596,
+      /*0x10c86*/ 1385,
+      /*0x0506*/ 424,
+      /*0x2c67*/ 963,
+      /*0x1f92*/ 785,
+      /*0x0412*/ 315,
+      /*0x0112*/ 66,
+      /*0x10412*/ 1286,
+      /*0x2c96*/ 985,
+      /*0xab92*/ 1184,
+      -1, -1, -1, -1,
+      /*0x2c12*/ 929,
+      /*0xa796*/ 1114,
+      /*0x1e92*/ 658,
+      /*0x1e12*/ 594,
+      /*0x10c96*/ 1401,
+      /*0x0516*/ 432,
       -1,
-      /*0x1e914*/ 1471,
-      /*0xa790*/ 1111,
-      /*0x2c04*/ 915,
-      /*0x1e90*/ 657,
-      /*0x10402*/ 1262,
-      /*0x1f82*/ 769,
-      /*0x0402*/ 299,
-      /*0x0202*/ 191,
-      /*0x0102*/ 58,
-      /*0xab82*/ 1160,
-      /*0x1c90*/ 539,
-      /*0x10c90*/ 1352,
-      /*0x0182*/ 122,
+      /*0x1f9a*/ 793,
+      /*0x041a*/ 323,
+      /*0x011a*/ 70,
+      /*0x1041a*/ 1294,
+      /*0x2c92*/ 983,
+      /*0xab9a*/ 1192,
       -1,
-      /*0x1e910*/ 1467,
-      /*0x2c84*/ 975,
-      /*0x2c02*/ 913,
+      /*0x1ffb*/ 862,
       /*0x017f*/ 120,
-      -1,
-      /*0xfb16*/ 1232,
-      -1, -1,
-      /*0x03ff*/ 296,
-      /*0x01f1*/ 181,
-      /*0x03f1*/ 288,
-      /*0x2c7f*/ 972,
-      -1, -1,
-      /*0xa784*/ 1107,
-      /*0x2c82*/ 974,
-      /*0x1e84*/ 651,
-      /*0x10420*/ 1292,
+      /*0x017b*/ 118,
+      /*0x2c1a*/ 937,
+      /*0xa792*/ 1113,
+      /*0x1e9a*/ 664,
+      /*0x1e1a*/ 598,
+      /*0x10c92*/ 1397,
+      /*0x0512*/ 430,
+      /*0x2c7f*/ 973,
       /*0x1fa0*/ 799,
       /*0x0420*/ 329,
-      /*0x0220*/ 206,
       /*0x0120*/ 73,
-      /*0xaba0*/ 1190,
-      /*0x1c84*/ 534,
-      /*0x10c84*/ 1340,
-      /*0x01a0*/ 141,
-      /*0x03a0*/ 257,
-      /*0x1e904*/ 1455,
-      /*0xa782*/ 1106,
-      /*0x2c20*/ 943,
-      /*0x1e82*/ 650,
-      /*0x1ff9*/ 860,
-      /*0xfb06*/ 1228,
-      -1,
-      /*0x0179*/ 117,
+      /*0x10420*/ 1300,
+      /*0x2c9a*/ 987,
+      /*0xaba0*/ 1198,
+      /*0x2c75*/ 971,
       -1,
       /*0x1fd7*/ 839,
-      /*0x1c82*/ 532,
-      /*0x10c82*/ 1338,
-      /*0x03f9*/ 292,
       /*0x0057*/ 21,
-      /*0x1e902*/ 1453,
-      /*0x2ca0*/ 989,
-      /*0x01d7*/ 168,
-      /*0x10426*/ 1298,
-      /*0x1fa6*/ 805,
-      /*0x0426*/ 335,
-      /*0x0226*/ 209,
-      /*0x0126*/ 76,
-      /*0xaba6*/ 1196,
-      -1, -1,
-      /*0x01a6*/ 144,
-      /*0x03a6*/ 262,
-      -1,
-      /*0xa7a0*/ 1118,
-      /*0x2c26*/ 949,
+      /*0x2c20*/ 943,
+      /*0xa79a*/ 1116,
       /*0x1ea0*/ 667,
-      /*0x13f9*/ 525,
-      /*0xfb14*/ 1230,
+      /*0x1e20*/ 601,
+      /*0x10c9a*/ 1405,
+      /*0x051a*/ 434,
+      /*0x0388*/ 235,
       -1, -1,
-      /*0x1e08*/ 589,
+      /*0x037f*/ 233,
       -1,
-      /*0x1ca0*/ 555,
-      /*0x10ca0*/ 1368,
+      /*0x2ca0*/ 990,
+      /*0x0389*/ 236,
+      /*0x1057f*/ 1358,
+      /*0xa7f5*/ 1149,
+      -1, -1, -1,
+      /*0xa7a0*/ 1119,
       -1,
-      /*0x1ffb*/ 862,
-      /*0x1e920*/ 1483,
-      /*0x2ca6*/ 992,
-      /*0x017b*/ 118,
-      /*0x10424*/ 1296,
+      /*0x10575*/ 1349,
+      /*0x10ca0*/ 1411,
+      /*0x0520*/ 437,
+      /*0x038a*/ 237,
+      /*0x1fa6*/ 805,
+      /*0x0426*/ 335,
+      /*0x0126*/ 76,
+      /*0x10426*/ 1306,
+      -1,
+      /*0xaba6*/ 1204,
       /*0x1fa4*/ 803,
       /*0x0424*/ 333,
-      /*0x0224*/ 208,
       /*0x0124*/ 75,
-      /*0xaba4*/ 1194,
-      -1, -1,
-      /*0x01a4*/ 143,
-      /*0x03a4*/ 260,
-      /*0x1e0a*/ 590,
-      /*0xa7a6*/ 1121,
-      /*0x2c24*/ 947,
+      /*0x10424*/ 1304,
+      /*0x2c26*/ 949,
+      /*0xaba4*/ 1202,
       /*0x1ea6*/ 670,
-      /*0x037f*/ 233,
-      -1, -1, -1, -1, -1,
-      /*0x1ca6*/ 561,
-      /*0x10ca6*/ 1374,
-      /*0x1f08*/ 715,
-      /*0x13fb*/ 527,
-      /*0x1e00*/ 585,
-      /*0x2ca4*/ 991,
-      /*0x0508*/ 425,
-      /*0x1f6d*/ 764,
-      /*0x1f09*/ 716,
-      /*0xfb04*/ 1226,
-      /*0x1041a*/ 1286,
-      /*0x1f9a*/ 793,
-      /*0x041a*/ 323,
-      /*0x021a*/ 203,
-      /*0x011a*/ 70,
-      /*0xab9a*/ 1184,
-      -1, -1,
-      /*0xa7a4*/ 1120,
-      /*0x039a*/ 251,
+      /*0x1e26*/ 604,
+      /*0x03f1*/ 288,
+      /*0x1fe3*/ 845,
+      /*0x2c24*/ 947,
+      /*0x1ff7*/ 858,
       /*0x1ea4*/ 669,
-      /*0x1f0a*/ 717,
-      /*0x2c1a*/ 937,
-      /*0xfb02*/ 1224,
-      /*0x048a*/ 362,
-      /*0x050a*/ 426,
-      -1,
-      /*0x1ca4*/ 559,
-      /*0x10ca4*/ 1372,
-      /*0x017d*/ 119,
-      /*0x10c7*/ 522,
-      /*0x1e18*/ 597,
-      -1, -1,
-      /*0x03fd*/ 294,
-      /*0x2c9a*/ 986,
-      -1, -1,
-      /*0x0480*/ 361,
-      /*0x0500*/ 421,
-      /*0x1fd3*/ 837,
-      -1,
-      /*0x1f6f*/ 766,
-      /*0x1feb*/ 852,
-      /*0x0053*/ 17,
-      /*0x1e16*/ 596,
+      /*0x1e24*/ 603,
       -1,
-      /*0x01d3*/ 166,
-      /*0xa79a*/ 1115,
+      /*0x2ca6*/ 993,
+      /*0x0390*/ 241,
+      /*0x0208*/ 194,
+      /*0x1c88*/ 538,
+      /*0x2c63*/ 961,
       -1,
-      /*0x1e9a*/ 664,
+      /*0x2ca4*/ 992,
+      /*0xa7a6*/ 1122,
       -1, -1,
-      /*0x13fd*/ 529,
-      /*0x2c6b*/ 964,
-      -1,
-      /*0x10a7*/ 491,
-      /*0x1c9a*/ 549,
-      /*0x10c9a*/ 1362,
-      -1,
-      /*0x00df*/ 56,
-      /*0x1e91a*/ 1477,
-      /*0x1f18*/ 723,
-      /*0x1ff7*/ 858,
+      /*0x10ca6*/ 1417,
+      /*0x0526*/ 440,
       -1,
-      /*0x0498*/ 369,
-      /*0x0518*/ 433,
-      /*0x2ceb*/ 1023,
+      /*0xa7a4*/ 1121,
       -1, -1,
-      /*0x01f7*/ 185,
-      /*0x03f7*/ 291,
-      /*0x1e06*/ 588,
-      /*0x1f5f*/ 758,
-      -1,
-      /*0x00dd*/ 54,
+      /*0x10ca4*/ 1415,
+      /*0x0524*/ 439,
+      /*0x0398*/ 249,
+      /*0x020a*/ 195,
+      /*0x0460*/ 345,
+      /*0x0160*/ 104,
       -1, -1,
-      /*0x00c7*/ 33,
-      /*0x0496*/ 368,
-      /*0x0516*/ 432,
-      /*0x10412*/ 1278,
-      /*0x1f92*/ 785,
-      /*0x0412*/ 315,
-      /*0x0212*/ 199,
-      /*0x0112*/ 66,
-      /*0xab92*/ 1176,
-      /*0x24c7*/ 902,
-      /*0x1f5d*/ 757,
+      /*0x1feb*/ 852,
+      /*0x0200*/ 190,
+      /*0x1c80*/ 530,
+      /*0x13fb*/ 527,
       -1,
-      /*0x0392*/ 243,
+      /*0x2c60*/ 959,
+      /*0x10577*/ 1351,
+      /*0x1ee0*/ 699,
+      /*0x1e60*/ 633,
       -1,
-      /*0x104c7*/ 1323,
-      /*0x2c12*/ 929,
-      /*0x04c7*/ 393,
-      /*0x0547*/ 467,
+      /*0x2c6b*/ 965,
+      /*0x0386*/ 234,
+      /*0x1f9e*/ 797,
+      /*0x041e*/ 327,
+      /*0x011e*/ 72,
+      /*0x1041e*/ 1298,
+      /*0x2ce0*/ 1022,
+      /*0xab9e*/ 1196,
+      /*0x0210*/ 198,
+      /*0x1c90*/ 539,
+      -1,
+      /*0x2ceb*/ 1024,
+      /*0x2c1e*/ 941,
+      -1,
+      /*0x1e9e*/ 666,
+      /*0x1e1e*/ 600,
       -1, -1,
-      /*0x1fb2*/ 815,
+      /*0x0396*/ 247,
+      /*0x1f94*/ 787,
+      /*0x0414*/ 317,
+      /*0x0114*/ 67,
+      /*0x10414*/ 1288,
+      /*0x2c9e*/ 989,
+      /*0xab94*/ 1186,
+      /*0x0218*/ 202,
+      /*0x1c98*/ 547,
+      -1, -1,
+      /*0x2c14*/ 931,
+      /*0xa79e*/ 1118,
+      /*0x1e94*/ 659,
       /*0x1e14*/ 595,
-      /*0x0232*/ 215,
-      /*0x0132*/ 81,
-      /*0xabb2*/ 1208,
+      /*0x10c9e*/ 1409,
+      /*0x051e*/ 436,
+      /*0x0392*/ 243,
+      /*0x1f83*/ 770,
+      /*0x0403*/ 300,
+      /*0x048a*/ 362,
+      /*0x10403*/ 1271,
+      /*0x2c94*/ 984,
+      /*0xab83*/ 1169,
+      /*0x0206*/ 193,
+      /*0x1c86*/ 536,
+      /*0x0480*/ 361,
+      /*0x2c6d*/ 966,
+      /*0x2c03*/ 914,
+      /*0x1e908*/ 1502,
+      /*0x0041*/ 0,
+      /*0x0141*/ 88,
+      /*0x10c94*/ 1399,
+      /*0x0514*/ 431,
+      /*0x039a*/ 251,
+      /*0x1e909*/ 1503,
+      /*0x2183*/ 884,
+      -1,
+      /*0x2ced*/ 1025,
+      -1,
+      /*0x03ff*/ 296,
+      /*0x0216*/ 201,
+      /*0x1c96*/ 545,
+      /*0x0490*/ 365,
       -1, -1,
-      /*0x01b2*/ 151,
-      /*0x2c92*/ 982,
-      /*0x0506*/ 424,
+      /*0x1e90a*/ 1504,
+      /*0x03f5*/ 290,
+      /*0x00c1*/ 27,
+      /*0x10c83*/ 1382,
+      -1,
+      /*0x03a0*/ 257,
+      /*0x1e900*/ 1494,
       -1, -1, -1, -1, -1,
-      /*0x1e10*/ 593,
+      /*0x0212*/ 199,
+      /*0x1c92*/ 541,
+      /*0x0498*/ 369,
+      /*0x0541*/ 461,
+      -1,
+      /*0x0189*/ 126,
       -1, -1, -1, -1, -1,
-      /*0xa792*/ 1112,
+      /*0x1e910*/ 1510,
       -1,
-      /*0x1e92*/ 658,
-      /*0x2cb2*/ 998,
-      /*0x1faf*/ 814,
-      /*0x042f*/ 344,
+      /*0x1fe4*/ 846,
+      /*0x0464*/ 347,
+      /*0x0164*/ 106,
+      /*0x018a*/ 127,
+      /*0x021a*/ 203,
+      /*0x1c9a*/ 549,
+      /*0x1f9c*/ 795,
+      /*0x041c*/ 325,
+      /*0x011c*/ 71,
+      /*0x1041c*/ 1296,
+      /*0x2c64*/ 962,
+      /*0xab9c*/ 1194,
+      /*0x1ee4*/ 701,
+      /*0x1e64*/ 635,
+      /*0x03a6*/ 262,
+      /*0x1e918*/ 1518,
+      /*0x2c1c*/ 939,
+      -1,
+      /*0x01f1*/ 181,
+      /*0x1e1c*/ 599,
+      /*0x03a4*/ 260,
+      /*0x0220*/ 206,
+      /*0x1ca0*/ 555,
+      /*0x0496*/ 368,
       -1, -1,
-      /*0xabaf*/ 1205,
-      /*0x1c92*/ 541,
-      /*0x10c92*/ 1354,
-      /*0x01af*/ 149,
+      /*0x0190*/ 131,
+      /*0x2c9c*/ 988,
+      -1, -1, -1,
+      /*0x03f7*/ 291,
+      /*0x1e906*/ 1500,
       -1,
-      /*0x1e912*/ 1469,
-      /*0x0494*/ 367,
-      /*0x0514*/ 431,
-      /*0xa7b2*/ 1130,
+      /*0xa79c*/ 1117,
+      -1, -1,
+      /*0x10c9c*/ 1407,
+      /*0x051c*/ 435,
       -1,
-      /*0x1eb2*/ 676,
+      /*0x0492*/ 366,
+      /*0x1fa7*/ 806,
+      /*0x0427*/ 336,
+      /*0x0198*/ 137,
+      /*0x10427*/ 1307,
+      /*0x1ff9*/ 860,
+      /*0xaba7*/ 1205,
+      /*0x0179*/ 117,
       -1,
-      /*0x1fe9*/ 850,
-      /*0x1e04*/ 587,
+      /*0x1e916*/ 1516,
+      /*0x1f69*/ 760,
+      /*0x2c27*/ 950,
+      /*0x1f08*/ 715,
+      -1,
+      /*0x03e0*/ 279,
+      /*0x0226*/ 209,
+      /*0x1ca6*/ 561,
+      /*0x049a*/ 370,
+      /*0x1f09*/ 716,
+      -1,
+      /*0x0186*/ 124,
+      /*0x0224*/ 208,
+      /*0x1ca4*/ 559,
       -1, -1, -1,
-      /*0x1cb2*/ 573,
-      /*0x10cb2*/ 1386,
+      /*0x1e912*/ 1512,
+      /*0x01d9*/ 169,
       -1,
-      /*0x0490*/ 365,
-      /*0x0510*/ 429,
+      /*0x1f0a*/ 717,
       -1,
-      /*0x2c69*/ 963,
-      /*0x10a0*/ 484,
-      -1, -1,
-      /*0x1e02*/ 586,
-      /*0x1041c*/ 1288,
-      /*0x1f9c*/ 795,
-      /*0x041c*/ 325,
-      /*0x021c*/ 204,
-      /*0x011c*/ 71,
-      /*0xab9c*/ 1186,
-      -1, -1,
-      /*0x019c*/ 138,
-      /*0x039c*/ 253,
-      -1, -1,
-      /*0x2c1c*/ 939,
+      /*0x039e*/ 255,
+      /*0x10ca7*/ 1418,
       -1,
-      /*0x1caf*/ 570,
-      /*0x10caf*/ 1383,
-      -1, -1, -1, -1,
-      /*0x0504*/ 423,
+      /*0x04a0*/ 373,
+      /*0x1faf*/ 814,
+      /*0x042f*/ 344,
+      /*0x0196*/ 135,
+      -1,
+      /*0x10579*/ 1353,
+      /*0xabaf*/ 1213,
       -1, -1,
-      /*0x10a6*/ 490,
+      /*0x1e91a*/ 1520,
+      /*0x017d*/ 119,
+      /*0x2c2f*/ 958,
       -1,
-      /*0x2c9c*/ 987,
-      /*0x1e20*/ 601,
-      /*0x1041e*/ 1290,
-      /*0x1f9e*/ 797,
-      /*0x041e*/ 327,
-      /*0x021e*/ 205,
-      /*0x011e*/ 72,
-      /*0xab9e*/ 1188,
+      /*0xfb00*/ 1230,
+      /*0x0394*/ 245,
+      /*0x1f84*/ 771,
+      /*0x0404*/ 301,
+      /*0x0104*/ 59,
+      /*0x10404*/ 1272,
       -1,
-      /*0x0502*/ 422,
-      /*0x0470*/ 353,
-      /*0x039e*/ 255,
-      /*0x0170*/ 112,
-      /*0xa79c*/ 1116,
-      /*0x2c1e*/ 941,
+      /*0xab84*/ 1170,
+      -1, -1,
+      /*0x1f5f*/ 758,
+      /*0x1f5d*/ 757,
+      /*0x2c04*/ 915,
+      /*0x1e920*/ 1526,
+      /*0x1e84*/ 651,
+      /*0x1e04*/ 587,
+      -1, -1, -1,
+      /*0x10caf*/ 1426,
       -1,
-      /*0x01f0*/ 180,
-      /*0x03f0*/ 287,
+      /*0x04a6*/ 376,
+      /*0x1f18*/ 723,
+      /*0x2c84*/ 976,
+      -1,
+      /*0x021e*/ 205,
+      /*0x1c9e*/ 553,
+      /*0x04a4*/ 375,
+      /*0x1f6f*/ 766,
+      /*0x1057d*/ 1356,
+      /*0xa784*/ 1108,
       -1, -1,
-      /*0x2c70*/ 968,
+      /*0x10c84*/ 1383,
+      /*0x0504*/ 423,
+      /*0x1f82*/ 769,
+      /*0x0402*/ 299,
+      /*0x0102*/ 58,
+      /*0x10402*/ 1270,
       -1,
-      /*0x1c9c*/ 551,
-      /*0x10c9c*/ 1364,
+      /*0xab82*/ 1168,
+      /*0x01a0*/ 141,
+      /*0x0214*/ 200,
+      /*0x1c94*/ 543,
       -1,
-      /*0x10a4*/ 488,
-      /*0x1e91c*/ 1479,
-      /*0x2c9e*/ 988,
-      /*0x1e26*/ 604,
-      /*0x10422*/ 1294,
+      /*0x2c02*/ 913,
+      /*0x1f59*/ 755,
+      /*0x1e82*/ 650,
+      /*0x1e02*/ 586,
+      /*0x01d7*/ 168,
+      /*0x13f9*/ 525,
+      /*0xfb06*/ 1236,
       /*0x1fa2*/ 801,
       /*0x0422*/ 331,
-      /*0x0222*/ 207,
       /*0x0122*/ 74,
-      /*0xaba2*/ 1192,
-      /*0x04a0*/ 373,
-      /*0x0520*/ 437,
-      /*0x01a2*/ 142,
+      /*0x10422*/ 1302,
+      /*0x2c82*/ 975,
+      /*0xaba2*/ 1200,
       -1, -1,
-      /*0xa79e*/ 1117,
+      /*0x1c83*/ 533,
+      /*0x04e0*/ 405,
       /*0x2c22*/ 945,
-      /*0x1e9e*/ 666,
-      /*0x118a7*/ 1394,
-      -1, -1, -1, -1,
-      /*0x1ef0*/ 707,
-      /*0x1c9e*/ 553,
-      /*0x10c9e*/ 1366,
-      -1, -1,
-      /*0x1e91e*/ 1481,
-      /*0x2ca2*/ 990,
-      /*0x1e24*/ 603,
-      /*0x1040e*/ 1274,
-      /*0x1f8e*/ 781,
-      /*0x040e*/ 311,
-      /*0x020e*/ 197,
-      /*0x010e*/ 64,
-      /*0xab8e*/ 1172,
-      /*0x04a6*/ 376,
-      /*0x0526*/ 440,
-      /*0x018e*/ 129,
-      /*0x038e*/ 239,
-      /*0xff27*/ 1240,
-      /*0xa7a2*/ 1119,
-      /*0x2c0e*/ 925,
+      /*0xa782*/ 1107,
       /*0x1ea2*/ 668,
+      /*0x1e22*/ 602,
+      /*0x10c82*/ 1381,
+      /*0x0502*/ 422,
+      /*0xfb16*/ 1240,
+      -1,
+      /*0x0241*/ 220,
+      /*0x03e4*/ 281,
+      -1,
+      /*0x2ca2*/ 991,
       -1,
+      /*0x01a6*/ 144,
+      -1,
+      /*0x039c*/ 253,
+      /*0x049e*/ 372,
+      -1,
+      /*0xa7a2*/ 1120,
+      /*0x01a4*/ 143,
+      -1,
+      /*0x10ca2*/ 1413,
+      /*0x0522*/ 438,
+      -1,
+      /*0x10a0*/ 484,
+      /*0x13fd*/ 529,
+      -1, -1,
+      /*0x1f1a*/ 725,
+      /*0x2165*/ 873,
+      /*0x01f7*/ 185,
+      /*0x2169*/ 877,
+      /*0x2161*/ 869,
+      /*0x0494*/ 367,
       /*0x1faa*/ 809,
       /*0x042a*/ 339,
-      /*0x022a*/ 211,
       /*0x012a*/ 78,
-      /*0xabaa*/ 1200,
-      /*0x1ca2*/ 557,
-      /*0x10ca2*/ 1370,
+      /*0xa660*/ 1043,
       -1,
-      /*0x03aa*/ 266,
+      /*0xabaa*/ 1208,
+      -1, -1,
+      /*0x1e91e*/ 1524,
       -1,
-      /*0x2c8e*/ 980,
       /*0x2c2a*/ 953,
+      -1,
+      /*0x1eaa*/ 672,
+      /*0x1e2a*/ 606,
       -1, -1,
-      /*0x1e1a*/ 598,
-      -1, -1, -1,
-      /*0x04a4*/ 375,
-      /*0x0524*/ 439,
-      -1, -1, -1,
-      /*0x0370*/ 230,
-      /*0x2caa*/ 994,
-      /*0x1e8e*/ 656,
+      /*0x03a7*/ 263,
+      -1, -1,
+      /*0x01e0*/ 172,
+      /*0x03f9*/ 292,
+      /*0x2caa*/ 995,
+      /*0x021c*/ 204,
+      /*0x1c9c*/ 551,
+      /*0x10a6*/ 490,
+      /*0x1e914*/ 1514,
       -1,
+      /*0x04c1*/ 390,
+      /*0xa7aa*/ 1124,
+      /*0x104c1*/ 1325,
+      /*0x10a4*/ 488,
+      /*0x10caa*/ 1421,
+      /*0x052a*/ 442,
       /*0x1fae*/ 813,
       /*0x042e*/ 343,
-      /*0x022e*/ 213,
       /*0x012e*/ 80,
-      /*0xabae*/ 1204,
-      -1,
-      /*0x10c8e*/ 1350,
-      /*0x01ae*/ 148,
-      -1,
-      /*0x1e90e*/ 1465,
-      /*0xa7aa*/ 1123,
-      /*0x2c2e*/ 957,
-      /*0x1eaa*/ 672,
-      -1, -1, -1, -1, -1,
-      /*0x1f1a*/ 725,
-      /*0x1caa*/ 565,
-      /*0x10caa*/ 1378,
-      /*0x049a*/ 370,
-      /*0x051a*/ 434,
-      -1,
-      /*0x2cae*/ 996,
+      -1, -1,
+      /*0xabae*/ 1212,
       /*0x1fac*/ 811,
       /*0x042c*/ 341,
-      /*0x022c*/ 212,
       /*0x012c*/ 79,
-      /*0xabac*/ 1202,
-      -1, -1,
-      /*0x01ac*/ 147,
-      /*0x2165*/ 873,
-      /*0x00d3*/ 45,
-      /*0x2167*/ 875,
-      /*0x2c2c*/ 955,
-      /*0xa7ae*/ 1127,
-      /*0x2161*/ 869,
+      /*0x1e903*/ 1497,
+      /*0x2c2e*/ 957,
+      /*0xabac*/ 1210,
       /*0x1eae*/ 674,
-      /*0x118a0*/ 1387,
-      /*0x1fba*/ 822,
-      /*0x216d*/ 881,
-      /*0x023a*/ 216,
-      /*0x10b2*/ 502,
-      /*0xabba*/ 1216,
-      /*0x1cae*/ 569,
-      /*0x10cae*/ 1382,
-      /*0x104d3*/ 1335,
-      /*0x2cac*/ 995,
-      /*0x1f6b*/ 762,
-      /*0x0553*/ 479,
-      /*0x1fa8*/ 807,
-      /*0x0428*/ 337,
-      /*0x0228*/ 210,
-      /*0x0128*/ 77,
-      /*0xaba8*/ 1198,
-      -1,
-      /*0x1e12*/ 594,
+      /*0x1e2e*/ 608,
+      /*0x118a0*/ 1430,
       -1,
-      /*0x03a8*/ 264,
+      /*0x2c2c*/ 955,
       -1,
-      /*0xa7ac*/ 1125,
-      /*0x2c28*/ 951,
       /*0x1eac*/ 673,
-      /*0x2cba*/ 1002,
+      /*0x1e2c*/ 607,
+      /*0x0194*/ 134,
+      /*0x2cae*/ 997,
+      -1, -1,
+      /*0x03fd*/ 294,
+      /*0x1ca7*/ 562,
       -1,
-      /*0x118a6*/ 1393,
+      /*0x2cac*/ 996,
+      /*0xa7ae*/ 1128,
+      /*0x216f*/ 883,
       -1,
-      /*0x10af*/ 499,
+      /*0x10cae*/ 1425,
+      /*0x052e*/ 444,
       -1,
-      /*0x1cac*/ 567,
-      /*0x10cac*/ 1380,
+      /*0xa7ac*/ 1126,
       -1,
-      /*0x1e32*/ 610,
-      /*0x2163*/ 871,
-      /*0x2ca8*/ 993,
-      /*0x216f*/ 883,
-      /*0xa7ba*/ 1135,
+      /*0x04e4*/ 407,
+      /*0x10cac*/ 1423,
+      /*0x052c*/ 443,
+      /*0x1fa8*/ 807,
+      /*0x0428*/ 337,
+      /*0x0128*/ 77,
+      /*0x049c*/ 371,
       -1,
-      /*0x1eba*/ 680,
-      /*0x1fb8*/ 820,
+      /*0xaba8*/ 1206,
       -1, -1, -1,
-      /*0xabb8*/ 1214,
+      /*0x118a6*/ 1436,
+      /*0x2c28*/ 951,
       -1,
-      /*0x1cba*/ 581,
-      /*0x01b8*/ 155,
-      /*0xa7a8*/ 1122,
-      /*0xff26*/ 1239,
       /*0x1ea8*/ 671,
-      /*0x0492*/ 366,
-      /*0x0512*/ 430,
-      /*0x118a4*/ 1391,
+      /*0x1e28*/ 605,
+      -1,
+      /*0x118a4*/ 1434,
       -1, -1,
-      /*0x1fb6*/ 818,
-      /*0x1ca8*/ 563,
-      /*0x10ca8*/ 1376,
-      /*0x0136*/ 83,
-      /*0xabb6*/ 1212,
+      /*0x1f6b*/ 762,
+      /*0xff26*/ 1247,
+      /*0x1caf*/ 570,
+      /*0x2ca8*/ 994,
       -1, -1,
-      /*0xa688*/ 1053,
-      /*0x2cb8*/ 1001,
-      /*0x104b2*/ 1302,
+      /*0x2167*/ 875,
+      /*0xff24*/ 1245,
       -1,
-      /*0x04b2*/ 382,
-      /*0x0532*/ 446,
-      /*0x1040c*/ 1272,
+      /*0x24c1*/ 896,
+      /*0xa7a8*/ 1123,
+      /*0x1e91c*/ 1522,
+      -1,
+      /*0x10ca8*/ 1419,
+      /*0x0528*/ 441,
+      /*0x0204*/ 192,
+      /*0x1c84*/ 534,
+      /*0xa664*/ 1045,
+      -1,
+      /*0x1f8e*/ 781,
+      /*0x040e*/ 311,
+      /*0x010e*/ 64,
+      /*0x1040e*/ 1282,
+      /*0xa77b*/ 1103,
+      /*0xab8e*/ 1180,
       /*0x1f8c*/ 779,
       /*0x040c*/ 309,
-      /*0x020c*/ 196,
       /*0x010c*/ 63,
-      /*0xab8c*/ 1170,
+      /*0x1040c*/ 1280,
+      /*0x2c0e*/ 925,
+      /*0xab8c*/ 1178,
+      /*0x1e8e*/ 656,
+      /*0x1e0e*/ 592,
+      /*0x01e4*/ 174,
       -1,
-      /*0xff24*/ 1237,
-      /*0xa7b8*/ 1134,
-      /*0x038c*/ 238,
-      /*0x1eb8*/ 679,
-      /*0x2cb6*/ 1000,
       /*0x2c0c*/ 923,
-      /*0xa68a*/ 1054,
+      /*0x10c1*/ 517,
+      /*0x1e8c*/ 655,
+      /*0x1e0c*/ 591,
+      /*0x019c*/ 138,
+      /*0x2c8e*/ 981,
+      /*0xfb14*/ 1238,
       -1, -1, -1,
-      /*0x1cb8*/ 579,
+      /*0x1f6d*/ 764,
+      /*0x2c8c*/ 980,
+      -1,
+      /*0x0202*/ 191,
+      /*0x1c82*/ 532,
+      /*0x10c8e*/ 1393,
+      /*0x050e*/ 428,
+      -1, -1, -1, -1,
+      /*0x10c8c*/ 1391,
+      /*0x050c*/ 427,
+      /*0xfb03*/ 1233,
+      /*0x1fb2*/ 815,
+      -1,
+      /*0x0132*/ 81,
       -1, -1,
-      /*0x1f2f*/ 736,
+      /*0xabb2*/ 1216,
+      /*0x0222*/ 207,
+      /*0x1ca2*/ 557,
+      /*0xa726*/ 1066,
+      /*0x03aa*/ 266,
+      -1, -1,
+      /*0x1eb2*/ 676,
+      /*0x1e32*/ 610,
+      /*0xa724*/ 1065,
+      /*0x01a7*/ 145,
+      -1, -1, -1, -1, -1,
+      /*0x2cb2*/ 999,
+      /*0x0054*/ 18,
+      /*0x0154*/ 98,
+      /*0x1fb8*/ 820,
       -1,
-      /*0x1e1c*/ 599,
-      /*0xa779*/ 1101,
-      /*0xa7b6*/ 1133,
-      /*0x2c8c*/ 979,
-      /*0x1eb6*/ 678,
-      /*0xa680*/ 1049,
-      /*0x0230*/ 214,
-      /*0x0130*/ 1486,
-      /*0xabb0*/ 1206,
+      /*0x2126*/ 864,
+      -1,
+      /*0xa7b2*/ 1131,
+      /*0xabb8*/ 1222,
+      -1,
+      /*0x10cb2*/ 1429,
+      /*0x0532*/ 446,
+      /*0x1ed4*/ 693,
+      /*0x1e54*/ 627,
+      /*0x1e904*/ 1498,
+      /*0x1eb8*/ 679,
+      /*0x1e38*/ 613,
       -1, -1,
-      /*0x1cb6*/ 577,
-      /*0x03b0*/ 268,
+      /*0x00d4*/ 46,
+      /*0x2163*/ 871,
+      /*0x2cd4*/ 1016,
+      -1, -1,
+      /*0x2cb8*/ 1002,
+      /*0x1f1c*/ 727,
       -1,
-      /*0x1f69*/ 760,
-      /*0xa726*/ 1065,
-      /*0x1fbc*/ 824,
+      /*0xa760*/ 1094,
+      /*0x01af*/ 149,
+      /*0x022a*/ 211,
+      /*0x1caa*/ 565,
+      /*0xa7b8*/ 1135,
+      /*0x0554*/ 480,
+      -1, -1,
+      /*0x0538*/ 452,
+      -1, -1,
+      /*0x04a2*/ 374,
+      /*0x10a7*/ 491,
+      /*0x1ffc*/ 863,
+      /*0x047c*/ 359,
+      /*0x0184*/ 123,
       -1,
-      /*0x1e8c*/ 655,
+      /*0x1fba*/ 822,
+      /*0x2160*/ 868,
+      -1,
+      /*0x1e902*/ 1496,
+      -1,
+      /*0xabba*/ 1224,
+      /*0x216b*/ 879,
       -1,
-      /*0xabbc*/ 1218,
+      /*0x1efc*/ 713,
+      /*0x1e7c*/ 647,
       -1, -1,
-      /*0x01bc*/ 156,
-      /*0x10a2*/ 486,
+      /*0x1eba*/ 680,
+      /*0x1e3a*/ 614,
+      -1, -1,
+      /*0x03a8*/ 264,
       -1,
-      /*0x10c8c*/ 1348,
-      /*0x1e1e*/ 600,
-      /*0x2cb0*/ 997,
-      /*0x1e90c*/ 1463,
+      /*0x022e*/ 213,
+      /*0x1cae*/ 569,
       -1,
-      /*0x1f1c*/ 727,
-      /*0xa698*/ 1061,
-      /*0x1e70*/ 641,
-      /*0x049c*/ 371,
-      /*0x051c*/ 435,
+      /*0x2cba*/ 1003,
+      -1, -1,
+      /*0x022c*/ 212,
+      /*0x1cac*/ 567,
+      -1, -1,
+      /*0xa7ba*/ 1136,
+      /*0x10af*/ 499,
+      /*0x1057c*/ 1355,
+      /*0x0182*/ 122,
+      /*0x053a*/ 454,
+      -1, -1, -1, -1, -1,
+      /*0x04aa*/ 378,
+      /*0x1f8d*/ 780,
+      /*0x040d*/ 310,
+      -1,
+      /*0x1040d*/ 1281,
       -1,
-      /*0xa77b*/ 1102,
+      /*0xab8d*/ 1179,
+      -1, -1, -1,
+      /*0x01a2*/ 142,
+      /*0x2c0d*/ 924,
+      /*0x1f2f*/ 736,
+      /*0x216d*/ 881,
+      /*0x118a7*/ 1437,
+      /*0x038e*/ 239,
+      -1, -1, -1,
+      /*0x0228*/ 210,
+      /*0x1ca8*/ 563,
+      /*0x038c*/ 238,
+      -1, -1,
+      /*0xff27*/ 1248,
+      /*0x0130*/ 1529,
+      -1, -1,
+      /*0xabb0*/ 1214,
+      /*0xa78d*/ 1111,
       -1, -1,
-      /*0x2cbc*/ 1003,
-      /*0xa7b0*/ 1128,
-      /*0xa724*/ 1064,
+      /*0x10c8d*/ 1392,
+      /*0x04ae*/ 380,
+      /*0x1fdb*/ 843,
       /*0x1eb0*/ 675,
+      /*0x1e30*/ 609,
+      -1,
+      /*0xfb04*/ 1234,
+      /*0x04ac*/ 379,
+      -1, -1, -1, -1,
+      /*0x2cb0*/ 998,
       -1, -1,
-      /*0xa696*/ 1060,
-      -1, -1, -1,
-      /*0x1cb0*/ 571,
-      /*0x10cb0*/ 1384,
+      /*0x1fbe*/ 825,
+      /*0x118af*/ 1445,
+      /*0xa764*/ 1096,
+      /*0x13fc*/ 528,
+      /*0xa7b0*/ 1129,
+      /*0xabbe*/ 1228,
+      /*0x00db*/ 52,
+      /*0x10cb0*/ 1427,
+      /*0x10a2*/ 486,
+      /*0x020e*/ 197,
       -1,
-      /*0xa7bc*/ 1136,
-      /*0x1e22*/ 602,
-      /*0x1ebc*/ 681,
+      /*0xff2f*/ 1256,
+      /*0x1ebe*/ 682,
+      /*0x1e3e*/ 616,
+      -1,
+      /*0x020c*/ 196,
+      /*0x1fd3*/ 837,
+      /*0x0053*/ 17,
+      -1, -1,
+      /*0x2164*/ 872,
+      /*0x2cbe*/ 1005,
+      -1, -1,
+      /*0xfb02*/ 1232,
+      /*0x04a8*/ 377,
+      -1, -1,
+      /*0xa7be*/ 1138,
+      -1, -1, -1,
+      /*0x053e*/ 458,
+      -1, -1,
+      /*0x00d3*/ 45,
       -1, -1, -1, -1,
-      /*0x1fd2*/ 836,
-      /*0x049e*/ 372,
-      /*0x051e*/ 436,
-      /*0x0152*/ 97,
-      /*0x0052*/ 16,
+      /*0x01ae*/ 148,
+      -1, -1, -1, -1, -1,
+      /*0x01ac*/ 147,
+      /*0xa779*/ 1102,
+      /*0x0553*/ 479,
+      /*0x0232*/ 215,
+      /*0x1cb2*/ 573,
+      /*0x1fb6*/ 818,
       /*0x10aa*/ 494,
-      /*0x1fcc*/ 835,
-      /*0x04f0*/ 413,
-      /*0x024c*/ 227,
-      /*0x014c*/ 94,
-      /*0x004c*/ 10,
+      /*0x0136*/ 83,
+      -1, -1,
+      /*0xabb6*/ 1220,
+      /*0x1fca*/ 833,
+      /*0x004a*/ 8,
+      /*0x014a*/ 93,
+      -1, -1,
+      /*0x048e*/ 364,
+      /*0x1eb6*/ 678,
+      /*0x1e36*/ 612,
+      /*0x118a2*/ 1432,
+      -1, -1,
+      /*0x048c*/ 363,
+      /*0x1eca*/ 688,
+      /*0x1e4a*/ 622,
       -1,
-      /*0x1fbe*/ 825,
-      /*0xa686*/ 1052,
-      /*0x023e*/ 219,
+      /*0x2cb6*/ 1001,
+      /*0x1f2a*/ 731,
+      /*0x1cb8*/ 579,
+      /*0xff22*/ 1243,
+      /*0x00ca*/ 36,
+      -1,
+      /*0x2cca*/ 1011,
+      /*0xa7b6*/ 1134,
+      -1, -1, -1,
+      /*0x0536*/ 450,
+      /*0xa77d*/ 1104,
+      /*0x10ae*/ 498,
+      /*0x1fcb*/ 834,
+      /*0x004b*/ 9,
+      /*0x1e90e*/ 1508,
+      /*0x054a*/ 470,
       -1,
-      /*0xabbe*/ 1220,
+      /*0x10ac*/ 496,
       -1, -1,
-      /*0x118b2*/ 1405,
+      /*0x1e90c*/ 1506,
+      -1, -1, -1,
+      /*0x1f87*/ 774,
+      /*0x0407*/ 304,
       -1,
-      /*0x1e0e*/ 592,
-      /*0x1fb4*/ 817,
+      /*0x10407*/ 1275,
+      /*0x04b2*/ 382,
+      /*0xab87*/ 1173,
+      /*0x104b2*/ 1310,
+      /*0x00cb*/ 37,
+      /*0x1f2e*/ 735,
+      -1,
+      /*0x2c07*/ 918,
+      /*0x118aa*/ 1440,
+      -1, -1,
+      /*0x1f2c*/ 733,
+      -1,
+      /*0x023a*/ 216,
+      /*0x1cba*/ 581,
+      /*0x018e*/ 129,
       -1,
-      /*0x2cd2*/ 1014,
+      /*0x054b*/ 471,
+      /*0xff2a*/ 1251,
+      -1, -1, -1,
+      /*0x04d4*/ 399,
+      /*0x10a8*/ 492,
+      /*0x1fb4*/ 817,
+      /*0x04b8*/ 385,
       /*0x0134*/ 82,
-      /*0xabb4*/ 1210,
-      /*0xa77d*/ 1103,
-      /*0x04a2*/ 374,
-      /*0x0522*/ 438,
-      /*0x2ccc*/ 1011,
+      /*0x104b8*/ 1316,
+      /*0x10c87*/ 1386,
+      /*0xabb4*/ 1218,
+      -1, -1, -1,
+      /*0x03b0*/ 268,
+      /*0xab71*/ 1151,
+      -1,
+      /*0x1eb4*/ 677,
+      /*0x1e34*/ 611,
+      -1, -1,
+      /*0xa722*/ 1064,
+      /*0x118ae*/ 1444,
+      -1, -1,
+      /*0x1f28*/ 729,
+      /*0x2cb4*/ 1000,
       -1,
-      /*0x10ae*/ 498,
+      /*0x118ac*/ 1442,
+      /*0xab73*/ 1153,
       -1, -1,
-      /*0x1e2a*/ 606,
-      /*0x2cbe*/ 1004,
+      /*0xff2e*/ 1255,
+      /*0xa7b4*/ 1133,
       -1, -1,
-      /*0x1ed2*/ 692,
-      /*0xa694*/ 1059,
+      /*0x01b2*/ 151,
+      /*0x0534*/ 448,
+      /*0xff2c*/ 1253,
+      -1, -1,
+      /*0xa654*/ 1037,
+      -1,
+      /*0x04fc*/ 419,
       -1,
-      /*0xff32*/ 1251,
+      /*0x1fbc*/ 824,
+      /*0x10588*/ 1367,
+      /*0x04ba*/ 386,
       -1,
-      /*0x118af*/ 1402,
-      /*0x1ecc*/ 689,
-      /*0x2cb4*/ 999,
+      /*0x104ba*/ 1318,
+      /*0xabbc*/ 1226,
+      -1,
+      /*0x10589*/ 1368,
       -1, -1,
-      /*0xa7be*/ 1137,
+      /*0x0230*/ 214,
+      /*0x1cb0*/ 571,
+      /*0x1ebc*/ 681,
+      /*0x1e3c*/ 615,
       -1,
-      /*0x1ebe*/ 682,
+      /*0x01b8*/ 155,
+      /*0x118a8*/ 1438,
       /*0x1f0e*/ 721,
+      /*0x1058a*/ 1369,
       -1,
-      /*0xa690*/ 1057,
-      /*0x048e*/ 364,
-      /*0x050e*/ 428,
-      /*0x10ac*/ 496,
-      /*0x1cbe*/ 583,
-      /*0xa7b4*/ 1132,
+      /*0xa72a*/ 1068,
+      /*0x2cbc*/ 1004,
       -1,
-      /*0x1eb4*/ 677,
-      /*0x1e2e*/ 608,
+      /*0x1f0c*/ 719,
+      /*0x10580*/ 1359,
+      -1,
+      /*0xff28*/ 1249,
+      -1,
+      /*0xa7bc*/ 1137,
       -1, -1, -1,
-      /*0x1f2a*/ 731,
-      /*0xff2f*/ 1248,
-      /*0x1cb4*/ 575,
-      /*0x04aa*/ 378,
-      /*0x052a*/ 442,
+      /*0x053c*/ 456,
+      /*0x24b8*/ 887,
+      /*0x023e*/ 219,
+      /*0x1cbe*/ 583,
+      /*0x10b2*/ 502,
+      -1,
+      /*0x212a*/ 865,
       -1, -1,
-      /*0x10ba*/ 510,
+      /*0x10590*/ 1374,
+      -1, -1, -1,
+      /*0x1fd6*/ 838,
+      /*0x0056*/ 20,
+      /*0x0156*/ 99,
+      -1, -1, -1, -1,
+      /*0x01fc*/ 188,
+      /*0xa72e*/ 1070,
+      -1, -1, -1,
+      /*0x1ed6*/ 694,
+      /*0x1e56*/ 628,
+      /*0xa72c*/ 1069,
+      /*0x10b8*/ 508,
       -1, -1,
-      /*0x1fca*/ 833,
+      /*0x04b0*/ 381,
+      /*0x00d6*/ 48,
+      /*0x104b0*/ 1308,
+      /*0x2cd6*/ 1017,
+      /*0x1e90d*/ 1507,
       -1,
-      /*0x024a*/ 226,
-      /*0x014a*/ 93,
-      /*0x004a*/ 8,
-      /*0xa684*/ 1051,
-      /*0x2126*/ 864,
-      /*0x01ca*/ 161,
-      /*0x10a8*/ 492,
+      /*0xab7f*/ 1165,
+      /*0xab7b*/ 1161,
       -1, -1,
-      /*0x1e2c*/ 607,
-      -1, -1, -1, -1, -1,
-      /*0x1f2e*/ 735,
-      -1,
-      /*0xa682*/ 1050,
-      /*0x04ae*/ 380,
-      /*0x052e*/ 444,
-      -1,
-      /*0xa732*/ 1070,
-      /*0x2cca*/ 1010,
+      /*0xa7d6*/ 1147,
+      /*0x24ba*/ 889,
+      /*0x10586*/ 1365,
+      /*0xab75*/ 1155,
+      /*0x0556*/ 482,
+      /*0x1f54*/ 753,
+      -1, -1,
+      /*0x1f38*/ 737,
       -1,
       /*0x1fc4*/ 828,
-      /*0x1e3a*/ 614,
-      /*0x0244*/ 222,
-      -1,
       /*0x0044*/ 3,
-      /*0x004f*/ 13,
       -1,
-      /*0x01c4*/ 157,
-      /*0x01cf*/ 164,
-      /*0x03cf*/ 270,
+      /*0x1cb6*/ 577,
+      /*0x04be*/ 388,
       -1,
-      /*0x10b8*/ 508,
-      /*0x1e28*/ 605,
-      /*0x1eca*/ 688,
-      /*0x1fab*/ 810,
-      /*0x042b*/ 340,
-      /*0x1f2c*/ 733,
+      /*0x104be*/ 1322,
       -1,
-      /*0xabab*/ 1201,
-      /*0x04ac*/ 379,
-      /*0x052c*/ 443,
+      /*0x024a*/ 226,
+      /*0xa728*/ 1067,
+      /*0x118b2*/ 1448,
       -1,
-      /*0x03ab*/ 267,
+      /*0x1ec4*/ 685,
+      /*0x1e44*/ 619,
+      /*0xa688*/ 1054,
+      -1, -1, -1,
+      /*0x10ba*/ 510,
+      /*0x00c4*/ 30,
+      /*0xff32*/ 1259,
+      /*0x2cc4*/ 1008,
+      /*0x104d3*/ 1343,
+      -1, -1, -1,
+      /*0x10592*/ 1376,
       -1,
-      /*0x2cc4*/ 1007,
-      /*0x2c2b*/ 954,
-      /*0x1fc2*/ 826,
-      /*0x10b6*/ 506,
-      /*0x24ba*/ 889,
-      /*0x118a2*/ 1389,
-      /*0x0042*/ 1,
+      /*0xa7c4*/ 1141,
+      /*0x0050*/ 14,
+      /*0x0150*/ 96,
+      /*0xa68a*/ 1055,
+      /*0x0544*/ 464,
+      -1,
+      /*0x118b8*/ 1454,
+      -1, -1,
+      /*0xa680*/ 1050,
       -1,
       /*0x1f3a*/ 739,
-      /*0x104ba*/ 1310,
-      /*0x03c2*/ 269,
-      /*0x04ba*/ 386,
-      /*0x053a*/ 454,
-      /*0xa7c4*/ 1139,
-      /*0x1fc8*/ 831,
-      /*0x1ec4*/ 685,
-      /*0x0248*/ 225,
-      /*0x1e38*/ 613,
-      /*0x0048*/ 7,
-      /*0x1f28*/ 729,
+      /*0x1ed0*/ 691,
+      /*0x1e50*/ 625,
+      -1, -1,
+      /*0xff38*/ 1265,
+      /*0x01db*/ 170,
       -1,
-      /*0x01c8*/ 160,
-      /*0x04a8*/ 377,
-      /*0x0528*/ 441,
+      /*0x00d0*/ 42,
+      /*0xab77*/ 1157,
+      /*0x2cd0*/ 1014,
+      /*0x1c87*/ 537,
+      -1, -1, -1,
+      /*0xa690*/ 1058,
+      /*0x04b6*/ 384,
+      /*0xa7d0*/ 1146,
+      /*0x104b6*/ 1314,
       -1, -1,
-      /*0x2cc2*/ 1006,
-      /*0xa7ab*/ 1124,
-      /*0xff22*/ 1235,
+      /*0x0550*/ 476,
+      /*0x16e5f*/ 1493,
+      /*0x16e5d*/ 1491,
+      /*0x104ca*/ 1334,
       -1, -1, -1, -1,
-      /*0x1e36*/ 612,
+      /*0x1fcc*/ 835,
+      /*0x004c*/ 10,
+      /*0x014c*/ 94,
+      /*0xa698*/ 1062,
       -1, -1,
-      /*0x1cab*/ 566,
-      /*0x10cab*/ 1379,
-      /*0x2cc8*/ 1009,
-      /*0xa7c2*/ 1138,
-      -1,
-      /*0x1ec2*/ 684,
+      /*0x01d3*/ 166,
+      /*0x118ba*/ 1456,
+      /*0x24be*/ 893,
+      /*0x1cb4*/ 575,
+      /*0x1f0d*/ 720,
       /*0x10b0*/ 500,
-      -1,
-      /*0x24b8*/ 887,
-      /*0x216b*/ 879,
-      /*0x118aa*/ 1397,
-      /*0x1e0c*/ 591,
-      /*0x1f38*/ 737,
-      /*0x104b8*/ 1308,
-      -1,
-      /*0x04b8*/ 385,
-      /*0x0538*/ 452,
-      /*0x1ec8*/ 687,
-      /*0x10bc*/ 512,
-      /*0x1fd6*/ 838,
-      /*0x0150*/ 96,
-      /*0x0050*/ 14,
-      /*0x0156*/ 99,
-      /*0x0056*/ 20,
-      /*0x24b6*/ 885,
-      /*0x03d0*/ 271,
-      -1,
-      /*0x03d6*/ 274,
-      /*0x1fdb*/ 843,
-      /*0x104b6*/ 1306,
-      -1,
-      /*0x04b6*/ 384,
-      /*0x0536*/ 450,
-      /*0xff2a*/ 1243,
-      -1,
-      /*0x01db*/ 170,
-      /*0x1e30*/ 609,
-      /*0x118ae*/ 1401,
+      /*0x1ecc*/ 689,
+      /*0x1e4c*/ 623,
       -1, -1, -1,
-      /*0x2cd0*/ 1013,
-      /*0x1f0c*/ 719,
-      /*0x2cd6*/ 1016,
-      /*0xa69a*/ 1062,
-      /*0x048c*/ 363,
-      /*0x050c*/ 427,
-      -1,
-      /*0x1e3c*/ 615,
-      /*0xa722*/ 1063,
-      -1, -1, -1, -1, -1, -1,
-      /*0x1ed0*/ 691,
-      /*0x1fc6*/ 829,
-      /*0x1ed6*/ 694,
-      /*0x0246*/ 224,
-      /*0xff2e*/ 1247,
-      /*0x0046*/ 5,
-      /*0x118ac*/ 1399,
+      /*0xff3a*/ 1267,
+      /*0xa732*/ 1071,
+      /*0x00cc*/ 38,
+      /*0xa686*/ 1053,
+      /*0x2ccc*/ 1012,
+      /*0x04cb*/ 395,
       -1,
-      /*0x2132*/ 867,
-      /*0x024e*/ 228,
-      /*0x014e*/ 95,
-      /*0x004e*/ 12,
-      /*0x104b0*/ 1300,
-      /*0x1fda*/ 842,
-      /*0x04b0*/ 381,
+      /*0x104cb*/ 1335,
+      -1, -1, -1, -1,
+      /*0x16e59*/ 1487,
       -1,
-      /*0x015a*/ 101,
-      /*0x005a*/ 24,
+      /*0xa64a*/ 1032,
+      /*0x054c*/ 472,
+      -1, -1,
       /*0x10be*/ 514,
-      /*0x24bc*/ 891,
-      -1,
-      /*0x03da*/ 276,
-      /*0x118ba*/ 1413,
-      /*0x1f3c*/ 741,
-      /*0x104bc*/ 1312,
-      /*0x2cc6*/ 1008,
-      /*0x04bc*/ 387,
-      /*0x053c*/ 456,
-      /*0x10b4*/ 504,
-      /*0xff2c*/ 1245,
-      -1,
-      /*0x2cce*/ 1012,
-      -1,
-      /*0x118a8*/ 1395,
-      /*0xa72a*/ 1067,
-      -1,
-      /*0x1e52*/ 626,
-      /*0x2cda*/ 1018,
-      /*0xa7c6*/ 1141,
-      -1,
-      /*0x1ec6*/ 686,
+      /*0x2132*/ 867,
+      /*0xa696*/ 1061,
       -1,
-      /*0x1e4c*/ 623,
-      -1, -1,
-      /*0xff3a*/ 1259,
-      /*0x1ece*/ 690,
-      /*0xa652*/ 1035,
-      /*0x1e3e*/ 616,
-      /*0x2169*/ 877,
+      /*0xa754*/ 1088,
       -1, -1,
-      /*0x1eda*/ 696,
-      /*0xa64c*/ 1032,
-      /*0x00d2*/ 44,
-      -1,
-      /*0xff28*/ 1241,
+      /*0xa738*/ 1074,
+      /*0x1f5b*/ 756,
       -1,
-      /*0x1e34*/ 611,
-      /*0xa692*/ 1058,
-      /*0x00cc*/ 38,
-      /*0xa72e*/ 1069,
-      /*0x118b8*/ 1411,
+      /*0x1fc8*/ 831,
+      /*0x0048*/ 7,
+      /*0x01ca*/ 161,
       -1, -1, -1, -1,
-      /*0x1f52*/ 752,
-      /*0x104d2*/ 1334,
-      /*0x24cc*/ 907,
-      /*0x04d2*/ 398,
-      /*0x0552*/ 478,
+      /*0x03d6*/ 274,
+      -1,
+      /*0xa692*/ 1059,
       -1,
-      /*0x1f4c*/ 749,
-      /*0x104cc*/ 1328,
-      /*0x24be*/ 893,
-      /*0x2cc0*/ 1005,
-      /*0x054c*/ 472,
-      /*0x118b6*/ 1409,
       /*0x1f3e*/ 743,
-      /*0x104be*/ 1314,
+      /*0x1ec8*/ 687,
+      /*0x1e48*/ 621,
+      /*0x24b6*/ 885,
+      /*0x1e907*/ 1501,
+      /*0x04b4*/ 383,
       -1,
-      /*0x04be*/ 388,
-      /*0x053e*/ 458,
+      /*0x104b4*/ 1312,
+      /*0x00c8*/ 34,
+      /*0x24ca*/ 905,
+      /*0x2cc8*/ 1010,
       -1,
-      /*0xff38*/ 1257,
-      /*0xa72c*/ 1068,
-      -1, -1, -1,
-      /*0x104b4*/ 1304,
-      /*0x1ec0*/ 683,
-      /*0x04b4*/ 383,
-      /*0x0534*/ 448,
+      /*0x118b0*/ 1446,
       -1, -1,
-      /*0x1fe2*/ 844,
-      /*0x0462*/ 346,
+      /*0xa69a*/ 1063,
       -1,
-      /*0x0162*/ 105,
+      /*0x004e*/ 12,
+      /*0x014e*/ 95,
       -1,
-      /*0xff36*/ 1255,
-      /*0xa73a*/ 1074,
-      /*0x01e2*/ 173,
-      /*0x03e2*/ 280,
-      /*0x0154*/ 98,
-      /*0x0054*/ 18,
-      /*0x2c62*/ 959,
-      /*0x10c4*/ 520,
-      -1, -1, -1,
-      /*0x1e4a*/ 622,
-      /*0xa728*/ 1066,
-      -1, -1, -1,
-      /*0x118b0*/ 1403,
-      -1, -1,
-      /*0x2ce2*/ 1022,
+      /*0x01cb*/ 162,
+      /*0x0548*/ 468,
+      /*0xff30*/ 1257,
+      -1, -1, -1, -1,
+      /*0xa73a*/ 1075,
+      /*0x1ece*/ 690,
+      /*0x1e4e*/ 624,
+      /*0x10b6*/ 506,
       -1,
-      /*0x10ab*/ 495,
-      /*0xa64a*/ 1031,
-      /*0x1fd8*/ 840,
+      /*0x0187*/ 125,
+      -1, -1,
+      /*0x00ce*/ 40,
+      /*0x118be*/ 1460,
+      /*0x2cce*/ 1013,
+      /*0x24cb*/ 906,
+      /*0x1fc2*/ 826,
+      /*0x0042*/ 1,
       -1,
-      /*0x2cd4*/ 1015,
-      /*0x0158*/ 100,
-      /*0x0058*/ 22,
-      /*0x118bc*/ 1415,
-      /*0x00ca*/ 36,
+      /*0x16e57*/ 1485,
       -1,
-      /*0x03d8*/ 275,
+      /*0x10594*/ 1377,
+      /*0x04bc*/ 387,
       -1,
-      /*0x10c2*/ 518,
-      /*0x1ee2*/ 700,
-      -1, -1,
-      /*0x1e44*/ 619,
-      /*0x24ca*/ 905,
-      /*0xff30*/ 1249,
-      /*0x1ed4*/ 693,
-      /*0xa738*/ 1073,
-      /*0x1f4a*/ 747,
-      /*0x104ca*/ 1326,
-      -1, -1,
-      /*0x054a*/ 470,
-      /*0x2cd8*/ 1017,
-      /*0xa644*/ 1028,
-      /*0x1040d*/ 1273,
-      /*0x1f8d*/ 780,
-      /*0x040d*/ 310,
-      -1, -1,
-      /*0xab8d*/ 1171,
-      /*0x00c4*/ 30,
-      /*0x00cf*/ 41,
-      /*0xa736*/ 1072,
+      /*0x104bc*/ 1320,
+      /*0x054e*/ 474,
       -1, -1,
-      /*0x212a*/ 865,
-      /*0x2c0d*/ 924,
-      /*0x1ed8*/ 695,
+      /*0x1ec2*/ 684,
       /*0x1e42*/ 618,
-      /*0x24c4*/ 899,
-      /*0x24cf*/ 910,
-      -1, -1, -1,
-      /*0x104c4*/ 1320,
-      /*0x104cf*/ 1331,
+      /*0x1fd2*/ 836,
+      /*0x0052*/ 16,
+      /*0x0152*/ 97,
       -1,
-      /*0x0544*/ 464,
-      /*0x054f*/ 475,
-      /*0xa642*/ 1027,
-      /*0x1e48*/ 621,
-      -1, -1, -1, -1, -1,
+      /*0x1f4a*/ 747,
       /*0x00c2*/ 28,
-      /*0x1f2b*/ 732,
       -1,
-      /*0x118be*/ 1417,
-      /*0x0055*/ 19,
-      /*0xa648*/ 1030,
-      /*0xa78d*/ 1110,
-      /*0x01d5*/ 167,
-      /*0x03d5*/ 273,
-      /*0x24c2*/ 897,
+      /*0x2cc2*/ 1007,
+      /*0x10583*/ 1362,
+      /*0x03d0*/ 271,
       -1, -1,
-      /*0x00c8*/ 34,
-      /*0x118b4*/ 1407,
-      /*0x104c2*/ 1318,
-      -1,
-      /*0x10c8d*/ 1349,
+      /*0x1ed2*/ 692,
+      /*0x1e52*/ 626,
+      /*0xa7c2*/ 1140,
+      -1, -1, -1,
       /*0x0542*/ 462,
+      /*0x00d2*/ 44,
       -1,
-      /*0x1e90d*/ 1464,
-      -1,
-      /*0x24c8*/ 903,
+      /*0x2cd2*/ 1015,
+      /*0x0244*/ 222,
       -1, -1, -1,
-      /*0x1f48*/ 745,
-      /*0x104c8*/ 1324,
-      /*0xa73c*/ 1075,
+      /*0x1fc6*/ 829,
+      /*0x0046*/ 5,
       -1,
-      /*0x0548*/ 468,
+      /*0x1fd8*/ 840,
+      /*0x0058*/ 22,
+      /*0x0158*/ 100,
+      /*0x0552*/ 478,
+      /*0x1f4b*/ 748,
+      /*0x118b6*/ 1452,
       -1, -1,
-      /*0xa68e*/ 1056,
-      /*0x1e50*/ 625,
+      /*0x04d6*/ 400,
+      /*0x1ec6*/ 686,
+      /*0x1e46*/ 620,
       -1,
-      /*0x1e56*/ 628,
-      /*0xff34*/ 1253,
-      /*0x0245*/ 223,
-      /*0x0145*/ 90,
-      /*0x0045*/ 4,
+      /*0x1ed8*/ 695,
+      /*0x1e58*/ 629,
+      /*0xab79*/ 1159,
+      /*0xff36*/ 1263,
+      /*0x00c6*/ 32,
+      /*0x01bc*/ 156,
+      /*0x2cc6*/ 1009,
+      /*0x00d8*/ 49,
       -1,
-      /*0x16e5f*/ 1450,
-      /*0x01c5*/ 158,
+      /*0x2cd8*/ 1018,
+      /*0x10b4*/ 504,
+      -1, -1,
+      /*0xa7c6*/ 1143,
+      /*0x1fab*/ 810,
+      /*0x042b*/ 340,
+      /*0xa7d8*/ 1148,
+      /*0x0546*/ 466,
+      /*0xa73e*/ 1077,
+      /*0xabab*/ 1209,
       -1,
-      /*0xa650*/ 1034,
-      /*0x1fd9*/ 841,
-      /*0xa656*/ 1037,
+      /*0x1ec0*/ 683,
+      /*0x1e40*/ 617,
+      /*0x24bc*/ 891,
+      /*0x2c2b*/ 954,
+      -1, -1, -1,
+      /*0x00c0*/ 26,
+      -1,
+      /*0x2cc0*/ 1006,
       /*0x1fec*/ 853,
       /*0x046c*/ 351,
-      /*0x0059*/ 23,
       /*0x016c*/ 110,
-      /*0x00d0*/ 42,
-      /*0x01d9*/ 169,
-      /*0x00d6*/ 48,
-      /*0x01ec*/ 178,
-      /*0x03ec*/ 285,
-      /*0x16e5d*/ 1448,
-      -1, -1,
-      /*0x16e47*/ 1426,
-      -1, -1,
-      /*0x00db*/ 52,
-      -1,
-      /*0x1f50*/ 751,
-      /*0x104d0*/ 1332,
-      /*0x1f56*/ 754,
-      /*0x04d0*/ 397,
-      /*0x0550*/ 476,
-      /*0x04d6*/ 400,
-      /*0x0556*/ 482,
-      /*0xa752*/ 1086,
-      /*0xa7c5*/ 1140,
-      /*0x1e46*/ 620,
-      -1,
-      /*0x1f5b*/ 756,
-      -1,
-      /*0xa74c*/ 1083,
+      /*0xa656*/ 1038,
+      /*0x013d*/ 86,
+      /*0x104c4*/ 1328,
+      /*0xa7c0*/ 1139,
+      /*0xabbd*/ 1227,
+      /*0xab7d*/ 1163,
       -1,
-      /*0x1e4e*/ 624,
-      -1, -1, -1,
-      /*0xa73e*/ 1076,
-      /*0xa646*/ 1029,
-      /*0x1e5a*/ 630,
+      /*0x0540*/ 460,
+      /*0xa7ab*/ 1125,
       /*0x1eec*/ 705,
+      /*0x1e6c*/ 639,
+      /*0x10cab*/ 1422,
+      /*0xa694*/ 1060,
+      -1, -1,
+      /*0x024c*/ 227,
+      /*0x10bc*/ 512,
       -1, -1, -1,
-      /*0xa64e*/ 1033,
-      /*0x00c6*/ 32,
-      -1,
-      /*0xa734*/ 1071,
-      /*0x10c0*/ 516,
-      -1,
-      /*0xa65a*/ 1039,
-      /*0x00ce*/ 40,
       /*0x1fc9*/ 832,
-      -1,
-      /*0x24c6*/ 901,
+      /*0x0049*/ 1528,
       /*0x0149*/ 92,
-      /*0x0049*/ 1485,
-      /*0x00da*/ 51,
       -1,
-      /*0x104c6*/ 1322,
-      /*0x24ce*/ 909,
-      /*0x118ab*/ 1398,
-      /*0x0546*/ 466,
-      -1, -1,
-      /*0x104ce*/ 1330,
+      /*0x1fa9*/ 808,
+      /*0x0429*/ 338,
       -1, -1,
-      /*0x054e*/ 474,
+      /*0x04d0*/ 397,
+      /*0xaba9*/ 1207,
+      /*0x104d0*/ 1340,
+      /*0x053d*/ 457,
+      -1,
+      /*0x118b4*/ 1450,
+      /*0x2c29*/ 952,
+      /*0xa736*/ 1073,
+      -1,
+      /*0x1f3c*/ 741,
+      /*0xa644*/ 1029,
+      /*0x00c9*/ 35,
+      -1,
+      /*0xa74a*/ 1083,
+      /*0x16e41*/ 1463,
+      /*0xff34*/ 1261,
+      /*0x1fda*/ 842,
+      /*0x005a*/ 24,
+      /*0x015a*/ 101,
+      -1,
+      /*0xa7c9*/ 1145,
       /*0x1fea*/ 851,
       /*0x046a*/ 350,
-      -1,
       /*0x016a*/ 109,
-      /*0x04da*/ 402,
-      /*0x0345*/ 229,
+      /*0x0549*/ 469,
       -1,
-      /*0x01ea*/ 177,
-      /*0x03ea*/ 284,
-      /*0x1e40*/ 617,
-      /*0x1fa9*/ 808,
-      /*0x0429*/ 338,
+      /*0x01c4*/ 157,
+      /*0x10ca9*/ 1420,
+      /*0x1eda*/ 696,
+      /*0x1e5a*/ 630,
       -1, -1,
-      /*0xaba9*/ 1199,
-      /*0xff2b*/ 1244,
+      /*0x0248*/ 225,
+      /*0x1eea*/ 704,
+      /*0x1e6a*/ 638,
+      /*0x00da*/ 51,
       -1,
-      /*0x01a9*/ 146,
-      /*0x03a9*/ 265,
+      /*0x2cda*/ 1019,
+      /*0xa650*/ 1035,
+      -1, -1,
+      /*0x03c2*/ 269,
+      /*0x104cc*/ 1336,
       -1,
-      /*0xa640*/ 1026,
-      /*0x2c29*/ 952,
-      /*0x1fc3*/ 827,
+      /*0x24c4*/ 899,
+      /*0x118bc*/ 1458,
+      -1,
+      /*0x10584*/ 1363,
+      /*0x1fe2*/ 844,
+      /*0x0462*/ 346,
+      /*0x0162*/ 105,
       -1,
-      /*0x0243*/ 221,
-      /*0x0143*/ 89,
-      /*0x0043*/ 2,
-      /*0x00c0*/ 26,
-      /*0x10421*/ 1293,
       /*0x1fa1*/ 800,
       /*0x0421*/ 330,
+      /*0x1f56*/ 754,
+      /*0x10421*/ 1301,
       -1,
-      /*0xa74a*/ 1082,
-      /*0xaba1*/ 1191,
-      -1, -1,
-      /*0x24c0*/ 895,
-      /*0x03a1*/ 258,
-      -1,
-      /*0x1eea*/ 704,
+      /*0xaba1*/ 1199,
+      /*0x2c62*/ 960,
+      /*0x024e*/ 228,
+      /*0x1ee2*/ 700,
+      /*0x1e62*/ 634,
       /*0x2c21*/ 944,
-      /*0x104c0*/ 1316,
+      -1, -1, -1,
+      /*0x1fc7*/ 830,
+      /*0x0047*/ 6,
+      /*0x0147*/ 91,
+      /*0x2ce2*/ 1023,
+      -1,
+      /*0x10c4*/ 520,
+      /*0x0045*/ 4,
+      /*0x0145*/ 90,
+      -1, -1, -1,
       /*0x1fb9*/ 821,
-      /*0x04c0*/ 389,
-      /*0x0540*/ 460,
+      /*0xa64c*/ 1033,
       /*0x0139*/ 84,
-      /*0xabb9*/ 1215,
+      /*0x10582*/ 1361,
+      /*0xa734*/ 1072,
+      /*0xabb9*/ 1223,
+      /*0x10ca1*/ 1412,
+      /*0x03d8*/ 275,
+      /*0x00c7*/ 33,
+      /*0x0055*/ 19,
+      /*0x104c8*/ 1332,
+      -1, -1,
+      /*0x00c5*/ 31,
+      -1, -1, -1,
+      /*0xa7c7*/ 1144,
+      -1, -1, -1,
+      /*0x0547*/ 467,
+      /*0xa7c5*/ 1142,
+      -1,
+      /*0x0345*/ 229,
+      -1,
+      /*0x0545*/ 465,
+      /*0x00d5*/ 47,
+      -1,
       /*0x1fe8*/ 849,
       /*0x0468*/ 349,
-      -1,
       /*0x0168*/ 108,
-      -1, -1,
-      /*0x1e62*/ 634,
-      /*0x01e8*/ 176,
-      /*0x03e8*/ 283,
-      /*0x1ca9*/ 564,
-      /*0x10ca9*/ 1377,
-      /*0xa744*/ 1079,
-      /*0x1e54*/ 627,
+      /*0x0539*/ 453,
+      /*0x03ab*/ 267,
       -1,
-      /*0x1fcb*/ 834,
+      /*0x24cc*/ 907,
+      -1,
+      /*0x104ce*/ 1338,
       -1, -1,
-      /*0xa662*/ 1043,
-      /*0x004b*/ 9,
+      /*0x0555*/ 481,
+      /*0x1ee8*/ 703,
+      /*0x1e68*/ 637,
+      /*0x1f50*/ 751,
+      /*0xa73c*/ 1076,
+      /*0x0246*/ 224,
+      /*0xa648*/ 1031,
+      -1, -1, -1,
+      /*0x03ec*/ 285,
+      /*0x1f97*/ 790,
+      /*0x0417*/ 320,
+      -1,
+      /*0x10417*/ 1291,
+      -1,
+      /*0xab97*/ 1189,
+      /*0x1ff2*/ 854,
+      /*0x0472*/ 354,
+      /*0x0172*/ 113,
+      /*0x104c2*/ 1326,
+      /*0x2c17*/ 934,
+      /*0x01c8*/ 160,
+      /*0x1e97*/ 661,
       -1, -1,
-      /*0x01cb*/ 162,
-      /*0xa68c*/ 1055,
-      /*0xa654*/ 1036,
-      -1, -1, -1, -1,
-      /*0x1ca1*/ 556,
-      /*0x10ca1*/ 1369,
-      /*0x00d4*/ 46,
+      /*0xa684*/ 1052,
+      /*0x2c72*/ 970,
+      -1,
+      /*0x1ef2*/ 708,
+      /*0x1e72*/ 642,
       -1,
-      /*0x1e921*/ 1484,
+      /*0x04d2*/ 398,
+      /*0xa64e*/ 1034,
+      /*0x104d2*/ 1342,
+      /*0x1cab*/ 566,
       -1,
-      /*0x1e58*/ 629,
+      /*0x03a9*/ 265,
+      /*0x2cf2*/ 1026,
       -1,
-      /*0x16e57*/ 1442,
-      /*0xa742*/ 1078,
+      /*0x24c8*/ 903,
       -1,
-      /*0x1ee8*/ 703,
-      /*0x04e2*/ 406,
-      /*0x1cb9*/ 580,
+      /*0x10c97*/ 1402,
+      /*0x1f4c*/ 749,
+      -1, -1, -1,
+      /*0x0372*/ 231,
       -1,
-      /*0x1f54*/ 753,
+      /*0xa756*/ 1089,
       -1,
-      /*0xa658*/ 1038,
-      /*0x04d4*/ 399,
-      /*0x0554*/ 480,
+      /*0x10572*/ 1346,
       -1,
-      /*0xa748*/ 1081,
-      -1, -1,
-      /*0x00d8*/ 49,
-      /*0x10417*/ 1283,
-      /*0x1f97*/ 790,
-      /*0x0417*/ 320,
-      /*0x1fe4*/ 846,
-      /*0x0464*/ 347,
-      /*0xab97*/ 1181,
-      /*0x0164*/ 106,
+      /*0x023d*/ 218,
+      /*0x1cbd*/ 582,
       -1,
-      /*0x0197*/ 136,
-      /*0x0397*/ 248,
-      /*0x01e4*/ 174,
-      /*0x03e4*/ 281,
-      /*0x2c17*/ 934,
+      /*0xa642*/ 1028,
+      /*0x03da*/ 276,
       -1,
-      /*0x2c64*/ 961,
+      /*0xa682*/ 1051,
+      /*0x104c6*/ 1330,
       /*0x04d8*/ 401,
+      /*0x03ea*/ 284,
       -1, -1,
-      /*0x0460*/ 345,
-      -1,
-      /*0x0160*/ 104,
+      /*0x046e*/ 352,
+      /*0x016e*/ 111,
+      /*0x24ce*/ 909,
+      -1, -1,
+      /*0xa652*/ 1036,
       -1, -1, -1,
-      /*0x01e0*/ 172,
-      /*0x03e0*/ 279,
-      /*0x1ff4*/ 856,
-      /*0x0474*/ 355,
-      /*0x2c60*/ 958,
-      /*0x0174*/ 114,
+      /*0x2c6e*/ 967,
+      /*0x015e*/ 103,
+      /*0x1eee*/ 706,
+      /*0x1e6e*/ 640,
       -1,
-      /*0x1ffc*/ 863,
-      /*0x047c*/ 359,
-      /*0x01f4*/ 183,
-      /*0x03f4*/ 289,
-      /*0xa750*/ 1085,
+      /*0x1ca9*/ 564,
+      -1, -1,
+      /*0x04c0*/ 389,
       -1,
-      /*0xa756*/ 1088,
-      /*0x01fc*/ 188,
-      /*0x1f0d*/ 720,
-      /*0x1e97*/ 661,
-      /*0x2ce0*/ 1021,
-      /*0x1ee4*/ 701,
+      /*0x104c0*/ 1324,
+      /*0x1ede*/ 698,
+      /*0x1e5e*/ 632,
+      /*0xa744*/ 1080,
+      /*0x1f48*/ 745,
+      /*0x03e2*/ 280,
+      /*0x24c2*/ 897,
       -1,
-      /*0x10c5*/ 521,
-      -1, -1,
-      /*0x1c97*/ 546,
-      /*0x10c97*/ 1359,
-      -1, -1,
-      /*0x1e917*/ 1474,
+      /*0x00de*/ 55,
+      /*0x03a1*/ 258,
+      /*0x2cde*/ 1021,
       -1,
-      /*0x046e*/ 352,
+      /*0xa646*/ 1030,
+      -1, -1,
+      /*0xa658*/ 1039,
+      -1, -1, -1, -1,
+      /*0x04ec*/ 411,
+      /*0x1fc3*/ 827,
+      /*0x0043*/ 2,
+      /*0x0143*/ 89,
+      /*0x104bd*/ 1321,
       -1,
-      /*0x016e*/ 111,
-      /*0x1ee0*/ 699,
-      /*0x00d5*/ 47,
-      /*0x13fc*/ 528,
-      /*0x01ee*/ 179,
-      /*0x03ee*/ 286,
       /*0x1fe6*/ 847,
       /*0x0466*/ 348,
-      /*0x2c6e*/ 966,
       /*0x0166*/ 107,
-      /*0x1ef4*/ 709,
-      -1,
-      /*0x015e*/ 103,
-      /*0x01e6*/ 175,
-      /*0x03e6*/ 282,
-      /*0x1efc*/ 713,
-      /*0x01de*/ 171,
-      /*0x03de*/ 278,
-      -1,
-      /*0x0555*/ 481,
-      /*0xa746*/ 1080,
       -1, -1,
-      /*0x16e53*/ 1438,
-      -1, -1,
-      /*0xa74e*/ 1084,
-      -1, -1, -1, -1,
-      /*0x1e6c*/ 639,
-      /*0xa75a*/ 1090,
-      /*0x2cde*/ 1020,
+      /*0xa750*/ 1086,
       -1,
-      /*0x0051*/ 15,
-      /*0x1eee*/ 706,
-      /*0x00c5*/ 31,
-      /*0x01d1*/ 165,
-      /*0x03d1*/ 272,
+      /*0x10c2*/ 518,
       -1, -1,
-      /*0xa66c*/ 1048,
+      /*0xa640*/ 1027,
       -1,
-      /*0x212b*/ 866,
       /*0x1ee6*/ 702,
-      /*0x24c5*/ 900,
-      /*0x00d9*/ 50,
-      /*0x1ede*/ 698,
-      -1, -1,
-      /*0x104c5*/ 1321,
+      /*0x1e66*/ 636,
+      /*0x00c3*/ 29,
       -1,
-      /*0x04c5*/ 392,
-      /*0x0545*/ 465,
+      /*0x03d5*/ 273,
+      /*0x04c9*/ 394,
+      -1,
+      /*0x104c9*/ 1333,
+      /*0x24c6*/ 901,
       /*0x1fad*/ 812,
       /*0x042d*/ 342,
-      -1, -1,
-      /*0xabad*/ 1203,
-      /*0x1f59*/ 755,
+      /*0x1058e*/ 1372,
       -1,
-      /*0x1f6c*/ 763,
-      -1, -1,
-      /*0x04ec*/ 411,
-      /*0x2c2d*/ 956,
-      /*0x015c*/ 102,
+      /*0x1ca1*/ 556,
+      /*0xabad*/ 1211,
+      /*0x0543*/ 463,
       -1,
-      /*0xfb17*/ 1233,
+      /*0x1058c*/ 1370,
       -1,
-      /*0xa740*/ 1077,
-      /*0x03dc*/ 277,
-      /*0x1ff2*/ 854,
-      /*0x0472*/ 354,
+      /*0x2c2d*/ 956,
+      /*0xa66c*/ 1049,
+      -1, -1, -1, -1,
+      /*0x03e8*/ 283,
+      -1, -1, -1,
+      /*0x04da*/ 402,
+      /*0x1f52*/ 752,
+      /*0x0245*/ 223,
+      /*0x24c0*/ 895,
+      /*0xa74c*/ 1084,
+      /*0x04ea*/ 410,
       -1,
-      /*0x0172*/ 113,
+      /*0x01ec*/ 178,
+      /*0xa7ad*/ 1127,
+      /*0x1cb9*/ 580,
+      -1,
+      /*0x10cad*/ 1424,
+      -1, -1, -1, -1, -1, -1,
+      /*0x0397*/ 248,
+      /*0x1fbb*/ 823,
+      /*0xab7c*/ 1162,
+      /*0x013b*/ 85,
       -1, -1,
-      /*0x10a9*/ 493,
-      /*0x01f2*/ 182,
-      /*0x10425*/ 1297,
+      /*0xabbb*/ 1225,
+      -1, -1,
+      /*0x24bd*/ 892,
+      -1, -1,
+      /*0x10c0*/ 516,
+      -1,
+      /*0x04e2*/ 406,
+      -1,
+      /*0x01a9*/ 146,
+      /*0x10ab*/ 495,
       /*0x1fa5*/ 804,
       /*0x0425*/ 334,
-      /*0x2c72*/ 969,
+      /*0xa65a*/ 1040,
+      /*0x10425*/ 1305,
       -1,
-      /*0xaba5*/ 1195,
+      /*0xaba5*/ 1203,
+      /*0x1fb7*/ 819,
+      /*0xa66a*/ 1048,
+      -1, -1,
+      /*0x2c25*/ 948,
+      /*0xabb7*/ 1221,
+      /*0x24c9*/ 904,
+      /*0xa748*/ 1082,
+      /*0x04c7*/ 393,
+      /*0x053b*/ 455,
+      /*0x104c7*/ 1331,
       -1,
-      /*0x2cdc*/ 1019,
+      /*0x10bd*/ 513,
+      /*0x04c5*/ 392,
+      /*0x1f2b*/ 732,
+      /*0x104c5*/ 1329,
       -1,
-      /*0x03a5*/ 261,
-      /*0x10c3*/ 519,
-      /*0xa7ad*/ 1126,
-      /*0x2c25*/ 948,
+      /*0x01ea*/ 177,
+      /*0x1c97*/ 546,
+      -1,
+      /*0x1e921*/ 1527,
+      /*0x104b9*/ 1317,
       -1, -1, -1,
-      /*0x2cf2*/ 1025,
-      /*0x10a1*/ 485,
-      /*0x1e6a*/ 638,
-      /*0x00c9*/ 35,
-      /*0x1cad*/ 568,
-      /*0x10cad*/ 1381,
-      /*0x1edc*/ 697,
-      /*0x004d*/ 11,
+      /*0x10ca5*/ 1416,
       -1, -1,
-      /*0x01cd*/ 163,
+      /*0xa662*/ 1044,
+      /*0x03ee*/ 286,
       -1,
-      /*0x24c9*/ 904,
-      /*0xa66a*/ 1047,
-      /*0x10b9*/ 509,
-      /*0x1ef2*/ 708,
-      /*0x1f49*/ 746,
-      /*0x104c9*/ 1325,
-      /*0xa762*/ 1094,
-      /*0x04c9*/ 394,
-      /*0x0549*/ 469,
-      /*0x013f*/ 87,
-      /*0xabbf*/ 1221,
+      /*0x1f6c*/ 763,
+      /*0x0537*/ 451,
+      /*0x1f3d*/ 742,
+      /*0xa74e*/ 1085,
+      -1,
+      /*0xa68e*/ 1057,
+      /*0x10a9*/ 493,
+      /*0x03de*/ 278,
+      -1, -1, -1,
+      /*0xa68c*/ 1056,
+      -1,
+      /*0x01e2*/ 173,
       -1,
-      /*0xa754*/ 1087,
-      /*0x10423*/ 1295,
       /*0x1fa3*/ 802,
       /*0x0423*/ 332,
+      /*0x04e8*/ 409,
+      /*0x10423*/ 1303,
+      /*0x118ab*/ 1441,
+      /*0xaba3*/ 1201,
       -1, -1,
-      /*0xaba3*/ 1193,
-      /*0x1ca5*/ 560,
-      /*0x10ca5*/ 1373,
-      /*0x1f6a*/ 761,
-      /*0x03a3*/ 259,
+      /*0x1f49*/ 746,
       -1,
-      /*0x04ea*/ 410,
       /*0x2c23*/ 946,
-      -1,
-      /*0x0241*/ 220,
-      /*0x0141*/ 88,
-      /*0x0041*/ 0,
-      /*0x00c3*/ 29,
+      /*0xa742*/ 1079,
       /*0x1f29*/ 730,
-      -1, -1,
-      /*0xa758*/ 1089,
-      -1, -1,
-      /*0x1e68*/ 637,
       -1,
-      /*0x24c3*/ 898,
+      /*0xff2b*/ 1252,
+      -1,
+      /*0x01c7*/ 159,
       -1, -1, -1, -1,
-      /*0x104c3*/ 1319,
+      /*0x01c5*/ 158,
       -1,
-      /*0x04c3*/ 391,
-      /*0x0543*/ 463,
-      /*0xa668*/ 1046,
-      /*0x0372*/ 231,
-      -1, -1,
-      /*0x1cbf*/ 584,
+      /*0x118bd*/ 1459,
+      /*0x004d*/ 11,
+      /*0xa752*/ 1087,
       -1, -1, -1,
-      /*0x023d*/ 218,
-      /*0x013d*/ 86,
-      /*0xabbd*/ 1219,
+      /*0x03e6*/ 282,
+      /*0x04f2*/ 414,
+      /*0x10ca3*/ 1414,
+      -1, -1,
+      /*0x24c7*/ 902,
+      /*0x01d5*/ 167,
+      -1,
+      /*0x1f6a*/ 761,
+      /*0x1058d*/ 1371,
+      /*0x24c5*/ 900,
+      /*0xa668*/ 1047,
+      -1,
+      /*0x00cd*/ 39,
+      -1, -1,
       /*0x24b9*/ 888,
-      /*0x1ca3*/ 558,
-      /*0x10ca3*/ 1371,
       -1,
-      /*0x1f39*/ 738,
-      /*0x104b9*/ 1309,
+      /*0x10a1*/ 485,
+      /*0x118a9*/ 1439,
+      -1,
+      /*0x1e917*/ 1517,
+      /*0xa746*/ 1081,
+      -1,
+      /*0x16e54*/ 1482,
+      /*0xa758*/ 1090,
+      /*0x054d*/ 473,
+      /*0x01e8*/ 176,
+      -1,
+      /*0xff29*/ 1250,
       -1, -1,
-      /*0x0539*/ 453,
-      /*0x1f68*/ 759,
-      /*0x00cb*/ 37,
+      /*0x10c7*/ 522,
+      /*0x0470*/ 353,
+      /*0x0170*/ 112,
+      -1,
+      /*0x0243*/ 221,
+      /*0x10c5*/ 521,
+      -1, -1, -1, -1,
+      /*0x2c70*/ 969,
+      /*0x10b9*/ 509,
+      /*0x1ef0*/ 707,
+      /*0x1e70*/ 641,
+      /*0xa740*/ 1078,
+      -1,
+      /*0x04ee*/ 412,
+      /*0x0197*/ 136,
       -1,
-      /*0x04e8*/ 409,
-      /*0x1041d*/ 1289,
       /*0x1f9d*/ 796,
       /*0x041d*/ 326,
-      -1, -1,
-      /*0xab9d*/ 1187,
-      /*0x24cb*/ 906,
       -1,
-      /*0x019d*/ 139,
-      /*0x039d*/ 254,
-      /*0x1f4b*/ 748,
-      /*0x104cb*/ 1327,
+      /*0x1041d*/ 1297,
+      /*0x01f2*/ 182,
+      /*0xab9d*/ 1195,
+      /*0x04de*/ 404,
+      -1, -1, -1,
       /*0x2c1d*/ 940,
-      /*0x04cb*/ 395,
-      /*0x054b*/ 471,
-      /*0x10407*/ 1267,
-      /*0x1f87*/ 774,
-      /*0x0407*/ 304,
-      /*0x0587*/ 483,
+      /*0x0370*/ 230,
+      /*0x1cad*/ 568,
+      /*0x1f39*/ 738,
       -1,
-      /*0xab87*/ 1165,
-      /*0x1e64*/ 635,
+      /*0x10570*/ 1344,
       -1,
-      /*0x0187*/ 125,
-      /*0x1041b*/ 1287,
+      /*0xa76c*/ 1100,
+      /*0x212b*/ 866,
+      /*0xabb5*/ 1219,
+      -1, -1, -1, -1,
+      /*0x118a1*/ 1431,
+      -1,
+      /*0x03a5*/ 261,
       /*0x1f9b*/ 794,
       /*0x041b*/ 324,
-      /*0x2c07*/ 918,
-      /*0x1cbd*/ 582,
-      /*0xab9b*/ 1185,
-      -1, -1,
-      /*0xa664*/ 1044,
-      /*0x039b*/ 252,
-      -1,
-      /*0x1e60*/ 633,
-      /*0x2c1b*/ 938,
-      /*0x1fbb*/ 823,
-      -1,
-      /*0x023b*/ 217,
-      /*0x013b*/ 85,
-      /*0xabbb*/ 1217,
-      -1, -1,
-      /*0x1e74*/ 643,
-      /*0xab73*/ 1145,
-      /*0xa660*/ 1042,
-      /*0x1c9d*/ 552,
-      /*0x10c9d*/ 1365,
-      /*0x1e7c*/ 647,
       -1,
-      /*0x1e91d*/ 1480,
+      /*0x1041b*/ 1295,
+      /*0x10c9d*/ 1408,
+      /*0xab9b*/ 1193,
+      /*0x00b5*/ 25,
+      /*0xff21*/ 1242,
+      /*0x216c*/ 880,
       -1,
-      /*0x1ff6*/ 857,
-      /*0x0476*/ 356,
-      /*0x04e4*/ 407,
-      /*0x0176*/ 115,
-      -1, -1, -1,
-      /*0x01f6*/ 184,
-      /*0x2162*/ 870,
-      /*0x1c87*/ 537,
-      /*0x10c87*/ 1343,
+      /*0x2c1b*/ 938,
+      /*0x04c3*/ 391,
       /*0x1e9b*/ 665,
-      /*0x118a9*/ 1396,
-      /*0x1e907*/ 1458,
-      /*0xa76c*/ 1099,
+      /*0x104c3*/ 1327,
       -1,
-      /*0x04e0*/ 405,
-      /*0x1e6e*/ 640,
-      /*0x1c9b*/ 550,
-      /*0x10c9b*/ 1363,
-      -1, -1,
-      /*0x1e91b*/ 1478,
-      -1, -1,
-      /*0x04f4*/ 415,
-      /*0x1e66*/ 636,
+      /*0x1f68*/ 759,
+      /*0x04e6*/ 408,
+      /*0xa65e*/ 1042,
+      -1,
+      /*0x0535*/ 449,
       -1, -1,
-      /*0x1e5e*/ 632,
-      /*0x04fc*/ 419,
-      /*0x118a1*/ 1388,
+      /*0x118b9*/ 1455,
+      /*0x023b*/ 217,
+      /*0x01ee*/ 179,
+      /*0x1f95*/ 788,
+      /*0x0415*/ 318,
       -1,
-      /*0xabb1*/ 1207,
+      /*0x10415*/ 1289,
       -1,
-      /*0xff29*/ 1242,
-      /*0x01b1*/ 150,
-      /*0xa666*/ 1045,
+      /*0xab95*/ 1187,
+      /*0x10c9b*/ 1406,
+      /*0xff39*/ 1266,
+      /*0x01de*/ 171,
       -1,
-      /*0x1ef6*/ 710,
-      /*0xa65e*/ 1041,
-      /*0x10419*/ 1285,
+      /*0x2c15*/ 932,
+      -1,
+      /*0xa75a*/ 1091,
+      -1, -1, -1,
+      /*0x1ca5*/ 560,
+      /*0xa76a*/ 1099,
       /*0x1f99*/ 792,
       /*0x0419*/ 322,
-      /*0x118b9*/ 1412,
-      /*0x10ad*/ 497,
-      /*0xab99*/ 1183,
-      /*0x00de*/ 55,
-      /*0x1f6e*/ 765,
       -1,
-      /*0x0399*/ 250,
-      /*0x04ee*/ 412,
+      /*0x10419*/ 1293,
+      /*0x1cb7*/ 578,
+      /*0xab99*/ 1191,
+      /*0xfb17*/ 1241,
       -1,
+      /*0x03a3*/ 259,
+      /*0x1fb3*/ 816,
       /*0x2c19*/ 936,
-      /*0xff21*/ 1234,
-      /*0x1fb7*/ 819,
-      /*0x10413*/ 1279,
+      /*0xa666*/ 1046,
+      /*0x1e99*/ 663,
+      /*0x10c95*/ 1400,
+      /*0xabb3*/ 1217,
       /*0x1f93*/ 786,
       /*0x0413*/ 316,
-      /*0xabb7*/ 1213,
-      /*0x04e6*/ 408,
-      /*0xab93*/ 1177,
-      /*0x01b7*/ 154,
-      /*0x04de*/ 404,
-      /*0x0193*/ 133,
-      /*0x0393*/ 244,
-      /*0xa7b1*/ 1129,
-      /*0xff39*/ 1258,
+      /*0x216a*/ 878,
+      /*0x10413*/ 1287,
+      /*0x16e5b*/ 1489,
+      /*0xab93*/ 1185,
+      -1, -1, -1, -1,
       /*0x2c13*/ 930,
-      /*0x00d1*/ 43,
-      /*0x1ffa*/ 861,
-      /*0x047a*/ 358,
-      /*0x10a5*/ 489,
-      -1, -1,
-      /*0x1cb1*/ 572,
-      /*0x10cb1*/ 1385,
-      /*0x01fa*/ 187,
-      /*0x03fa*/ 293,
+      /*0xa762*/ 1095,
+      /*0x01e6*/ 175,
       -1, -1,
-      /*0x1e99*/ 663,
-      /*0xa76a*/ 1098,
-      /*0x104d1*/ 1333,
-      /*0x1e5c*/ 631,
-      /*0x0376*/ 232,
-      /*0x0551*/ 477,
+      /*0x0587*/ 483,
+      /*0x10c99*/ 1404,
+      /*0x10587*/ 1366,
+      /*0x1f91*/ 784,
+      /*0x0411*/ 314,
+      /*0x104bb*/ 1319,
+      /*0x10411*/ 1285,
+      /*0xa7b3*/ 1132,
+      /*0xab91*/ 1183,
       -1,
-      /*0x1c99*/ 548,
-      /*0x10c99*/ 1361,
-      /*0x10cd*/ 523,
+      /*0x24c3*/ 898,
+      /*0x0533*/ 447,
       -1,
-      /*0x1e919*/ 1476,
-      /*0x1e72*/ 642,
+      /*0x2c11*/ 928,
+      /*0x2162*/ 870,
+      /*0x004f*/ 13,
+      /*0x10c93*/ 1398,
+      /*0x1f6e*/ 765,
+      /*0x16e53*/ 1481,
       -1,
-      /*0xa65c*/ 1040,
+      /*0x1ca3*/ 558,
       -1,
-      /*0x13fa*/ 526,
-      -1, -1, -1,
-      /*0x1cb7*/ 578,
-      /*0x00dc*/ 53,
-      /*0x1c93*/ 542,
-      /*0x10c93*/ 1355,
-      /*0x10bf*/ 515,
-      /*0x1f2d*/ 734,
-      /*0x1e913*/ 1470,
-      /*0xabb5*/ 1211,
-      /*0x1efa*/ 712,
+      /*0x1f8f*/ 782,
+      /*0x040f*/ 312,
       -1,
-      /*0x01b5*/ 153,
+      /*0x1040f*/ 1283,
       -1,
-      /*0x10a3*/ 487,
-      /*0xab75*/ 1147,
-      -1, -1, -1,
-      /*0x04dc*/ 403,
-      /*0x1fb3*/ 816,
+      /*0xab8f*/ 1181,
+      /*0x104b7*/ 1315,
       -1, -1, -1,
-      /*0xabb3*/ 1209,
-      /*0x10c1*/ 517,
+      /*0x2c0f*/ 926,
+      /*0x00cf*/ 41,
+      /*0x10c91*/ 1396,
+      /*0x1f81*/ 768,
+      /*0x0401*/ 298,
+      /*0x10c3*/ 519,
+      /*0x10401*/ 1269,
+      /*0x03f0*/ 287,
+      /*0xab81*/ 1167,
+      -1, -1, -1, -1,
+      /*0x2c01*/ 912,
+      /*0x054f*/ 475,
+      -1, -1,
+      /*0x1ff4*/ 856,
+      /*0x0474*/ 355,
+      /*0x0174*/ 114,
       -1,
-      /*0x01b3*/ 152,
-      /*0x04f2*/ 414,
+      /*0x10c8f*/ 1394,
+      /*0xa768*/ 1098,
       -1,
-      /*0xa768*/ 1097,
+      /*0x047e*/ 360,
       -1,
-      /*0x1041f*/ 1291,
-      /*0x1f9f*/ 798,
-      /*0x041f*/ 328,
+      /*0x039d*/ 254,
+      /*0x16e4a*/ 1472,
+      /*0x015c*/ 102,
+      /*0x1ef4*/ 709,
+      /*0x1e74*/ 643,
+      /*0x10ad*/ 497,
+      -1,
+      /*0x2c7e*/ 972,
+      /*0x10c81*/ 1380,
+      /*0x1efe*/ 714,
+      /*0x1e7e*/ 648,
+      -1,
+      /*0x1edc*/ 697,
+      /*0x1e5c*/ 631,
+      /*0x2168*/ 876,
+      /*0x013f*/ 87,
+      -1,
+      /*0x24bb*/ 890,
+      /*0xabbf*/ 1229,
+      /*0x00dc*/ 53,
+      /*0xabb1*/ 1215,
+      /*0x2cdc*/ 1020,
+      /*0x01b7*/ 154,
+      -1, -1,
+      /*0x10574*/ 1348,
+      /*0x1f2d*/ 734,
+      /*0x039b*/ 252,
       -1, -1,
-      /*0xab9f*/ 1189,
+      /*0x16e4b*/ 1473,
+      /*0x1057e*/ 1357,
+      -1, -1, -1, -1, -1,
+      /*0x04cd*/ 396,
       -1,
-      /*0x00cd*/ 39,
-      /*0x019f*/ 140,
-      /*0x039f*/ 256,
-      /*0x216c*/ 880,
+      /*0x104cd*/ 1337,
+      /*0x24b7*/ 886,
       -1,
-      /*0x2c1f*/ 942,
-      -1, -1, -1,
-      /*0x24cd*/ 908,
+      /*0x1c9d*/ 552,
+      /*0xa7b1*/ 1130,
+      /*0x10bb*/ 511,
+      /*0x053f*/ 459,
+      /*0x10cb1*/ 1428,
+      /*0x0531*/ 445,
+      /*0x1f9f*/ 798,
+      /*0x041f*/ 328,
+      -1,
+      /*0x1041f*/ 1299,
+      /*0x0395*/ 246,
+      /*0xab9f*/ 1197,
       -1, -1,
       /*0x1cb5*/ 576,
-      /*0x1f4d*/ 750,
-      /*0x104cd*/ 1329,
-      /*0x10bd*/ 513,
-      /*0x04cd*/ 396,
-      /*0x054d*/ 473,
-      /*0xa7b3*/ 1131,
-      /*0x1ff8*/ 859,
-      /*0x0478*/ 357,
-      /*0xab7f*/ 1157,
-      /*0x0178*/ 116,
-      /*0xab71*/ 1143,
-      /*0x24bf*/ 894,
       -1,
-      /*0x01f8*/ 186,
-      /*0x1cb3*/ 574,
-      /*0x1f3f*/ 744,
-      /*0x104bf*/ 1315,
+      /*0x2c1f*/ 942,
       -1, -1,
-      /*0x053f*/ 459,
+      /*0x10a5*/ 489,
+      /*0x118ad*/ 1443,
+      -1, -1,
+      /*0x1f3b*/ 740,
       -1,
-      /*0x00c1*/ 27,
-      -1, -1, -1, -1, -1,
-      /*0x1c9f*/ 554,
-      /*0x10c9f*/ 1367,
-      /*0xfb13*/ 1229,
-      /*0x24c1*/ 896,
-      /*0x1e91f*/ 1482,
+      /*0x10b7*/ 507,
       -1,
-      /*0x13f8*/ 524,
-      /*0xa764*/ 1095,
-      /*0x104c1*/ 1317,
+      /*0x1c9b*/ 550,
+      /*0x0399*/ 250,
+      /*0xa76e*/ 1101,
+      /*0xff2d*/ 1254,
+      /*0x1f85*/ 772,
+      /*0x0405*/ 302,
+      /*0x04f0*/ 413,
+      /*0x10405*/ 1273,
       -1,
-      /*0x04c1*/ 390,
-      /*0x0541*/ 461,
-      /*0xab79*/ 1151,
+      /*0xab85*/ 1171,
+      /*0x10c9f*/ 1410,
+      /*0xa75e*/ 1093,
       -1, -1,
-      /*0x10415*/ 1281,
-      /*0x1f95*/ 788,
-      /*0x0415*/ 318,
-      /*0x1ef8*/ 711,
+      /*0x2c05*/ 916,
       -1,
-      /*0xab95*/ 1179,
-      /*0xa760*/ 1093,
-      -1, -1,
-      /*0x0395*/ 246,
-      -1, -1,
-      /*0x2c15*/ 932,
+      /*0x0393*/ 244,
       -1, -1,
-      /*0x10bb*/ 511,
-      /*0x216a*/ 878,
-      /*0x24bd*/ 892,
+      /*0x0051*/ 15,
+      /*0x216e*/ 882,
       -1,
-      /*0x118ad*/ 1400,
+      /*0x01cd*/ 163,
+      -1, -1,
+      /*0x1c95*/ 544,
+      /*0x1f8b*/ 778,
+      /*0x040b*/ 308,
       -1,
-      /*0x1f3d*/ 742,
-      /*0x104bd*/ 1313,
+      /*0x1040b*/ 1279,
       -1,
-      /*0x047e*/ 360,
-      /*0x053d*/ 457,
-      /*0x16e52*/ 1437,
-      -1, -1, -1,
-      /*0x01fe*/ 189,
-      /*0x03fe*/ 295,
-      /*0x16e4c*/ 1431,
-      /*0xab7b*/ 1153,
-      /*0x2c7e*/ 971,
-      -1, -1, -1, -1, -1,
-      /*0x1f1d*/ 728,
-      /*0xa76e*/ 1100,
-      /*0xff2d*/ 1246,
-      -1, -1, -1,
-      /*0x118a5*/ 1392,
-      /*0x1c95*/ 544,
-      /*0x10c95*/ 1357,
+      /*0xab8b*/ 1177,
+      /*0x118bb*/ 1457,
       -1,
-      /*0xa766*/ 1096,
-      /*0x1e915*/ 1472,
+      /*0x0391*/ 242,
+      /*0x10c85*/ 1384,
+      /*0x2c0b*/ 922,
+      /*0x00d1*/ 43,
+      -1, -1,
+      /*0x24cd*/ 908,
+      /*0x104b5*/ 1313,
       -1,
-      /*0xa75e*/ 1092,
-      -1, -1, -1, -1, -1, -1,
-      /*0x10b1*/ 501,
-      /*0x1e76*/ 644,
-      /*0x1efe*/ 714,
-      /*0x2168*/ 876,
-      /*0x1f1b*/ 726,
+      /*0x1c99*/ 548,
+      /*0x10a3*/ 487,
+      /*0x03cf*/ 270,
+      -1, -1,
+      /*0xa766*/ 1097,
+      /*0x118a5*/ 1435,
+      /*0x0551*/ 477,
+      /*0x1e91d*/ 1523,
+      /*0x1cb3*/ 574,
+      /*0x038f*/ 240,
+      /*0xa78b*/ 1110,
+      /*0x118b7*/ 1453,
       -1,
-      /*0x10411*/ 1277,
-      /*0x1f91*/ 784,
-      /*0x0411*/ 314,
-      /*0xff25*/ 1238,
+      /*0x10c8b*/ 1390,
+      /*0x1c93*/ 542,
+      /*0xff25*/ 1246,
+      /*0x01f0*/ 180,
+      /*0x1ff6*/ 857,
+      /*0x0476*/ 356,
+      /*0x0176*/ 115,
       -1,
-      /*0xab91*/ 1175,
-      /*0x24bb*/ 890,
+      /*0xff37*/ 1264,
+      /*0x2166*/ 874,
+      /*0x10cd*/ 523,
+      -1, -1, -1,
+      /*0x1ffa*/ 861,
+      /*0x047a*/ 358,
+      /*0x1ef6*/ 710,
+      /*0x1e76*/ 644,
       -1,
-      /*0x0191*/ 132,
-      /*0x0391*/ 242,
-      /*0x1f3b*/ 740,
-      /*0x104bb*/ 1311,
-      /*0x2c11*/ 928,
-      /*0x118bf*/ 1418,
-      /*0x053b*/ 455,
-      -1, -1,
-      /*0xab7d*/ 1155,
-      -1, -1,
-      /*0x10b7*/ 507,
-      /*0x118a3*/ 1390,
-      /*0x1040f*/ 1275,
-      /*0x1f8f*/ 782,
-      /*0x040f*/ 312,
-      -1, -1,
-      /*0xab8f*/ 1173,
+      /*0x1c91*/ 540,
       -1,
-      /*0x04f6*/ 416,
-      /*0x018f*/ 130,
-      /*0x038f*/ 240,
+      /*0x1e91b*/ 1521,
+      /*0x019d*/ 139,
+      /*0x03f4*/ 289,
       -1, -1,
-      /*0x2c0f*/ 926,
+      /*0x1efa*/ 712,
+      /*0x1e7a*/ 646,
+      /*0x16e56*/ 1484,
+      /*0x03fe*/ 295,
       -1,
-      /*0x16e4a*/ 1429,
+      /*0x1f4d*/ 750,
+      /*0x03dc*/ 277,
       -1,
-      /*0x1040b*/ 1271,
-      /*0x1f8b*/ 778,
-      /*0x040b*/ 308,
+      /*0x0376*/ 232,
       -1,
-      /*0xa75c*/ 1091,
-      /*0xab8b*/ 1169,
-      /*0xff23*/ 1236,
+      /*0x01b5*/ 153,
       -1,
-      /*0x018b*/ 128,
-      /*0x1c91*/ 540,
-      /*0x10c91*/ 1353,
+      /*0x10576*/ 1350,
       -1,
-      /*0x2c0b*/ 922,
-      /*0x1e911*/ 1468,
+      /*0x1ff8*/ 859,
+      /*0x0478*/ 357,
+      /*0x0178*/ 116,
       -1,
-      /*0x2164*/ 872,
-      /*0xab77*/ 1149,
+      /*0x118a3*/ 1433,
       -1,
-      /*0x104b1*/ 1301,
+      /*0x1e915*/ 1515,
       -1,
-      /*0xfb15*/ 1231,
-      /*0x0531*/ 445,
+      /*0x1057a*/ 1354,
+      /*0x104b3*/ 1311,
       -1,
-      /*0x118bd*/ 1416,
-      /*0x16e44*/ 1423,
-      /*0x16e4f*/ 1434,
+      /*0x1c81*/ 531,
+      /*0x1ef8*/ 711,
+      /*0x1e78*/ 645,
+      /*0xff23*/ 1244,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1,
+      /*0x1e919*/ 1519,
       -1,
-      /*0x1e7a*/ 646,
+      /*0x16e44*/ 1466,
+      -1, -1, -1, -1, -1, -1,
       -1,
-      /*0x2160*/ 868,
-      /*0x1f19*/ 724,
+      /*0x10578*/ 1352,
+      -1, -1, -1, -1,
+      /*0x1e913*/ 1513,
+      /*0x039f*/ 256,
       /*0x10b5*/ 505,
-      /*0x10c8f*/ 1351,
       -1, -1,
-      /*0x1e90f*/ 1466,
+      /*0x104cf*/ 1339,
       -1, -1,
-      /*0xa78b*/ 1109,
-      /*0x24b7*/ 886,
-      /*0x10405*/ 1265,
-      /*0x1f85*/ 772,
-      /*0x0405*/ 302,
-      -1,
-      /*0x104b7*/ 1307,
-      /*0xab85*/ 1163,
-      /*0x10b3*/ 503,
-      /*0x0537*/ 451,
-      /*0x10c8b*/ 1347,
-      -1,
-      /*0x16e42*/ 1421,
-      /*0x1e90b*/ 1462,
-      /*0x2c05*/ 916,
-      -1, -1, -1, -1, -1,
-      /*0x10401*/ 1261,
-      /*0x1f81*/ 768,
-      /*0x0401*/ 298,
-      /*0x04fa*/ 418,
-      /*0x16e48*/ 1427,
-      /*0xab81*/ 1159,
-      /*0x216e*/ 882,
-      -1,
-      /*0x0181*/ 121,
-      -1, -1, -1,
-      /*0x2c01*/ 912,
+      /*0x1cbf*/ 584,
+      /*0x1f1d*/ 728,
+      /*0x1cb1*/ 572,
+      -1, -1, -1, -1,
+      /*0x16e50*/ 1478,
       -1, -1,
-      /*0x2166*/ 874,
+      /*0x1e911*/ 1511,
+      -1, -1, -1,
+      /*0x01b3*/ 152,
       -1, -1, -1, -1,
-      /*0x118bb*/ 1414,
-      /*0x00b5*/ 25,
+      /*0x13fa*/ 526,
+      /*0x0193*/ 133,
       -1, -1, -1, -1, -1, -1,
       -1,
-      /*0x1c85*/ 535,
-      /*0x10c85*/ 1341,
+      /*0x1f1b*/ 726,
+      /*0x1e90f*/ 1509,
+      /*0x04f4*/ 415,
+      -1,
+      /*0x03d1*/ 272,
       -1, -1,
-      /*0x1e905*/ 1456,
+      /*0x1c9f*/ 554,
+      /*0x04fe*/ 420,
       -1,
-      /*0x104b5*/ 1305,
+      /*0x0191*/ 132,
+      /*0x04dc*/ 403,
       -1, -1,
-      /*0x0535*/ 449,
-      -1, -1, -1, -1,
-      /*0x16e50*/ 1435,
+      /*0x1e901*/ 1495,
+      -1, -1,
+      /*0x13f8*/ 524,
       -1,
-      /*0x16e56*/ 1441,
+      /*0x16e4c*/ 1474,
       -1,
-      /*0x1c81*/ 531,
-      /*0x10c81*/ 1337,
+      /*0x01cf*/ 164,
       -1,
-      /*0x104b3*/ 1303,
-      /*0x1e901*/ 1452,
+      /*0x118b5*/ 1451,
+      -1, -1,
+      /*0x104bf*/ 1323,
       -1,
-      /*0x0533*/ 447,
-      /*0x16e5b*/ 1446,
+      /*0x104b1*/ 1309,
+      /*0x018f*/ 130,
       -1,
-      /*0x1e78*/ 645,
-      -1, -1, -1, -1, -1, -1,
+      /*0x10b3*/ 503,
+      /*0x1c85*/ 535,
+      /*0xff35*/ 1262,
+      -1, -1, -1,
+      /*0xfb15*/ 1239,
+      -1,
+      /*0x24cf*/ 910,
       -1, -1,
-      /*0x118b1*/ 1404,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
+      /*0x0181*/ 121,
+      /*0x1f19*/ 724,
       -1, -1, -1, -1, -1,
-      /*0x16e46*/ 1425,
-      /*0xab70*/ 1142,
-      -1, -1, -1,
-      /*0xff31*/ 1250,
-      /*0x16e4e*/ 1433,
-      /*0x04f8*/ 417,
-      /*0x118b7*/ 1410,
-      -1, -1, -1,
-      /*0x16e5a*/ 1445,
+      /*0xa65c*/ 1041,
       -1, -1, -1, -1, -1, -1,
+      /*0x01f4*/ 183,
+      /*0x03fa*/ 293,
       -1, -1, -1, -1,
-      /*0xfb05*/ 1227,
-      -1, -1, -1, -1, -1, -1,
+      /*0x01fe*/ 189,
       -1,
-      /*0xff37*/ 1256,
-      /*0x1e7e*/ 648,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1,
-      /*0xfb01*/ 1223,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1,
-      /*0x16e40*/ 1419,
+      /*0x16e48*/ 1470,
       -1, -1, -1, -1, -1,
-      /*0x118b5*/ 1408,
+      /*0xfb13*/ 1237,
       -1, -1, -1, -1, -1, -1,
+      -1, -1, -1,
+      /*0x01b1*/ 150,
+      -1, -1, -1, -1,
+      /*0x1e91f*/ 1525,
       -1, -1,
-      /*0x04fe*/ 420,
-      -1, -1, -1, -1, -1,
-      /*0x118b3*/ 1406,
-      -1, -1, -1, -1, -1, -1,
-      -1,
-      /*0xff35*/ 1254,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
+      /*0x118b3*/ 1449,
       -1, -1,
-      /*0xff33*/ 1252,
-      -1, -1, -1, -1, -1,
-      /*0x16e54*/ 1439,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
+      /*0x16e4e*/ 1476,
       -1, -1, -1,
-      /*0x16e58*/ 1443,
-      -1, -1, -1, -1, -1,
       /*0x1f0f*/ 722,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1,
-      /*0x1f0b*/ 718,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1,
-      /*0x16e55*/ 1440,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1,
-      /*0x16e45*/ 1424,
+      /*0x24bf*/ 894,
+      -1,
+      /*0xff33*/ 1260,
+      -1,
+      /*0x104d1*/ 1341,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1,
-      /*0x16e59*/ 1444,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1,
-      /*0xa77e*/ 1104,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
+      /*0x1e905*/ 1499,
+      -1, -1,
+      /*0x019f*/ 140,
+      /*0x16e42*/ 1464,
       -1, -1, -1, -1, -1,
-      /*0x16e49*/ 1428,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
+      /*0xfb01*/ 1231,
       -1, -1,
-      /*0x16e43*/ 1422,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
+      /*0x10bf*/ 515,
+      -1,
+      /*0x10b1*/ 501,
       -1, -1,
-      /*0x16e4b*/ 1430,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      /*0x16e5e*/ 1449,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
+      /*0x16e52*/ 1480,
       -1, -1, -1,
-      /*0x16e51*/ 1436,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
+      /*0x1e90b*/ 1505,
       -1, -1, -1, -1, -1, -1,
       -1, -1,
-      /*0x16e5c*/ 1447,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1,
-      /*0x16e4d*/ 1432,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1,
-      /*0x16e41*/ 1420,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1,
+      /*0x04f6*/ 416,
+      -1, -1,
+      /*0x1f3f*/ 744,
       -1, -1, -1, -1, -1, -1,
+      /*0x04fa*/ 418,
+      /*0x01d1*/ 165,
+      -1,
+      /*0x16e46*/ 1468,
+      -1, -1,
+      /*0x16e58*/ 1486,
+      -1, -1,
+      /*0x018b*/ 128,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1,
+      /*0x04f8*/ 417,
+      /*0x16e40*/ 1462,
+      -1,
+      /*0x118bf*/ 1461,
+      -1,
+      /*0x118b1*/ 1447,
       -1, -1, -1, -1, -1, -1,
+      -1, -1, -1,
+      /*0xff31*/ 1258,
+      -1, -1,
+      /*0x01f6*/ 184,
       -1, -1, -1, -1, -1, -1,
+      -1, -1,
+      /*0xab72*/ 1152,
+      /*0x01fa*/ 187,
       -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1,
+      /*0xfb05*/ 1235,
       -1, -1, -1, -1, -1, -1,
+      /*0x16e49*/ 1471,
+      -1, -1,
+      /*0x1f0b*/ 718,
+      -1, -1, -1, -1,
+      /*0x01f8*/ 186,
       -1, -1, -1, -1, -1, -1,
+      -1, -1,
+      /*0xa77e*/ 1105,
+      -1, -1,
+      /*0xa75c*/ 1092,
+      -1, -1, -1,
+      /*0x16e5a*/ 1488,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
@@ -3585,8 +3621,14 @@ onigenc_unicode_CaseFold_11_lookup(const OnigCodePoint code)
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      -1,
+      /*0x16e47*/ 1469,
+      -1, -1, -1, -1,
+      /*0x16e45*/ 1467,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      -1,
+      /*0x16e55*/ 1483,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
@@ -3599,27 +3641,28 @@ onigenc_unicode_CaseFold_11_lookup(const OnigCodePoint code)
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      -1,
-      /*0xab74*/ 1146,
-      -1, -1, -1, -1,
-      /*0xab7c*/ 1154,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      -1, -1,
+      /*0x16e5e*/ 1492,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      -1,
+      /*0x16e43*/ 1465,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      -1, -1, -1,
+      /*0xab70*/ 1150,
       -1, -1, -1, -1, -1, -1,
-      /*0xab72*/ 1144,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
@@ -3639,44 +3682,62 @@ onigenc_unicode_CaseFold_11_lookup(const OnigCodePoint code)
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      -1, -1,
+      /*0x16e4d*/ 1475,
       -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1,
+      /*0x10595*/ 1378,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      -1, -1, -1,
+      /*0xab74*/ 1154,
+      -1, -1, -1, -1, -1,
+      /*0xab7e*/ 1164,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1,
-      /*0xab76*/ 1148,
+      /*0x10591*/ 1375,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      /*0x1058f*/ 1373,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      /*0x10581*/ 1360,
+      -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      -1, -1, -1,
-      /*0xab7a*/ 1152,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1,
+      /*0x16e4f*/ 1477,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      /*0xab76*/ 1156,
+      -1, -1, -1, -1, -1,
+      /*0x10585*/ 1364,
+      -1, -1, -1,
+      /*0xab7a*/ 1160,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      -1, -1,
+      /*0x16e5c*/ 1490,
+      -1, -1, -1, -1,
+      /*0xab78*/ 1158,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      -1, -1,
-      /*0xab78*/ 1150,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
@@ -3686,8 +3747,8 @@ onigenc_unicode_CaseFold_11_lookup(const OnigCodePoint code)
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1,
-      /*0xab7e*/ 1156
+      -1, -1, -1,
+      /*0x16e51*/ 1479
     };
 
   if (code <= MAX_CODE_VALUE && code >= MIN_CODE_VALUE)
@@ -3706,7 +3767,7 @@ onigenc_unicode_CaseFold_11_lookup(const OnigCodePoint code)
 }
 
 static const CaseUnfold_11_Type CaseUnfold_11_Table[] = {
-#define CaseUnfold_11 (*(CaseUnfold_11_Type (*)[1352])(CaseUnfold_11_Table+0))
+#define CaseUnfold_11 (*(CaseUnfold_11_Type (*)[1395])(CaseUnfold_11_Table+0))
   {0x0061, {1|U, {0x0041}}},
   {0x0062, {1|U, {0x0042}}},
   {0x0063, {1|U, {0x0043}}},
@@ -4603,6 +4664,7 @@ static const CaseUnfold_11_Type CaseUnfold_11_Table[] = {
   {0x2c5c, {1|U, {0x2c2c}}},
   {0x2c5d, {1|U, {0x2c2d}}},
   {0x2c5e, {1|U, {0x2c2e}}},
+  {0x2c5f, {1|U, {0x2c2f}}},
   {0x2c61, {1|U, {0x2c60}}},
   {0x2c65, {1|U, {0x023a}}},
   {0x2c66, {1|U, {0x023e}}},
@@ -4806,7 +4868,14 @@ static const CaseUnfold_11_Type CaseUnfold_11_Table[] = {
   {0xa7bb, {1|U, {0xa7ba}}},
   {0xa7bd, {1|U, {0xa7bc}}},
   {0xa7bf, {1|U, {0xa7be}}},
+  {0xa7c1, {1|U, {0xa7c0}}},
   {0xa7c3, {1|U, {0xa7c2}}},
+  {0xa7c8, {1|U, {0xa7c7}}},
+  {0xa7ca, {1|U, {0xa7c9}}},
+  {0xa7d1, {1|U, {0xa7d0}}},
+  {0xa7d7, {1|U, {0xa7d6}}},
+  {0xa7d9, {1|U, {0xa7d8}}},
+  {0xa7f6, {1|U, {0xa7f5}}},
   {0xab53, {1|U, {0xa7b3}}},
   {0xff41, {1|U, {0xff21}}},
   {0xff42, {1|U, {0xff22}}},
@@ -4910,6 +4979,41 @@ static const CaseUnfold_11_Type CaseUnfold_11_Table[] = {
   {0x104f9, {1|U, {0x104d1}}},
   {0x104fa, {1|U, {0x104d2}}},
   {0x104fb, {1|U, {0x104d3}}},
+  {0x10597, {1|U, {0x10570}}},
+  {0x10598, {1|U, {0x10571}}},
+  {0x10599, {1|U, {0x10572}}},
+  {0x1059a, {1|U, {0x10573}}},
+  {0x1059b, {1|U, {0x10574}}},
+  {0x1059c, {1|U, {0x10575}}},
+  {0x1059d, {1|U, {0x10576}}},
+  {0x1059e, {1|U, {0x10577}}},
+  {0x1059f, {1|U, {0x10578}}},
+  {0x105a0, {1|U, {0x10579}}},
+  {0x105a1, {1|U, {0x1057a}}},
+  {0x105a3, {1|U, {0x1057c}}},
+  {0x105a4, {1|U, {0x1057d}}},
+  {0x105a5, {1|U, {0x1057e}}},
+  {0x105a6, {1|U, {0x1057f}}},
+  {0x105a7, {1|U, {0x10580}}},
+  {0x105a8, {1|U, {0x10581}}},
+  {0x105a9, {1|U, {0x10582}}},
+  {0x105aa, {1|U, {0x10583}}},
+  {0x105ab, {1|U, {0x10584}}},
+  {0x105ac, {1|U, {0x10585}}},
+  {0x105ad, {1|U, {0x10586}}},
+  {0x105ae, {1|U, {0x10587}}},
+  {0x105af, {1|U, {0x10588}}},
+  {0x105b0, {1|U, {0x10589}}},
+  {0x105b1, {1|U, {0x1058a}}},
+  {0x105b3, {1|U, {0x1058c}}},
+  {0x105b4, {1|U, {0x1058d}}},
+  {0x105b5, {1|U, {0x1058e}}},
+  {0x105b6, {1|U, {0x1058f}}},
+  {0x105b7, {1|U, {0x10590}}},
+  {0x105b8, {1|U, {0x10591}}},
+  {0x105b9, {1|U, {0x10592}}},
+  {0x105bb, {1|U, {0x10594}}},
+  {0x105bc, {1|U, {0x10595}}},
   {0x10cc0, {1|U, {0x10c80}}},
   {0x10cc1, {1|U, {0x10c81}}},
   {0x10cc2, {1|U, {0x10c82}}},
@@ -5059,14 +5163,14 @@ static const CaseUnfold_11_Type CaseUnfold_11_Table[] = {
   {0x1e941, {1|U, {0x1e91f}}},
   {0x1e942, {1|U, {0x1e920}}},
   {0x1e943, {1|U, {0x1e921}}},
-#define CaseUnfold_11_Locale (*(CaseUnfold_11_Type (*)[1])(CaseUnfold_11_Table+1352))
+#define CaseUnfold_11_Locale (*(CaseUnfold_11_Type (*)[1])(CaseUnfold_11_Table+1395))
   {0x0069, {1|U, {0x0049}}},
 };
 
 /* ANSI-C code produced by gperf version 3.1 */
 /* Command-line: gperf -7 -k1,2,3 -F,-1 -c -j1 -i1 -t -T -E -C -H onigenc_unicode_CaseUnfold_11_hash -N onigenc_unicode_CaseUnfold_11_lookup -n  */
 
-/* maximum key range = 2507, duplicates = 0 */
+/* maximum key range = 2771, duplicates = 0 */
 
 #ifdef __GNUC__
 __inline
@@ -5081,26 +5185,26 @@ onigenc_unicode_CaseUnfold_11_hash(const OnigCodePoint code)
 {
   static const unsigned short asso_values[] =
     {
-         1, 2510,    2,    7,    4,  582,    9,  308,  197,  674,
-       297,   20,    2,    3,  303,  351, 2510, 2510, 2510, 2510,
-      2510, 2510, 2510, 2510, 2510, 2510, 2510, 2510, 2510,  112,
-      2510, 2510, 2510, 2510, 2510, 2510, 2510,  120, 2510, 2510,
-      2510, 2510, 2510,    1, 2510, 2510, 2510, 2510, 2510, 2510,
-      2510, 2510, 2510,  278, 2510, 2510, 2510, 2510, 2510, 2510,
-      2510, 2510,   12,    1,    7,    8,  218,  878,  222, 1178,
-       480, 1102,   54, 1340,  151, 1615,    8,   15,  106, 1607,
-       225,  854,   87,  490,   44, 1351,    5, 1281,    3, 1470,
-        11, 1215,  377,   10,  441,  599,  152, 1642,  127, 1334,
-       702,  841,  594,  827,  123,  916,  146, 1118,  117, 1363,
-       254,  812,  249, 1096, 1630,  945,  437,  745, 1600,  718,
-      1593,  704,  152, 1005,  383, 1064, 1493,  975,  236,  676,
-       761,  579, 1017,  557, 1241,  628, 1195,  614, 1506,  464,
-      1576,  535, 1432,  513, 1159,  423, 1026,  276, 1460,  291,
-      1453,  392, 1263,  201, 1442,   85, 1412,   70, 1430,  100,
-      1632,  129, 1410,    1, 1386,   25, 1373,   35,  656,   55,
-      1188,   45, 1308,  160,  687,  227,  355,  175, 1201,  328,
-      1030,  367, 1483,  414, 1479, 1166, 1418,  783,  994,  937,
-      1083,  959, 1463,  967
+         1, 2774,    2,    2,    4,  421,    9,  371,  231,  463,
+        37,   20,    2,    3,  419,  408, 2774, 2774, 2774, 2774,
+      2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774,  112,
+      2774, 2774, 2774, 2774, 2774, 2774, 2774,  120, 2774, 2774,
+      2774, 2774, 2774,    1, 2774, 2774, 2774, 2774, 2774, 2774,
+      2774, 2774, 2774,  355, 2774, 2774, 2774, 2774, 2774, 2774,
+      2774, 2774,   10,    9,    7,    8,  244,  689,  226,  993,
+       561,  710,  104, 1429,   36, 1190,   28,   15,  114, 1768,
+       241, 1003,   87,  285,   26, 1399,   78, 1360,    7, 1455,
+        90, 1076,  113,   10,  724, 1460,  167, 1727,  155, 1040,
+        67,  754,   66,  705,  246,  886,  331, 1140,  430, 1251,
+       864,  768,  643, 1064, 1591,  865,  834,  720, 1700,  671,
+      1581,  657, 1794,  842, 1782, 1050, 1537, 1024, 1760,  814,
+       975,  440, 1187,  407, 1440,  951, 1384,  909, 1320,  555,
+      1567,  541, 1723,  525,  383,  501, 1179,  250, 1596,  342,
+      1575,  352, 1501,  194, 1559,   70, 1512,   85, 1509,  129,
+       467,  100, 1413,    1, 1485,   25, 1351,   35, 1088,   55,
+      1262,   45, 1277,  160, 1245,  317,  118,  220, 1300,  596,
+      1100,  373, 1632,  617, 1337, 1236, 1500, 1152,  148,  793,
+      1538,  979,  385, 1228
     };
   return asso_values[bits_of(code, 2)+66] + asso_values[bits_of(code, 1)+4] + asso_values[bits_of(code, 0)];
 }
@@ -5112,11 +5216,11 @@ onigenc_unicode_CaseUnfold_11_lookup(const OnigCodePoint code)
     {
       MIN_CODE_VALUE = 0x61,
       MAX_CODE_VALUE = 0x1e943,
-      TOTAL_KEYWORDS = 1353,
+      TOTAL_KEYWORDS = 1396,
       MIN_WORD_LENGTH = 3,
       MAX_WORD_LENGTH = 3,
       MIN_HASH_VALUE = 3,
-      MAX_HASH_VALUE = 2509
+      MAX_HASH_VALUE = 2773
     };
 
   static const short wordlist[] =
@@ -5127,11 +5231,11 @@ onigenc_unicode_CaseUnfold_11_lookup(const OnigCodePoint code)
       /*0x04e1*/ 400,
       /*0x0061*/ 0,
       -1,
-      /*0x104e1*/ 1176,
+      /*0x104e1*/ 1184,
       /*0x1e61*/ 661,
       /*0x1ee1*/ 720,
       /*0x0161*/ 102,
-      /*0x2ce1*/ 952,
+      /*0x2ce1*/ 953,
       -1,
       /*0x049b*/ 365,
       -1, -1,
@@ -5139,28 +5243,28 @@ onigenc_unicode_CaseUnfold_11_lookup(const OnigCodePoint code)
       /*0x1e1b*/ 626,
       /*0x048b*/ 357,
       /*0x011b*/ 69,
-      /*0x2c9b*/ 917,
+      /*0x2c9b*/ 918,
       /*0x03e1*/ 280,
       /*0x1e0b*/ 618,
       /*0x1e8b*/ 682,
       /*0x010b*/ 61,
-      /*0x2c8b*/ 909,
+      /*0x2c8b*/ 910,
       /*0x13e3*/ 591,
       /*0x0463*/ 341,
       /*0x04e3*/ 401,
       /*0x0063*/ 2,
       -1,
-      /*0x104e3*/ 1178,
+      /*0x104e3*/ 1186,
       /*0x1e63*/ 662,
       /*0x1ee3*/ 721,
       /*0x0163*/ 103,
-      /*0x2ce3*/ 953,
+      /*0x2ce3*/ 954,
       /*0x13e5*/ 593,
       /*0x0465*/ 342,
       /*0x04e5*/ 402,
       /*0x0065*/ 4,
       /*0x24e3*/ 842,
-      /*0x104e5*/ 1180,
+      /*0x104e5*/ 1188,
       /*0x1e65*/ 663,
       /*0x1ee5*/ 722,
       /*0x0165*/ 104,
@@ -5168,9 +5272,9 @@ onigenc_unicode_CaseUnfold_11_lookup(const OnigCodePoint code)
       /*0x13e9*/ 597,
       /*0x0469*/ 344,
       /*0x04e9*/ 404,
-      /*0x0069*/ 1352,
+      /*0x0069*/ 1395,
       /*0x24e5*/ 844,
-      /*0x104e9*/ 1184,
+      /*0x104e9*/ 1192,
       /*0x1e69*/ 665,
       /*0x1ee9*/ 724,
       /*0x0169*/ 106,
@@ -5180,1764 +5284,1865 @@ onigenc_unicode_CaseUnfold_11_lookup(const OnigCodePoint code)
       /*0x04e7*/ 403,
       /*0x0067*/ 6,
       /*0x24e9*/ 848,
-      /*0x104e7*/ 1182,
+      /*0x104e7*/ 1190,
       /*0x1e67*/ 664,
       /*0x1ee7*/ 723,
       /*0x0167*/ 105,
       /*0x03e9*/ 284,
-      -1, -1, -1, -1,
-      /*0x24e7*/ 846,
-      /*0x13db*/ 583,
-      /*0x045b*/ 335,
-      /*0x04db*/ 397,
       -1,
-      /*0x03e7*/ 283,
-      /*0x104db*/ 1170,
-      /*0x1e5b*/ 658,
-      /*0x1edb*/ 717,
-      /*0x015b*/ 99,
-      /*0x2cdb*/ 949,
-      -1, -1, -1, -1,
-      /*0x24db*/ 834,
+      /*0x13a4*/ 528,
+      /*0x13a2*/ 526,
+      -1,
+      /*0x24e7*/ 846,
       /*0x13d9*/ 581,
       /*0x0459*/ 333,
       /*0x04d9*/ 396,
-      /*0xa761*/ 1064,
-      /*0x03db*/ 277,
-      /*0x104d9*/ 1168,
+      -1,
+      /*0x03e7*/ 283,
+      /*0x104d9*/ 1176,
       /*0x1e59*/ 657,
       /*0x1ed9*/ 716,
       /*0x0159*/ 98,
-      /*0x2cd9*/ 948,
+      /*0x2cd9*/ 949,
       -1, -1, -1, -1,
       /*0x24d9*/ 832,
-      /*0x13dd*/ 585,
-      /*0x045d*/ 337,
-      /*0x04dd*/ 398,
-      -1,
+      /*0x13db*/ 583,
+      /*0x045b*/ 335,
+      /*0x04db*/ 397,
+      /*0xa761*/ 1065,
       /*0x03d9*/ 276,
-      /*0x104dd*/ 1172,
-      /*0x1e5d*/ 659,
-      /*0x1edd*/ 718,
-      /*0x015d*/ 100,
-      /*0x2cdd*/ 950,
-      -1, -1,
-      /*0xa763*/ 1065,
-      -1,
-      /*0x24dd*/ 836,
-      /*0x10ce1*/ 1236,
-      -1,
-      /*0x13aa*/ 534,
-      -1,
-      /*0x03dd*/ 278,
-      /*0x10e1*/ 495,
-      /*0x1042a*/ 1129,
-      /*0xa765*/ 1066,
-      /*0x13a6*/ 530,
-      -1, -1, -1,
-      /*0x13a0*/ 524,
-      -1,
+      /*0x104db*/ 1178,
+      /*0x1e5b*/ 658,
+      /*0x1edb*/ 717,
+      /*0x015b*/ 99,
+      /*0x2cdb*/ 950,
+      -1, -1, -1, -1,
+      /*0x24db*/ 834,
       /*0x13df*/ 587,
       /*0x045f*/ 339,
       /*0x04df*/ 399,
-      /*0xa769*/ 1068,
       -1,
-      /*0x104df*/ 1174,
+      /*0x03db*/ 277,
+      /*0x104df*/ 1182,
       /*0x1e5f*/ 660,
       /*0x1edf*/ 719,
       /*0x015f*/ 101,
-      /*0x2cdf*/ 951,
-      /*0x10ce3*/ 1238,
+      /*0x2cdf*/ 952,
       -1, -1,
-      /*0xa767*/ 1067,
+      /*0xa763*/ 1066,
+      /*0x2c61*/ 897,
       /*0x24df*/ 838,
-      /*0x10e3*/ 497,
+      /*0x10ce1*/ 1279,
+      -1, -1,
+      /*0x13ee*/ 602,
+      /*0x03df*/ 279,
+      /*0x10e1*/ 495,
+      /*0x006e*/ 12,
+      /*0xa765*/ 1067,
+      /*0x104ee*/ 1197,
+      -1, -1, -1,
+      /*0x2cee*/ 956,
       -1,
-      /*0x13a8*/ 532,
+      /*0x13dd*/ 585,
+      /*0x045d*/ 337,
+      /*0x04dd*/ 398,
+      /*0xa769*/ 1069,
       -1,
-      /*0x03df*/ 279,
-      /*0x10ce5*/ 1240,
-      /*0x10428*/ 1127,
+      /*0x104dd*/ 1180,
+      /*0x1e5d*/ 659,
+      /*0x1edd*/ 718,
+      /*0x015d*/ 100,
+      /*0x2cdd*/ 951,
+      /*0x10ce3*/ 1281,
+      -1, -1,
+      /*0xa767*/ 1068,
+      /*0x24dd*/ 836,
+      /*0x10e3*/ 497,
+      -1, -1,
+      /*0x2c65*/ 898,
+      /*0x03dd*/ 278,
+      /*0x10ce5*/ 1283,
       -1,
-      /*0x13b8*/ 548,
-      /*0x0438*/ 300,
-      /*0x10e5*/ 499,
+      /*0x007a*/ 24,
       -1,
-      /*0x10438*/ 1143,
-      /*0xa75b*/ 1061,
+      /*0x104fa*/ 1209,
+      /*0x10e5*/ 499,
+      /*0x13a0*/ 524,
+      /*0x017a*/ 114,
+      /*0xa759*/ 1061,
       -1,
-      /*0x10ce9*/ 1244,
+      /*0x10ce9*/ 1287,
       /*0x13eb*/ 599,
       /*0x046b*/ 345,
       /*0x04eb*/ 405,
       /*0x006b*/ 9,
       /*0x10e9*/ 503,
-      /*0x104eb*/ 1186,
+      /*0x104eb*/ 1194,
       /*0x1e6b*/ 666,
       /*0x1eeb*/ 725,
       /*0x016b*/ 107,
-      /*0x10ce7*/ 1242,
-      -1,
-      /*0x03b8*/ 253,
-      /*0xa759*/ 1060,
+      /*0x10ce7*/ 1285,
+      -1, -1,
+      /*0xa75b*/ 1062,
       -1,
       /*0x10e7*/ 501,
-      /*0x13ef*/ 603,
-      /*0x046f*/ 347,
-      /*0x04ef*/ 407,
-      /*0x006f*/ 13,
+      -1, -1, -1, -1,
       /*0x03eb*/ 285,
-      /*0x104ef*/ 1190,
-      /*0x1e6f*/ 668,
-      /*0x1eef*/ 727,
-      /*0x016f*/ 109,
-      /*0x10cdb*/ 1230,
       -1, -1,
-      /*0xa75d*/ 1062,
+      /*0x2c59*/ 890,
       -1,
-      /*0x10db*/ 489,
-      -1, -1, -1, -1,
-      /*0x03ef*/ 287,
+      /*0x10cd9*/ 1271,
       -1, -1,
-      /*0x0261*/ 210,
-      -1,
-      /*0x10cd9*/ 1228,
+      /*0xa75f*/ 1064,
       -1,
+      /*0x10d9*/ 487,
+      -1, -1, -1, -1,
       /*0x13d7*/ 579,
       /*0x0457*/ 331,
       /*0x04d7*/ 395,
-      /*0x10d9*/ 487,
+      /*0x2c5b*/ 892,
       -1,
-      /*0x021b*/ 178,
+      /*0x10cdb*/ 1273,
       /*0x1e57*/ 656,
       /*0x1ed7*/ 715,
       /*0x0157*/ 97,
-      /*0x2cd7*/ 947,
-      /*0x020b*/ 170,
-      -1, -1,
-      /*0x10cdd*/ 1232,
+      /*0x2cd7*/ 948,
+      /*0x10db*/ 489,
+      -1, -1, -1,
       /*0x24d7*/ 830,
-      /*0xa75f*/ 1063,
-      -1,
-      /*0x1f61*/ 777,
-      /*0x10dd*/ 491,
+      -1, -1, -1,
+      /*0x2c5f*/ 896,
       /*0x03d7*/ 275,
-      /*0x0263*/ 211,
-      /*0x1f14*/ 748,
-      -1, -1,
-      /*0x1d8e*/ 612,
-      /*0xa661*/ 1013,
-      /*0x13ed*/ 601,
-      /*0x046d*/ 346,
-      /*0x04ed*/ 406,
-      /*0x006d*/ 11,
-      /*0x0265*/ 212,
-      /*0x104ed*/ 1188,
-      /*0x1e6d*/ 667,
-      /*0x1eed*/ 726,
-      /*0x016d*/ 108,
-      /*0x13be*/ 554,
-      /*0x043e*/ 306,
-      -1, -1,
-      /*0x1043e*/ 1149,
-      /*0x0269*/ 215,
-      /*0x1f63*/ 779,
-      /*0x10cdf*/ 1234,
-      /*0x013e*/ 85,
+      /*0x10cdf*/ 1277,
       -1,
-      /*0x03ed*/ 286,
-      /*0xa76b*/ 1069,
+      /*0xa75d*/ 1063,
+      -1, -1,
       /*0x10df*/ 493,
-      /*0x13ae*/ 538,
-      /*0xa663*/ 1014,
+      /*0x13ef*/ 603,
+      /*0x046f*/ 347,
+      /*0x04ef*/ 407,
+      /*0x006f*/ 13,
       -1,
-      /*0x1f65*/ 781,
-      /*0x1042e*/ 1133,
-      /*0x13ac*/ 536,
-      /*0x03be*/ 259,
+      /*0x104ef*/ 1198,
+      /*0x1e6f*/ 668,
+      /*0x1eef*/ 727,
+      /*0x016f*/ 109,
       -1, -1,
-      /*0x1042c*/ 1131,
-      -1,
-      /*0xa665*/ 1015,
-      /*0x1f12*/ 746,
-      /*0xa76f*/ 1071,
-      -1, -1, -1,
-      /*0x025b*/ 207,
-      -1,
-      /*0x03ae*/ 244,
+      /*0x0261*/ 210,
+      /*0x10cee*/ 1292,
+      -1, -1,
+      /*0xa77a*/ 1073,
       -1,
-      /*0xa669*/ 1017,
-      /*0x1f06*/ 742,
-      /*0x1f67*/ 783,
-      /*0x03ac*/ 242,
-      /*0x10ceb*/ 1246,
+      /*0x10ee*/ 508,
       -1,
+      /*0x03ef*/ 287,
+      /*0x021b*/ 178,
+      /*0x2c5d*/ 894,
+      /*0xa661*/ 1014,
+      /*0x10cdd*/ 1275,
+      /*0x1f61*/ 777,
+      /*0x020b*/ 170,
+      /*0x13a6*/ 530,
+      /*0xa76b*/ 1070,
+      /*0x10dd*/ 491,
+      /*0x1d8e*/ 612,
       /*0x13d1*/ 573,
       /*0x0451*/ 325,
       /*0x04d1*/ 392,
-      /*0x10eb*/ 505,
-      /*0xa667*/ 1016,
-      /*0x0259*/ 206,
+      -1, -1,
+      /*0x0263*/ 211,
       /*0x1e51*/ 653,
       /*0x1ed1*/ 712,
       /*0x0151*/ 94,
-      /*0x2cd1*/ 944,
-      -1, -1,
-      /*0xa757*/ 1059,
-      /*0x10cef*/ 1250,
+      /*0x2cd1*/ 945,
+      -1, -1, -1, -1,
       /*0x24d1*/ 824,
-      /*0x13d3*/ 575,
-      /*0x0453*/ 327,
-      /*0x04d3*/ 393,
-      /*0x10ef*/ 509,
-      /*0xa65b*/ 1010,
-      -1,
-      /*0x1e53*/ 654,
-      /*0x1ed3*/ 713,
-      /*0x0153*/ 95,
-      /*0x2cd3*/ 945,
+      /*0x0265*/ 212,
+      /*0xa663*/ 1015,
+      /*0x10fa*/ 520,
+      /*0x1f63*/ 779,
+      /*0x1f12*/ 746,
+      -1, -1, -1, -1,
+      /*0x10ceb*/ 1289,
+      /*0x0269*/ 215,
+      /*0xa665*/ 1016,
       -1,
-      /*0xab53*/ 1100,
-      /*0x0561*/ 440,
-      /*0x1f10*/ 744,
-      /*0x24d3*/ 826,
-      -1, -1,
-      /*0x01e1*/ 151,
+      /*0x1f65*/ 781,
+      /*0x10eb*/ 505,
       -1,
-      /*0xa659*/ 1009,
+      /*0xa757*/ 1060,
+      -1, -1, -1, -1,
+      /*0xa669*/ 1018,
+      /*0x0491*/ 360,
+      -1, -1, -1,
+      /*0x1e11*/ 621,
+      /*0x1e91*/ 685,
+      /*0x0111*/ 64,
+      /*0x2c91*/ 913,
+      /*0xa79b*/ 1086,
+      /*0xa667*/ 1017,
       -1,
-      /*0x051b*/ 429,
+      /*0x1f67*/ 783,
       -1,
-      /*0xa76d*/ 1070,
-      /*0x10cd7*/ 1226,
+      /*0x0259*/ 206,
+      -1, -1, -1, -1, -1,
+      /*0x2c57*/ 888,
+      /*0xa76f*/ 1072,
+      /*0x10cd7*/ 1269,
+      /*0x1f24*/ 754,
+      /*0x1f22*/ 752,
+      /*0xa659*/ 1010,
       -1,
-      /*0x050b*/ 421,
-      -1, -1,
       /*0x10d7*/ 485,
-      -1, -1, -1, -1,
-      /*0xa65d*/ 1011,
       -1,
-      /*0x0563*/ 442,
-      /*0x13f1*/ 605,
-      /*0x0471*/ 348,
-      /*0x04f1*/ 408,
-      /*0x0071*/ 15,
-      /*0x01e3*/ 152,
-      /*0x104f1*/ 1192,
-      /*0x1e71*/ 669,
-      /*0x1ef1*/ 728,
-      /*0x0171*/ 110,
-      /*0x0565*/ 444,
+      /*0x025b*/ 207,
+      -1,
+      /*0x13ed*/ 601,
+      /*0x046d*/ 346,
+      /*0x04ed*/ 406,
+      /*0x006d*/ 11,
+      /*0x1f14*/ 748,
+      /*0x104ed*/ 1196,
+      /*0x1e6d*/ 667,
+      /*0x1eed*/ 726,
+      /*0x016d*/ 108,
+      /*0xa65b*/ 1011,
+      -1, -1, -1,
+      /*0x1f10*/ 744,
+      /*0x13a8*/ 532,
       -1, -1,
-      /*0x1f26*/ 756,
-      /*0x10ced*/ 1248,
-      /*0x01e5*/ 153,
+      /*0x10cef*/ 1293,
+      /*0x10428*/ 1135,
+      /*0x03ed*/ 286,
+      /*0xa751*/ 1057,
       -1,
-      /*0x1f20*/ 750,
+      /*0x10ef*/ 509,
       -1,
-      /*0x10ed*/ 507,
-      /*0x0569*/ 448,
+      /*0xa65f*/ 1013,
+      /*0x13d3*/ 575,
+      /*0x0453*/ 327,
+      /*0x04d3*/ 393,
       -1, -1,
-      /*0x118db*/ 1281,
-      /*0x0192*/ 122,
-      /*0x01e9*/ 155,
-      -1,
-      /*0xa65f*/ 1012,
-      /*0x13ee*/ 602,
-      /*0x026b*/ 217,
-      /*0x0567*/ 446,
-      /*0x006e*/ 12,
+      /*0x1f06*/ 742,
+      /*0x1e53*/ 654,
+      /*0x1ed3*/ 713,
+      /*0x0153*/ 95,
+      /*0x2cd3*/ 946,
+      /*0x13d5*/ 577,
+      /*0x0455*/ 329,
+      /*0x04d5*/ 394,
+      /*0xa7d9*/ 1106,
+      /*0x24d3*/ 826,
       -1,
-      /*0x104ee*/ 1189,
+      /*0x1e55*/ 655,
+      /*0x1ed5*/ 714,
+      /*0x0155*/ 96,
+      /*0x2cd5*/ 947,
+      /*0x2c51*/ 882,
+      /*0xa794*/ 1083,
+      /*0x10cd1*/ 1263,
       -1,
-      /*0x01e7*/ 154,
-      /*0xa751*/ 1056,
-      /*0x2cee*/ 955,
-      /*0x118d9*/ 1279,
+      /*0x24d5*/ 828,
+      -1, -1,
+      /*0x10d1*/ 479,
+      /*0xa65d*/ 1012,
+      /*0x01e1*/ 151,
       -1,
       /*0x13f3*/ 607,
       /*0x0473*/ 349,
       /*0x04f3*/ 409,
       /*0x0073*/ 17,
-      /*0x026f*/ 219,
-      /*0x104f3*/ 1194,
+      -1,
+      /*0x104f3*/ 1202,
       /*0x1e73*/ 670,
       /*0x1ef3*/ 729,
       /*0x0173*/ 111,
-      /*0x2cf3*/ 956,
-      /*0x2c61*/ 896,
-      /*0xa753*/ 1057,
+      /*0x2cf3*/ 957,
+      /*0x13ce*/ 570,
+      /*0x044e*/ 322,
+      /*0x04ce*/ 390,
       -1,
-      /*0x118dd*/ 1283,
+      /*0x1044e*/ 1173,
       -1, -1,
-      /*0x13ba*/ 550,
-      /*0x043a*/ 302,
-      /*0xa66b*/ 1018,
+      /*0x026b*/ 217,
+      /*0x1f7a*/ 794,
       /*0x03f3*/ 289,
-      /*0x1043a*/ 1145,
-      -1, -1,
-      /*0x10cd1*/ 1220,
-      /*0x013a*/ 83,
-      /*0x13d5*/ 577,
-      /*0x0455*/ 329,
-      /*0x04d5*/ 394,
-      /*0x10d1*/ 479,
+      /*0x017e*/ 116,
       -1,
-      /*0x0257*/ 205,
-      /*0x1e55*/ 655,
-      /*0x1ed5*/ 714,
-      /*0x0155*/ 96,
-      /*0x2cd5*/ 946,
-      /*0x03ba*/ 255,
+      /*0x01e3*/ 152,
+      /*0x0192*/ 122,
       -1,
-      /*0x0586*/ 477,
-      /*0x10cd3*/ 1222,
-      /*0x24d5*/ 828,
-      /*0x01dd*/ 149,
+      /*0x1f20*/ 750,
+      /*0xa78c*/ 1080,
       -1,
-      /*0x118df*/ 1285,
-      /*0x10d3*/ 481,
-      /*0x2c65*/ 897,
+      /*0xa66b*/ 1019,
+      /*0x03ce*/ 274,
       -1,
-      /*0x018c*/ 121,
-      /*0x13f5*/ 609,
-      /*0x0475*/ 350,
-      /*0x04f5*/ 410,
-      /*0x0075*/ 19,
+      /*0xa76d*/ 1071,
+      /*0x01e5*/ 153,
+      /*0x0188*/ 120,
+      /*0x13c3*/ 559,
+      /*0x0443*/ 311,
+      /*0x0373*/ 237,
+      -1,
+      /*0x10443*/ 1162,
+      -1,
+      /*0x1e43*/ 646,
+      /*0x1ec3*/ 705,
+      /*0x01e9*/ 155,
+      /*0x2cc3*/ 938,
+      -1, -1,
+      /*0x0561*/ 440,
+      /*0x1059b*/ 1215,
+      /*0x00e1*/ 26,
+      -1, -1,
+      /*0x0257*/ 205,
+      /*0x01e7*/ 154,
+      /*0x03c3*/ 263,
+      /*0x118d9*/ 1322,
+      /*0x051b*/ 429,
+      /*0xa753*/ 1058,
+      /*0x13aa*/ 534,
+      /*0x10ced*/ 1291,
+      /*0xab53*/ 1108,
+      /*0x050b*/ 421,
+      /*0x1042a*/ 1137,
+      /*0xa657*/ 1009,
+      /*0x10ed*/ 507,
       /*0x1f57*/ 775,
-      /*0x104f5*/ 1196,
-      /*0x1e75*/ 671,
-      /*0x1ef5*/ 730,
-      /*0x0175*/ 112,
-      /*0x13cf*/ 571,
-      /*0x044f*/ 323,
-      /*0x04cf*/ 391,
-      /*0xa657*/ 1008,
-      /*0x1044f*/ 1166,
-      /*0x1e92a*/ 1326,
-      /*0x1e4f*/ 652,
-      /*0x1ecf*/ 711,
-      /*0x014f*/ 93,
-      /*0x2ccf*/ 943,
       -1,
-      /*0x1e926*/ 1322,
-      /*0x1f00*/ 736,
-      /*0x01df*/ 150,
-      /*0x13b2*/ 542,
-      /*0x0432*/ 294,
-      /*0x1f02*/ 738,
+      /*0xa755*/ 1059,
+      /*0x13c1*/ 557,
+      /*0x0441*/ 309,
+      /*0x118db*/ 1324,
+      /*0x0563*/ 442,
+      /*0x10441*/ 1160,
+      /*0x00e3*/ 28,
+      /*0x1e41*/ 645,
+      /*0x1ec1*/ 704,
       -1,
-      /*0x10432*/ 1137,
-      /*0x10cf1*/ 1252,
-      /*0x2d16*/ 979,
+      /*0x2cc1*/ 937,
+      /*0x026f*/ 219,
+      -1, -1,
+      /*0x0565*/ 444,
+      /*0x2c53*/ 884,
+      /*0x00e5*/ 30,
+      /*0x10cd3*/ 1265,
+      /*0x118df*/ 1328,
       -1,
-      /*0x2d14*/ 977,
-      /*0x2c5b*/ 892,
-      /*0x10f1*/ 511,
-      /*0x2d0a*/ 967,
+      /*0x03c1*/ 262,
       -1,
-      /*0x2d1b*/ 984,
-      /*0x2d18*/ 981,
-      /*0xa66d*/ 1019,
-      /*0x01a8*/ 130,
+      /*0x10d3*/ 481,
       -1,
-      /*0x2d0b*/ 968,
-      /*0x03b2*/ 247,
-      /*0x1e928*/ 1324,
-      /*0x0188*/ 120,
-      /*0x019e*/ 126,
+      /*0x0569*/ 448,
+      /*0x2c55*/ 886,
+      /*0x00e9*/ 34,
+      /*0x10cd5*/ 1267,
+      /*0x13de*/ 586,
+      /*0x045e*/ 338,
+      /*0x1f02*/ 738,
+      /*0x01df*/ 150,
+      /*0x10d5*/ 483,
+      /*0x104de*/ 1181,
+      /*0x0567*/ 446,
       -1,
-      /*0x2c59*/ 890,
-      /*0x056b*/ 450,
-      /*0x1e938*/ 1340,
-      /*0x13c9*/ 565,
-      /*0x0449*/ 317,
+      /*0x00e7*/ 32,
+      /*0x105a4*/ 1223,
+      /*0x028b*/ 231,
       -1,
-      /*0x01eb*/ 156,
-      /*0x10449*/ 1160,
-      /*0x10cee*/ 1249,
-      /*0x1e49*/ 649,
-      /*0x1ec9*/ 708,
+      /*0xa7d7*/ 1105,
       /*0x0251*/ 200,
-      /*0x2cc9*/ 940,
-      /*0x10ee*/ 508,
+      /*0x24de*/ 837,
       -1,
-      /*0x2c5d*/ 894,
-      /*0x056f*/ 454,
+      /*0x019a*/ 125,
+      /*0x018c*/ 121,
+      /*0x2c73*/ 903,
+      /*0x118dd*/ 1326,
+      /*0x1f00*/ 736,
+      /*0x0292*/ 233,
+      /*0x1f26*/ 756,
+      /*0x028a*/ 230,
+      /*0xa651*/ 1006,
+      /*0x10f3*/ 513,
+      /*0x1f51*/ 772,
+      /*0xa743*/ 1050,
+      /*0x2c4e*/ 879,
       -1,
-      /*0xa755*/ 1058,
+      /*0x10cce*/ 1260,
+      /*0x0288*/ 228,
+      /*0x01dd*/ 149,
+      /*0x10598*/ 1212,
+      /*0x13cf*/ 571,
+      /*0x044f*/ 323,
+      /*0x04cf*/ 391,
+      /*0x10fe*/ 522,
+      /*0x1044f*/ 1174,
       -1,
-      /*0x118d7*/ 1277,
-      /*0x01ef*/ 158,
-      /*0x03c9*/ 269,
-      /*0x2d12*/ 975,
+      /*0x1e4f*/ 652,
+      /*0x1ecf*/ 711,
+      /*0x014f*/ 93,
+      /*0x2ccf*/ 944,
+      /*0x0586*/ 477,
       -1,
-      /*0x10f3*/ 513,
-      /*0x0253*/ 202,
-      -1, -1, -1, -1,
-      /*0x0491*/ 360,
-      /*0x1f51*/ 772,
-      /*0x2d06*/ 963,
-      /*0xa794*/ 1082,
-      /*0x1e11*/ 621,
-      /*0x1e91*/ 685,
-      /*0x0111*/ 64,
-      /*0x2c91*/ 912,
-      /*0xa79b*/ 1085,
-      /*0xa651*/ 1005,
-      -1, -1, -1, -1,
-      /*0x10cd5*/ 1224,
+      /*0x1e924*/ 1363,
+      /*0x1e922*/ 1361,
+      /*0x0211*/ 173,
+      -1, -1, -1,
+      /*0x2c43*/ 868,
       -1,
-      /*0x1f53*/ 773,
+      /*0x10cc3*/ 1249,
       -1,
-      /*0xa74f*/ 1055,
-      /*0x10d5*/ 483,
+      /*0x1059a*/ 1214,
       -1,
       /*0x13cd*/ 569,
       /*0x044d*/ 321,
-      -1,
-      /*0xa653*/ 1006,
-      /*0x1044d*/ 1164,
-      -1,
+      /*0xa741*/ 1049,
+      /*0x1f11*/ 745,
+      /*0x1044d*/ 1172,
+      /*0x01eb*/ 156,
       /*0x1e4d*/ 651,
       /*0x1ecd*/ 710,
       /*0x014d*/ 92,
-      /*0x2ccd*/ 942,
-      -1,
-      /*0x0271*/ 220,
-      /*0x0180*/ 117,
-      -1,
-      /*0x2d10*/ 973,
-      /*0x2c38*/ 857,
-      /*0x056d*/ 452,
+      /*0x2ccd*/ 943,
+      /*0xa7d1*/ 1104,
+      /*0x056e*/ 453,
+      /*0x019e*/ 126,
+      /*0x00ee*/ 39,
       -1, -1,
-      /*0x03cd*/ 273,
-      /*0x10f5*/ 515,
-      /*0x01ed*/ 157,
       /*0x13cb*/ 567,
       /*0x044b*/ 319,
-      /*0x10ccf*/ 1218,
       -1,
-      /*0x1044b*/ 1162,
+      /*0x03cd*/ 273,
+      /*0x1044b*/ 1170,
       -1,
       /*0x1e4b*/ 650,
       /*0x1ecb*/ 709,
       /*0x014b*/ 91,
-      /*0x2ccb*/ 941,
-      /*0x1f71*/ 785,
-      /*0x2d0c*/ 969,
-      /*0x1e93e*/ 1346,
-      -1, -1, -1,
-      /*0xa749*/ 1052,
-      -1, -1,
-      /*0x03cb*/ 271,
-      -1,
-      /*0x118d1*/ 1271,
-      /*0x13c3*/ 559,
-      /*0x0443*/ 311,
-      -1,
-      /*0x1e92e*/ 1330,
-      /*0x10443*/ 1154,
-      -1,
-      /*0x1e43*/ 646,
-      /*0x1ec3*/ 705,
-      /*0x1e92c*/ 1328,
-      /*0x2cc3*/ 937,
-      /*0x2d20*/ 989,
-      /*0x0580*/ 471,
-      -1, -1,
-      /*0x118d3*/ 1273,
-      /*0x0582*/ 473,
-      -1, -1, -1,
-      /*0x03c3*/ 263,
-      /*0x2c57*/ 888,
-      /*0x10cc9*/ 1212,
-      /*0x13c1*/ 557,
-      /*0x0441*/ 309,
-      -1,
-      /*0x00e1*/ 26,
-      /*0x10441*/ 1152,
-      /*0x1f73*/ 787,
-      /*0x1e41*/ 645,
-      /*0x1ec1*/ 704,
-      -1,
-      /*0x2cc1*/ 936,
-      -1, -1,
-      /*0x2d08*/ 965,
-      /*0x2d1e*/ 987,
-      -1,
-      /*0x13a4*/ 528,
-      -1,
-      /*0xa78c*/ 1079,
-      -1,
-      /*0x03c1*/ 262,
+      /*0x2ccb*/ 942,
+      /*0x118d7*/ 1320,
+      /*0x2c41*/ 866,
       -1,
-      /*0xa74d*/ 1054,
-      /*0x049d*/ 366,
-      -1, -1, -1,
-      /*0x1e1d*/ 627,
-      /*0x00e3*/ 28,
-      /*0x011d*/ 70,
-      /*0x2c9d*/ 918,
-      /*0x1f55*/ 774,
-      /*0x0275*/ 222,
+      /*0x10cc1*/ 1247,
+      /*0x13c9*/ 565,
+      /*0x0449*/ 317,
       -1,
-      /*0x2c3e*/ 863,
+      /*0xa66d*/ 1020,
+      /*0x10449*/ 1168,
+      /*0x03cb*/ 271,
+      /*0x1e49*/ 649,
+      /*0x1ec9*/ 708,
       -1,
-      /*0x13c7*/ 563,
-      /*0x0447*/ 315,
-      /*0x00e5*/ 30,
-      /*0xa655*/ 1007,
-      /*0x10447*/ 1158,
-      /*0x024f*/ 198,
-      /*0x1e47*/ 648,
-      /*0x1ec7*/ 707,
-      /*0xa74b*/ 1053,
-      /*0x2cc7*/ 939,
-      /*0x0371*/ 236,
+      /*0x2cc9*/ 941,
+      /*0x105a0*/ 1220,
+      /*0x057a*/ 465,
       -1,
-      /*0x00e9*/ 34,
-      /*0x10ccd*/ 1216,
-      /*0x13c5*/ 561,
-      /*0x0445*/ 313,
-      /*0x0571*/ 456,
-      /*0x1f75*/ 789,
-      /*0x10445*/ 1156,
-      /*0x03c7*/ 267,
-      /*0x1e45*/ 647,
-      /*0x1ec5*/ 706,
-      /*0x00e7*/ 32,
-      /*0x2cc5*/ 938,
-      -1, -1, -1, -1, -1, -1,
-      /*0xa743*/ 1049,
-      -1, -1,
-      /*0x03c5*/ 265,
-      /*0xa64f*/ 1004,
-      /*0x10ccb*/ 1214,
-      -1, -1,
-      /*0x2c51*/ 882,
+      /*0x00fa*/ 50,
       -1,
-      /*0x1f32*/ 760,
+      /*0xa791*/ 1081,
       -1,
-      /*0x13e6*/ 594,
-      /*0x056e*/ 453,
-      /*0x2d00*/ 957,
-      /*0x0066*/ 5,
-      /*0x0249*/ 195,
-      /*0x104e6*/ 1181,
-      /*0x2d02*/ 959,
-      /*0x0373*/ 237,
+      /*0x0253*/ 202,
       -1,
-      /*0x2d0e*/ 971,
-      /*0xa741*/ 1048,
-      /*0x2c53*/ 884,
+      /*0x03c9*/ 269,
       -1,
-      /*0x0573*/ 458,
-      /*0x24e6*/ 845,
-      /*0x10cc3*/ 1206,
-      /*0x118d5*/ 1275,
+      /*0x028c*/ 232,
+      /*0x1059e*/ 1218,
+      /*0x056b*/ 450,
+      /*0x2c5e*/ 895,
+      /*0x00eb*/ 36,
+      /*0x10cde*/ 1276,
       -1,
-      /*0x01f3*/ 159,
+      /*0xa653*/ 1007,
       -1,
-      /*0x13bf*/ 555,
-      /*0x043f*/ 307,
-      /*0x04bf*/ 383,
+      /*0x1f53*/ 773,
+      /*0x10de*/ 492,
+      /*0x16e61*/ 1330,
+      /*0xa74f*/ 1056,
       -1,
-      /*0x1043f*/ 1150,
-      /*0x028a*/ 230,
-      /*0x1e3f*/ 644,
-      /*0x1ebf*/ 703,
-      /*0x019a*/ 125,
-      /*0x2cbf*/ 935,
-      /*0x0211*/ 173,
-      /*0x13ec*/ 600,
-      /*0x028b*/ 231,
-      /*0xa649*/ 1001,
-      /*0x006c*/ 10,
+      /*0x01ef*/ 158,
+      -1, -1,
+      /*0xa655*/ 1008,
       -1,
-      /*0x104ec*/ 1187,
-      /*0x10cc1*/ 1204,
-      /*0x1e93a*/ 1342,
-      /*0x03bf*/ 260,
-      /*0x2cec*/ 954,
-      /*0x1f04*/ 740,
+      /*0x1f55*/ 774,
+      /*0x13f1*/ 605,
+      /*0x0471*/ 348,
+      /*0x04f1*/ 408,
+      /*0x0071*/ 15,
+      -1,
+      /*0x104f1*/ 1200,
+      /*0x1e71*/ 669,
+      /*0x1ef1*/ 728,
+      /*0x0171*/ 110,
+      -1, -1,
+      /*0x118d1*/ 1314,
       -1, -1, -1,
-      /*0xa747*/ 1051,
-      /*0x13a2*/ 526,
-      /*0x118cf*/ 1269,
+      /*0x16e63*/ 1332,
+      /*0xa74d*/ 1055,
+      /*0x2c4f*/ 880,
+      /*0x0180*/ 117,
+      /*0x10ccf*/ 1261,
+      /*0x1f73*/ 787,
+      /*0x13f5*/ 609,
+      /*0x0475*/ 350,
+      /*0x04f5*/ 410,
+      /*0x0075*/ 19,
+      /*0x16e65*/ 1334,
+      /*0x104f5*/ 1204,
+      /*0x1e75*/ 671,
+      /*0x1ef5*/ 730,
+      /*0x0175*/ 112,
+      -1, -1,
+      /*0xa74b*/ 1054,
+      /*0x029e*/ 235,
+      -1,
+      /*0x16e69*/ 1338,
+      /*0x0371*/ 236,
+      /*0x0582*/ 473,
+      -1, -1, -1,
+      /*0x2c4d*/ 878,
+      /*0x056f*/ 454,
+      /*0x10ccd*/ 1259,
+      /*0x00ef*/ 40,
+      /*0x16e67*/ 1336,
+      /*0xa749*/ 1053,
+      /*0x13ae*/ 538,
+      -1, -1, -1,
+      /*0x1042e*/ 1141,
+      /*0xa643*/ 999,
+      -1,
+      /*0x1f43*/ 769,
+      /*0x0580*/ 471,
+      -1,
+      /*0x2c4b*/ 876,
+      -1,
+      /*0x10ccb*/ 1257,
+      /*0x105a6*/ 1225,
       /*0x13b7*/ 547,
       /*0x0437*/ 299,
       /*0x04b7*/ 379,
-      /*0x1f11*/ 745,
-      /*0x10437*/ 1142,
-      /*0x024d*/ 197,
+      -1,
+      /*0x10437*/ 1150,
+      /*0x03ae*/ 244,
       /*0x1e37*/ 640,
       /*0x1eb7*/ 699,
       /*0x0137*/ 82,
-      /*0x2cb7*/ 931,
+      /*0x2cb7*/ 932,
+      /*0x2c49*/ 874,
+      -1,
+      /*0x10cc9*/ 1255,
       -1,
-      /*0xa745*/ 1050,
-      /*0x0575*/ 460,
-      /*0x0292*/ 233,
       /*0x13b5*/ 545,
       /*0x0435*/ 297,
       /*0x04b5*/ 378,
-      /*0x01f5*/ 160,
-      /*0x10435*/ 1140,
+      -1,
+      /*0x10435*/ 1148,
       /*0x03b7*/ 252,
       /*0x1e35*/ 639,
       /*0x1eb5*/ 698,
       /*0x0135*/ 81,
-      /*0x2cb5*/ 930,
-      /*0x10cc7*/ 1210,
-      -1, -1,
-      /*0x024b*/ 196,
+      /*0x2cb5*/ 931,
+      /*0xa641*/ 998,
       -1,
-      /*0x16e61*/ 1287,
+      /*0x1f41*/ 767,
       -1, -1, -1,
+      /*0x01ed*/ 157,
+      /*0x0282*/ 225,
+      /*0x1fe1*/ 803,
       /*0x03b5*/ 250,
-      /*0xa64d*/ 1003,
-      -1, -1,
-      /*0x00eb*/ 36,
-      /*0x10cc5*/ 1208,
-      /*0x2c73*/ 902,
-      /*0x118c9*/ 1263,
+      /*0x0481*/ 356,
+      /*0xa7c3*/ 1101,
+      /*0x1e926*/ 1365,
+      -1,
+      /*0x1e01*/ 613,
+      /*0x1e81*/ 677,
+      /*0x0101*/ 56,
+      /*0x2c81*/ 905,
+      /*0x118d3*/ 1316,
+      -1,
+      /*0x01a8*/ 130,
+      -1,
+      /*0x0511*/ 424,
+      /*0x16e6e*/ 1343,
+      /*0x13a5*/ 529,
+      /*0x0280*/ 224,
+      /*0x04a5*/ 370,
+      /*0x217a*/ 816,
+      /*0x118d5*/ 1318,
+      /*0x10cf1*/ 1295,
+      /*0x1e25*/ 631,
+      /*0x1ea5*/ 690,
+      /*0x0125*/ 74,
+      /*0x2ca5*/ 923,
+      /*0x10f1*/ 511,
+      /*0x1e05*/ 615,
+      /*0x1e85*/ 679,
+      /*0x0105*/ 58,
+      /*0x2c85*/ 907,
       /*0x13b3*/ 543,
       /*0x0433*/ 295,
       /*0x04b3*/ 377,
-      /*0x1e932*/ 1334,
-      /*0x10433*/ 1138,
-      -1,
+      /*0x1fe5*/ 804,
+      /*0x10433*/ 1146,
+      /*0xa7c1*/ 1100,
       /*0x1e33*/ 638,
       /*0x1eb3*/ 697,
       /*0x0133*/ 80,
-      /*0x2cb3*/ 929,
-      -1,
-      /*0x00ef*/ 40,
-      /*0x16e63*/ 1289,
+      /*0x2cb3*/ 930,
+      /*0x2d16*/ 980,
+      /*0x024f*/ 198,
       -1,
-      /*0x2c3a*/ 859,
-      /*0xa64b*/ 1002,
-      /*0x13c0*/ 556,
-      /*0x0440*/ 308,
-      /*0xa73f*/ 1047,
+      /*0x2d1b*/ 985,
+      /*0x16e7a*/ 1355,
+      /*0x056d*/ 452,
+      /*0x10f5*/ 515,
+      /*0x00ed*/ 38,
+      /*0x2d0b*/ 969,
       /*0x03b3*/ 248,
-      /*0x10440*/ 1151,
+      /*0x118ce*/ 1311,
+      /*0x105a8*/ 1227,
+      /*0xa64f*/ 1005,
+      /*0x01f3*/ 159,
+      /*0xa737*/ 1044,
       -1,
-      /*0x16e65*/ 1291,
-      /*0x2c55*/ 886,
-      /*0x0140*/ 86,
-      /*0x10ce6*/ 1241,
-      /*0x01c9*/ 139,
+      /*0x16e6b*/ 1340,
       -1, -1,
-      /*0x1f43*/ 769,
-      /*0x10e6*/ 500,
+      /*0x2d12*/ 976,
       -1,
-      /*0x16e69*/ 1295,
-      -1,
-      /*0x028c*/ 232,
-      /*0x03c0*/ 261,
+      /*0x2d0a*/ 968,
       -1,
-      /*0xa643*/ 998,
+      /*0x01ce*/ 141,
+      /*0x13a3*/ 527,
+      /*0x024d*/ 197,
+      /*0x04a3*/ 369,
       -1,
-      /*0x0479*/ 352,
-      /*0x04f9*/ 412,
-      /*0x0079*/ 23,
-      /*0x16e67*/ 1293,
-      /*0x104f9*/ 1200,
-      /*0x1e79*/ 673,
-      /*0x1ef9*/ 732,
-      /*0xa737*/ 1043,
-      /*0x0511*/ 424,
-      /*0x118cd*/ 1267,
-      /*0x1d79*/ 610,
-      /*0x021d*/ 179,
-      /*0x1f41*/ 767,
-      -1, -1,
-      /*0x2c4f*/ 880,
+      /*0xa735*/ 1043,
+      /*0x2d08*/ 966,
+      /*0x1e23*/ 630,
+      /*0x1ea3*/ 689,
+      /*0x0123*/ 73,
+      /*0x2ca3*/ 922,
+      /*0x118c3*/ 1300,
       -1,
-      /*0x10cec*/ 1247,
-      -1, -1,
-      /*0xa641*/ 997,
-      /*0xa735*/ 1042,
-      /*0x10ec*/ 506,
-      /*0x2171*/ 807,
-      /*0x00ed*/ 38,
+      /*0xa64d*/ 1004,
       -1,
-      /*0x0247*/ 194,
-      /*0x1f24*/ 754,
       /*0x13ad*/ 537,
-      /*0x2c32*/ 851,
+      /*0x2c37*/ 856,
       /*0x04ad*/ 374,
-      /*0x118cb*/ 1265,
-      /*0x1042d*/ 1132,
-      /*0x2d1a*/ 983,
+      /*0x024b*/ 196,
+      /*0x1042d*/ 1140,
+      -1,
       /*0x1e2d*/ 635,
       /*0x1ead*/ 694,
       /*0x012d*/ 78,
-      /*0x2cad*/ 926,
-      -1, -1,
-      /*0x0288*/ 228,
-      /*0x029e*/ 235,
+      /*0x2cad*/ 927,
+      /*0x1e928*/ 1367,
+      -1, -1, -1,
+      /*0xa64b*/ 1003,
+      /*0x2c35*/ 854,
       -1,
-      /*0x13a5*/ 529,
+      /*0x0249*/ 195,
       -1,
-      /*0x04a5*/ 370,
-      /*0x0584*/ 475,
       /*0x03ad*/ 243,
-      /*0xa733*/ 1041,
-      /*0x1e25*/ 631,
-      /*0x1ea5*/ 690,
-      /*0x0125*/ 74,
-      /*0x2ca5*/ 922,
-      /*0x118c3*/ 1257,
-      -1,
-      /*0xa647*/ 1000,
-      /*0x2c49*/ 874,
-      /*0x13a3*/ 527,
       -1,
-      /*0x04a3*/ 369,
-      -1,
-      /*0x1f45*/ 771,
-      /*0x2173*/ 809,
-      /*0x1e23*/ 630,
-      /*0x1ea3*/ 689,
-      /*0x0123*/ 73,
-      /*0x2ca3*/ 921,
-      /*0xff59*/ 1125,
-      /*0x0266*/ 213,
-      /*0xa645*/ 999,
-      -1, -1,
-      /*0x048f*/ 359,
-      -1, -1,
-      /*0x118c1*/ 1255,
-      /*0x1e0f*/ 620,
-      /*0x1e8f*/ 684,
-      /*0x010f*/ 63,
-      /*0x2c8f*/ 911,
-      /*0xa69b*/ 1033,
-      -1, -1, -1,
-      /*0x1e943*/ 1351,
-      /*0xa68b*/ 1025,
-      -1, -1,
-      /*0x023f*/ 191,
-      /*0x1f66*/ 782,
+      /*0x2d24*/ 994,
+      /*0x2d22*/ 992,
+      /*0x0573*/ 458,
+      /*0xa725*/ 1036,
+      /*0x00f3*/ 44,
+      /*0x047b*/ 353,
+      /*0x04fb*/ 413,
+      /*0xa649*/ 1002,
+      /*0x118c1*/ 1298,
+      /*0x104fb*/ 1210,
+      /*0x1e7b*/ 674,
+      /*0x1efb*/ 733,
+      /*0x2d14*/ 978,
       -1,
-      /*0x10cc0*/ 1203,
+      /*0x057e*/ 469,
+      /*0x1f04*/ 740,
+      /*0x00fe*/ 54,
+      /*0x16e6f*/ 1344,
+      /*0xa733*/ 1042,
       -1, -1,
-      /*0x1fe1*/ 803,
-      -1,
-      /*0x0481*/ 356,
-      /*0x2d1c*/ 985,
-      -1,
-      /*0x026c*/ 218,
-      /*0x1e01*/ 613,
-      /*0x1e81*/ 677,
-      /*0x0101*/ 56,
-      /*0x2c81*/ 904,
-      -1,
-      /*0x2c4d*/ 878,
-      /*0x1e941*/ 1349,
-      /*0x0280*/ 224,
-      /*0x16e6b*/ 1297,
-      /*0x2175*/ 811,
-      /*0x118c7*/ 1261,
-      /*0x0282*/ 225,
-      -1, -1, -1,
-      /*0xa72d*/ 1039,
+      /*0x2d10*/ 974,
       -1,
-      /*0x051d*/ 430,
-      /*0x10f9*/ 519,
-      -1, -1,
-      /*0x1e924*/ 1320,
+      /*0x03fb*/ 291,
+      /*0x2d18*/ 982,
+      /*0x13bf*/ 555,
+      /*0x043f*/ 307,
+      /*0x04bf*/ 383,
       -1,
-      /*0x16e6f*/ 1301,
-      /*0x118c5*/ 1259,
-      /*0x00f1*/ 42,
+      /*0x1043f*/ 1158,
       -1,
-      /*0x2c4b*/ 876,
-      /*0x1fe5*/ 804,
+      /*0x1e3f*/ 644,
+      /*0x1ebf*/ 703,
       -1,
-      /*0xa725*/ 1035,
+      /*0x2cbf*/ 936,
+      /*0x118de*/ 1327,
       -1,
-      /*0x13a7*/ 531,
+      /*0x0271*/ 220,
+      /*0x2d06*/ 964,
       -1,
-      /*0x04a7*/ 371,
-      /*0x1f22*/ 752,
-      /*0x2d04*/ 961,
-      /*0x1f37*/ 765,
-      /*0x1e27*/ 632,
-      /*0x1ea7*/ 691,
-      /*0x0127*/ 75,
-      /*0x2ca7*/ 923,
+      /*0x037b*/ 239,
       -1, -1,
-      /*0xa723*/ 1034,
+      /*0x2c33*/ 852,
+      /*0x03bf*/ 260,
+      /*0x13b2*/ 542,
+      /*0x0432*/ 294,
+      /*0x2d1a*/ 984,
+      /*0x2d0c*/ 970,
+      /*0x10432*/ 1145,
+      /*0x1f71*/ 785,
+      /*0x105aa*/ 1229,
+      /*0xa723*/ 1035,
+      /*0x13b9*/ 549,
+      /*0x0439*/ 301,
+      /*0x04b9*/ 380,
       -1,
-      /*0x2d11*/ 974,
-      -1, -1,
-      /*0x2c43*/ 868,
+      /*0x10439*/ 1152,
+      /*0x0275*/ 222,
+      /*0x1e39*/ 641,
+      /*0x1eb9*/ 700,
       -1,
-      /*0x1f35*/ 763,
-      /*0x00ee*/ 39,
+      /*0x2cb9*/ 933,
       -1,
-      /*0x047b*/ 353,
-      /*0x04fb*/ 413,
+      /*0x03b2*/ 247,
+      /*0x1e943*/ 1394,
+      /*0xa72d*/ 1040,
+      -1, -1,
+      /*0x118cf*/ 1312,
       -1,
-      /*0x0233*/ 189,
-      /*0x104fb*/ 1202,
-      /*0x1e7b*/ 674,
-      /*0x1efb*/ 733,
+      /*0x1f75*/ 789,
+      /*0x03b9*/ 254,
+      -1, -1,
+      /*0x13ac*/ 536,
       /*0x13b1*/ 541,
       /*0x0431*/ 293,
       /*0x04b1*/ 376,
-      /*0x00f3*/ 44,
-      /*0x10431*/ 1136,
+      /*0x1042c*/ 1139,
+      /*0x10431*/ 1144,
       -1,
       /*0x1e31*/ 637,
       /*0x1eb1*/ 696,
       -1,
-      /*0x2cb1*/ 928,
-      /*0x2c41*/ 866,
-      /*0x03fb*/ 291,
-      /*0x0240*/ 192,
-      /*0x0566*/ 445,
-      /*0x16e6d*/ 1299,
-      /*0x047d*/ 354,
-      /*0x04fd*/ 414,
-      /*0x1f33*/ 761,
-      -1,
-      /*0x03b1*/ 246,
-      /*0x1e7d*/ 675,
-      /*0x1efd*/ 734,
-      /*0xff57*/ 1123,
-      /*0x047f*/ 355,
-      /*0x04ff*/ 415,
-      /*0x1d7d*/ 611,
-      -1, -1,
-      /*0x1e7f*/ 676,
-      /*0x1eff*/ 735,
-      /*0x13bd*/ 553,
-      /*0x043d*/ 305,
-      /*0x04bd*/ 382,
-      /*0x1f40*/ 766,
-      /*0x1043d*/ 1148,
-      /*0xa791*/ 1080,
-      /*0x1e3d*/ 643,
-      /*0x1ebd*/ 702,
-      /*0x01bf*/ 137,
-      /*0x2cbd*/ 934,
+      /*0x2cb1*/ 929,
       -1, -1,
-      /*0x1e93f*/ 1347,
-      -1,
-      /*0x056c*/ 451,
-      /*0x2c47*/ 872,
+      /*0x1e92a*/ 1369,
+      /*0x2d20*/ 990,
       -1, -1, -1,
-      /*0x03bd*/ 258,
-      /*0x00f5*/ 46,
+      /*0x118cd*/ 1310,
+      /*0x03ac*/ 242,
+      /*0x03b1*/ 246,
       -1,
-      /*0x007a*/ 24,
+      /*0x13a7*/ 531,
+      /*0x1e941*/ 1392,
+      /*0x04a7*/ 371,
       -1,
-      /*0x104fa*/ 1201,
-      /*0x1f79*/ 793,
+      /*0x2d1e*/ 988,
       -1,
-      /*0x017a*/ 114,
-      /*0xa727*/ 1036,
-      /*0x2c45*/ 870,
-      /*0x13b9*/ 549,
-      /*0x0439*/ 301,
-      /*0x04b9*/ 380,
-      /*0x022d*/ 186,
-      /*0x10439*/ 1144,
+      /*0x1e27*/ 632,
+      /*0x1ea7*/ 691,
+      /*0x0127*/ 75,
+      /*0x2ca7*/ 924,
+      -1, -1,
+      /*0x118cb*/ 1308,
       -1,
-      /*0x1e39*/ 641,
-      /*0x1eb9*/ 700,
-      /*0x1e922*/ 1318,
-      /*0x2cb9*/ 932,
-      /*0x1e937*/ 1339,
+      /*0x1f37*/ 765,
+      /*0xa73f*/ 1048,
       -1,
-      /*0x13c2*/ 558,
-      /*0x0442*/ 310,
-      /*0x04c2*/ 384,
+      /*0x16e6d*/ 1342,
+      -1, -1, -1, -1, -1,
+      /*0x13c7*/ 563,
+      /*0x0447*/ 315,
       -1,
-      /*0x10442*/ 1153,
+      /*0x118c9*/ 1306,
+      /*0x10447*/ 1166,
+      /*0x1f35*/ 763,
+      /*0x1e47*/ 648,
+      /*0x1ec7*/ 707,
       -1,
-      /*0x0225*/ 182,
-      /*0x03b9*/ 254,
-      /*0x0142*/ 87,
-      /*0x13d0*/ 572,
-      /*0x0450*/ 324,
+      /*0x2cc7*/ 940,
+      /*0x0201*/ 165,
+      -1, -1, -1, -1, -1,
+      /*0x01c9*/ 139,
+      /*0x2c3f*/ 864,
       -1,
-      /*0x1e935*/ 1337,
-      /*0x13f2*/ 606,
+      /*0x03c7*/ 267,
+      /*0xa739*/ 1045,
+      -1, -1,
+      /*0x1f01*/ 737,
+      /*0x2173*/ 809,
       -1,
-      /*0x2c66*/ 898,
-      /*0x0072*/ 16,
-      /*0x2d24*/ 993,
-      /*0x104f2*/ 1193,
+      /*0x0225*/ 182,
+      -1, -1,
+      /*0x1fd1*/ 801,
       -1,
-      /*0x0223*/ 181,
+      /*0x0205*/ 167,
       -1,
-      /*0x2d1d*/ 986,
-      /*0x24d0*/ 823,
-      /*0x118c0*/ 1254,
-      /*0xff51*/ 1117,
+      /*0xa7b7*/ 1095,
+      /*0x214e*/ 805,
+      -1,
+      /*0x217e*/ 820,
+      /*0x2c32*/ 851,
       -1,
       /*0x1f25*/ 755,
+      /*0x2d02*/ 960,
+      /*0x0233*/ 189,
+      /*0x13c5*/ 561,
+      /*0x0445*/ 313,
+      /*0x1f05*/ 741,
+      /*0x2c39*/ 858,
+      /*0x10445*/ 1164,
+      /*0xa7b5*/ 1094,
+      /*0x1e45*/ 647,
+      /*0x1ec5*/ 706,
+      /*0x16e73*/ 1348,
+      /*0x2cc5*/ 939,
+      -1, -1,
+      /*0x1f33*/ 761,
+      /*0x2d0e*/ 972,
       -1, -1,
-      /*0xa7c3*/ 1099,
+      /*0x2d00*/ 958,
+      /*0x0584*/ 475,
       -1,
-      /*0x03f2*/ 288,
-      /*0x020f*/ 172,
+      /*0x03c5*/ 265,
+      /*0x16e7e*/ 1359,
       -1,
-      /*0x2c3f*/ 864,
+      /*0xa727*/ 1037,
+      /*0xa781*/ 1076,
+      /*0x13c0*/ 556,
+      /*0x0440*/ 308,
+      /*0x2c31*/ 850,
       -1,
-      /*0xa77f*/ 1074,
+      /*0x10440*/ 1159,
+      /*0x047d*/ 354,
+      /*0x04fd*/ 414,
+      -1,
+      /*0x0140*/ 86,
+      /*0x0223*/ 181,
+      /*0x1e7d*/ 675,
+      /*0x1efd*/ 734,
+      /*0x01f5*/ 160,
+      /*0x1d7d*/ 611,
       -1,
-      /*0x1e933*/ 1335,
-      /*0xff53*/ 1119,
+      /*0xa7a5*/ 1091,
+      -1, -1, -1,
+      /*0x03c0*/ 261,
+      /*0xa785*/ 1078,
+      /*0xa747*/ 1052,
       /*0x1f23*/ 753,
+      /*0x022d*/ 186,
+      /*0x1e03*/ 614,
+      /*0x1e83*/ 678,
+      /*0x0103*/ 57,
+      /*0x2c83*/ 906,
+      -1, -1,
+      /*0x048f*/ 359,
+      -1, -1,
+      /*0x2d11*/ 975,
+      /*0x1e0f*/ 620,
+      /*0x1e8f*/ 684,
+      /*0x010f*/ 63,
+      /*0x2c8f*/ 912,
+      /*0xa69b*/ 1034,
+      /*0x0571*/ 456,
+      /*0x037d*/ 241,
+      /*0x00f1*/ 42,
       -1,
-      /*0x16e71*/ 1303,
+      /*0xa68b*/ 1026,
+      -1, -1,
+      /*0x2c47*/ 872,
+      -1,
+      /*0x10cc7*/ 1253,
+      /*0x13bd*/ 553,
+      /*0x043d*/ 305,
+      /*0x04bd*/ 382,
+      -1,
+      /*0x1043d*/ 1156,
+      -1,
+      /*0x1e3d*/ 643,
+      /*0x1ebd*/ 702,
+      -1,
+      /*0x2cbd*/ 935,
+      -1,
+      /*0x0575*/ 460,
+      /*0x1f7b*/ 795,
+      /*0x00f5*/ 46,
+      /*0xa745*/ 1051,
+      /*0xa7a3*/ 1090,
+      /*0x13a1*/ 525,
       -1,
-      /*0xa73d*/ 1046,
-      /*0x2c6c*/ 901,
+      /*0x04a1*/ 368,
+      /*0x03bd*/ 258,
+      /*0x023f*/ 191,
+      /*0xff59*/ 1133,
+      /*0x1e21*/ 629,
+      /*0x1ea1*/ 688,
+      /*0x0121*/ 72,
+      /*0x2ca1*/ 921,
       /*0x13bb*/ 551,
       /*0x043b*/ 303,
       /*0x04bb*/ 381,
-      -1,
-      /*0x1043b*/ 1146,
+      /*0x105ae*/ 1233,
+      /*0x1043b*/ 1154,
       -1,
       /*0x1e3b*/ 642,
       /*0x1ebb*/ 701,
-      /*0x1e940*/ 1348,
-      /*0x2cbb*/ 933,
-      /*0x0201*/ 165,
+      -1,
+      /*0x2cbb*/ 934,
       -1, -1, -1,
-      /*0x10fd*/ 521,
+      /*0x2c45*/ 870,
+      /*0x13af*/ 539,
+      /*0x10cc5*/ 1251,
+      /*0x04af*/ 375,
+      /*0x105b7*/ 1241,
+      /*0x1042f*/ 1142,
+      /*0x03bb*/ 256,
+      /*0x1e2f*/ 636,
+      /*0x1eaf*/ 695,
+      /*0x012f*/ 79,
+      /*0x2caf*/ 928,
       -1,
-      /*0x2c37*/ 856,
-      /*0xa77a*/ 1072,
+      /*0x01a5*/ 129,
       -1,
-      /*0x03bb*/ 256,
+      /*0x1f32*/ 760,
+      /*0x0499*/ 364,
       -1,
-      /*0x0579*/ 464,
-      /*0x10ff*/ 523,
-      /*0x16e6e*/ 1300,
+      /*0x0185*/ 119,
+      /*0x105b5*/ 1239,
+      /*0x1e19*/ 625,
+      /*0x03af*/ 245,
+      /*0x0119*/ 68,
+      /*0x2c99*/ 917,
       -1,
-      /*0xa79d*/ 1086,
-      /*0x01f9*/ 161,
-      /*0x017c*/ 115,
-      /*0xa739*/ 1044,
+      /*0x2c40*/ 865,
+      /*0x13e6*/ 594,
+      /*0x10cc0*/ 1246,
+      /*0x1e92e*/ 1373,
+      /*0x0066*/ 5,
       -1,
-      /*0x2c35*/ 854,
-      /*0x1f01*/ 737,
-      /*0x13af*/ 539,
+      /*0x104e6*/ 1189,
       -1,
-      /*0x04af*/ 375,
-      /*0x16e73*/ 1305,
-      /*0x1042f*/ 1134,
+      /*0x0231*/ 188,
+      /*0x0581*/ 472,
       -1,
-      /*0x1e2f*/ 636,
-      /*0x1eaf*/ 695,
-      /*0x012f*/ 79,
-      /*0x2caf*/ 927,
+      /*0x10fd*/ 521,
+      /*0xa7bf*/ 1099,
+      /*0x13f2*/ 606,
+      -1,
+      /*0x24e6*/ 845,
+      /*0x0072*/ 16,
+      /*0x1e937*/ 1382,
+      /*0x104f2*/ 1201,
+      -1,
+      /*0x0501*/ 416,
+      /*0x1f31*/ 759,
       -1, -1,
-      /*0x1e05*/ 615,
-      /*0x1e85*/ 679,
-      /*0x0105*/ 58,
-      /*0x2c85*/ 906,
+      /*0xa73d*/ 1047,
+      -1, -1, -1,
+      /*0x105a5*/ 1224,
       /*0x0227*/ 183,
-      /*0x10fa*/ 520,
-      /*0x052d*/ 438,
-      /*0x03af*/ 245,
+      /*0x0585*/ 476,
+      /*0x1e935*/ 1380,
+      /*0x03f2*/ 288,
+      -1, -1, -1,
+      /*0x0525*/ 434,
+      /*0x01a3*/ 128,
       -1, -1,
-      /*0x13a9*/ 533,
+      /*0xa7b9*/ 1096,
+      /*0x0505*/ 418,
+      /*0x1f27*/ 757,
+      /*0x105b3*/ 1237,
+      -1, -1, -1,
+      /*0x1059c*/ 1216,
+      -1,
+      /*0x2c3d*/ 862,
+      /*0xa73b*/ 1046,
       /*0x01ad*/ 131,
+      /*0x0247*/ 194,
+      /*0x13a9*/ 533,
+      -1,
       /*0x04a9*/ 372,
-      /*0x2c33*/ 852,
-      /*0x10429*/ 1128,
-      /*0x1e92d*/ 1329,
+      -1,
+      /*0x10429*/ 1136,
+      -1,
       /*0x1e29*/ 633,
       /*0x1ea9*/ 692,
       /*0x0129*/ 76,
-      /*0x2ca9*/ 924,
+      /*0x2ca9*/ 925,
+      /*0xa647*/ 1001,
+      /*0xa72f*/ 1041,
+      /*0x1e925*/ 1364,
+      /*0x0479*/ 352,
+      /*0x04f9*/ 412,
+      /*0x0079*/ 23,
+      /*0x2171*/ 807,
+      /*0x104f9*/ 1208,
+      /*0x1e79*/ 673,
+      /*0x1ef9*/ 732,
+      -1,
+      /*0x1d79*/ 610,
+      /*0x2c3b*/ 860,
+      /*0x01fb*/ 162,
+      /*0x105a3*/ 1222,
+      -1, -1,
+      /*0x1e933*/ 1378,
+      -1,
+      /*0xff57*/ 1131,
+      -1,
+      /*0xa7a7*/ 1092,
+      /*0x0523*/ 433,
+      -1, -1, -1, -1,
+      /*0x2175*/ 811,
+      /*0x105ad*/ 1232,
+      /*0x13d0*/ 572,
+      /*0x0450*/ 324,
+      -1,
+      /*0x16e71*/ 1346,
+      -1,
+      /*0x01bf*/ 137,
+      -1,
+      /*0x052d*/ 438,
+      /*0x13c2*/ 558,
+      /*0x0442*/ 310,
+      /*0x04c2*/ 384,
       -1,
-      /*0x0525*/ 434,
+      /*0x10442*/ 1161,
+      /*0xa645*/ 1000,
+      /*0x24d0*/ 823,
+      /*0x1f45*/ 771,
+      /*0x0142*/ 87,
+      /*0x1e09*/ 617,
+      /*0x1e89*/ 681,
+      /*0x0109*/ 60,
+      /*0x2c89*/ 909,
+      /*0x2c66*/ 899,
+      /*0x1e923*/ 1362,
+      /*0x10ce6*/ 1284,
+      /*0x16e75*/ 1350,
       -1,
-      /*0x10cc2*/ 1205,
+      /*0x0240*/ 192,
       -1,
-      /*0x1f27*/ 757,
-      /*0x01a5*/ 129,
-      -1, -1,
-      /*0x2c40*/ 865,
-      /*0x1e925*/ 1321,
+      /*0x10e6*/ 500,
       -1,
-      /*0x10cd0*/ 1219,
-      /*0x0231*/ 188,
-      /*0x2d22*/ 991,
-      /*0x0523*/ 433,
-      /*0x10cf2*/ 1253,
-      /*0x10d0*/ 478,
-      /*0x16e75*/ 1307,
+      /*0x027d*/ 223,
       -1,
-      /*0x01a3*/ 128,
+      /*0x057b*/ 466,
+      /*0x01b9*/ 135,
+      /*0x00fb*/ 51,
+      /*0x10cf2*/ 1296,
+      /*0x1e92d*/ 1372,
+      -1, -1,
+      /*0x1f40*/ 766,
       /*0x10f2*/ 512,
+      -1, -1,
+      /*0x1f7d*/ 797,
+      /*0x0203*/ 166,
       -1,
-      /*0xa73b*/ 1045,
-      /*0x1e923*/ 1319,
-      /*0x1fd1*/ 801,
-      /*0x1f7b*/ 795,
-      /*0x027d*/ 223,
-      /*0x050f*/ 423,
+      /*0xff51*/ 1125,
       -1,
-      /*0xff55*/ 1121,
-      /*0x13ce*/ 570,
-      /*0x044e*/ 322,
-      /*0x04ce*/ 390,
-      /*0x1f31*/ 759,
-      /*0x1044e*/ 1165,
+      /*0xa729*/ 1038,
+      -1,
+      /*0x047f*/ 355,
+      /*0x04ff*/ 415,
       -1, -1,
-      /*0xa7bf*/ 1098,
+      /*0x020f*/ 172,
+      /*0x1e7f*/ 676,
+      /*0x1eff*/ 735,
+      /*0x1f03*/ 739,
       /*0x0477*/ 351,
       /*0x04f7*/ 411,
       /*0x0077*/ 21,
-      /*0xa77c*/ 1073,
-      /*0x104f7*/ 1198,
+      -1,
+      /*0x104f7*/ 1206,
       /*0x1e77*/ 672,
       /*0x1ef7*/ 731,
       /*0x0177*/ 113,
+      /*0x13ec*/ 600,
+      -1, -1,
+      /*0x006c*/ 10,
       -1,
-      /*0x1f7d*/ 797,
-      -1,
-      /*0x03ce*/ 274,
+      /*0x104ec*/ 1195,
+      /*0x13ab*/ 535,
+      /*0x105b9*/ 1243,
+      /*0x04ab*/ 373,
+      /*0x2cec*/ 955,
+      /*0x1042b*/ 1138,
       -1,
-      /*0x0501*/ 416,
-      -1, -1,
-      /*0xa72f*/ 1040,
-      /*0x1e03*/ 614,
-      /*0x1e83*/ 678,
-      /*0x0103*/ 57,
-      /*0x2c83*/ 905,
+      /*0x1e2b*/ 634,
+      /*0x1eab*/ 693,
+      /*0x012b*/ 77,
+      /*0x2cab*/ 926,
+      /*0x1e93f*/ 1390,
       /*0x13e8*/ 596,
-      /*0xff4f*/ 1115,
-      -1,
+      -1, -1,
       /*0x0068*/ 7,
+      /*0x118c7*/ 1304,
+      /*0x104e8*/ 1191,
+      -1, -1,
+      /*0x2184*/ 822,
+      /*0x10f9*/ 519,
+      /*0x0377*/ 238,
       -1,
-      /*0x104e8*/ 1183,
-      /*0xa7b7*/ 1094,
-      /*0x13c6*/ 562,
-      /*0x0446*/ 314,
-      /*0x04c6*/ 386,
+      /*0x105ac*/ 1231,
+      /*0x105b1*/ 1236,
+      /*0x24e8*/ 847,
+      /*0x13ea*/ 598,
+      /*0xa783*/ 1077,
+      -1,
+      /*0x006a*/ 8,
+      /*0x1e932*/ 1377,
+      /*0x104ea*/ 1193,
+      /*0x1f21*/ 751,
+      /*0x2d04*/ 962,
+      -1, -1, -1,
+      /*0xa691*/ 1029,
+      /*0x1e939*/ 1384,
+      -1,
+      /*0x2c50*/ 881,
+      -1,
+      /*0x10cd0*/ 1262,
+      /*0x022f*/ 187,
       -1,
-      /*0x10446*/ 1157,
+      /*0x105a7*/ 1226,
       -1,
+      /*0x10d0*/ 478,
+      /*0x2c42*/ 867,
       /*0x13f0*/ 604,
-      /*0x24e8*/ 847,
-      /*0x0146*/ 89,
+      /*0x10cc2*/ 1248,
+      -1,
       /*0x0070*/ 14,
-      /*0xa729*/ 1037,
-      /*0x104f0*/ 1191,
+      /*0x0527*/ 435,
+      /*0x104f0*/ 1199,
+      /*0x0219*/ 177,
       -1,
-      /*0xa7b5*/ 1093,
-      -1, -1,
-      /*0x1f7a*/ 794,
+      /*0x118c5*/ 1302,
+      /*0xa7bd*/ 1098,
       -1,
-      /*0x0242*/ 193,
-      /*0x03c6*/ 266,
+      /*0x1e92c*/ 1371,
+      /*0x1e931*/ 1376,
       -1, -1,
-      /*0x0499*/ 364,
-      /*0x0527*/ 435,
-      -1, -1,
-      /*0x1e19*/ 625,
-      /*0x0250*/ 199,
-      /*0x0119*/ 68,
-      /*0x2c99*/ 916,
+      /*0xa77f*/ 1075,
       -1,
-      /*0x0272*/ 221,
-      /*0x1e927*/ 1323,
-      /*0x0581*/ 472,
+      /*0xff53*/ 1127,
+      /*0x0266*/ 213,
       -1,
-      /*0xff49*/ 1109,
-      -1, -1,
-      /*0x037b*/ 239,
-      /*0x1f42*/ 768,
-      -1, -1,
-      /*0x00e6*/ 31,
+      /*0x13c8*/ 564,
+      /*0x0448*/ 316,
+      /*0x04c8*/ 387,
       -1,
-      /*0x057b*/ 466,
+      /*0x10448*/ 1167,
+      /*0xa7a1*/ 1089,
       -1,
-      /*0x13c4*/ 560,
-      /*0x0444*/ 312,
-      /*0x04c4*/ 385,
-      /*0x01fb*/ 162,
-      /*0x10444*/ 1155,
+      /*0xff55*/ 1129,
+      /*0x0148*/ 90,
       -1,
-      /*0x1f72*/ 786,
+      /*0x0272*/ 221,
+      /*0x1f66*/ 782,
+      /*0x118c0*/ 1297,
+      /*0x1e927*/ 1366,
       -1,
-      /*0x0144*/ 88,
-      -1, -1,
-      /*0x2d2d*/ 996,
+      /*0xa7bb*/ 1097,
       -1, -1,
-      /*0x037d*/ 241,
-      /*0x1e931*/ 1333,
+      /*0xa72b*/ 1039,
+      /*0x03c8*/ 268,
+      /*0x0076*/ 20,
+      -1,
+      /*0x104f6*/ 1205,
+      /*0x1f72*/ 786,
       -1, -1, -1,
-      /*0x03c4*/ 264,
-      /*0x057d*/ 468,
-      /*0x2179*/ 815,
-      /*0x13d6*/ 578,
-      /*0x0456*/ 330,
+      /*0x10ff*/ 523,
       -1,
       /*0x01fd*/ 163,
-      /*0x2d25*/ 994,
-      /*0x00ec*/ 37,
-      /*0x057f*/ 470,
-      -1, -1,
-      /*0x029d*/ 234,
-      /*0x10cce*/ 1217,
-      /*0x01ff*/ 164,
-      -1, -1,
-      /*0x24d6*/ 829,
       -1,
-      /*0xff4d*/ 1113,
-      -1,
-      /*0x2d23*/ 992,
-      /*0x01bd*/ 136,
-      /*0x0495*/ 362,
+      /*0x13e4*/ 592,
       -1,
+      /*0x217b*/ 817,
+      /*0x0064*/ 3,
       /*0x10f7*/ 517,
-      /*0x1e93d*/ 1345,
+      /*0x104e4*/ 1187,
+      /*0x2c6c*/ 902,
+      /*0xff4e*/ 1122,
+      /*0x10cec*/ 1290,
+      -1,
+      /*0xa799*/ 1085,
+      /*0x0495*/ 362,
+      /*0x0183*/ 118,
+      /*0x10ec*/ 506,
+      /*0x24e4*/ 843,
       /*0x1e15*/ 623,
       /*0x1e95*/ 687,
       /*0x0115*/ 66,
-      /*0x2c95*/ 914,
-      -1,
-      /*0x022f*/ 187,
-      -1,
-      /*0x2d0f*/ 972,
+      /*0x2c95*/ 915,
+      /*0x0229*/ 184,
+      -1, -1, -1,
+      /*0x2c68*/ 900,
       -1,
-      /*0x057a*/ 465,
-      /*0x118c2*/ 1256,
-      /*0x0205*/ 167,
+      /*0x10ce8*/ 1286,
+      -1, -1,
+      /*0x16e7b*/ 1356,
       -1,
-      /*0x1f7c*/ 796,
-      /*0xff4b*/ 1111,
-      /*0x10ce8*/ 1243,
-      -1, -1, -1,
-      /*0x118d0*/ 1270,
       /*0x10e8*/ 502,
-      /*0x13ea*/ 598,
-      /*0x10cc6*/ 1209,
+      /*0xff43*/ 1111,
       -1,
-      /*0x006a*/ 8,
-      /*0x01b9*/ 135,
-      /*0x104ea*/ 1185,
-      /*0x0229*/ 184,
-      /*0x10cf0*/ 1251,
-      /*0x1e939*/ 1341,
-      /*0xa7a5*/ 1090,
-      /*0x2d01*/ 958,
-      /*0x1f05*/ 741,
-      /*0x10f0*/ 510,
-      /*0x2c31*/ 850,
+      /*0x13c6*/ 562,
+      /*0x0446*/ 314,
+      /*0x04c6*/ 386,
       -1,
-      /*0xff43*/ 1103,
-      -1, -1, -1, -1,
-      /*0x1e942*/ 1350,
-      -1, -1,
-      /*0xa7a3*/ 1089,
-      /*0x0572*/ 457,
-      /*0x01d0*/ 142,
-      /*0x13a1*/ 525,
+      /*0x10446*/ 1165,
+      /*0x2c6a*/ 901,
       -1,
-      /*0x04a1*/ 368,
-      -1, -1, -1,
-      /*0x1e21*/ 629,
-      /*0x1ea1*/ 688,
-      /*0x0121*/ 72,
-      /*0x2ca1*/ 920,
-      /*0xa691*/ 1028,
-      /*0xff41*/ 1101,
-      /*0x1e07*/ 616,
-      /*0x1e87*/ 680,
-      /*0x0107*/ 59,
-      /*0x2c87*/ 907,
+      /*0x10cea*/ 1288,
+      /*0x0146*/ 89,
       -1,
-      /*0x2c3d*/ 862,
+      /*0x01bd*/ 136,
+      /*0x1f79*/ 793,
+      /*0x10ea*/ 504,
+      /*0x057d*/ 468,
       -1,
+      /*0x00fd*/ 53,
+      /*0x0583*/ 474,
       /*0x0493*/ 361,
       -1,
-      /*0x10cc4*/ 1207,
-      /*0x2d27*/ 995,
+      /*0x03c6*/ 266,
+      -1,
       /*0x1e13*/ 622,
       /*0x1e93*/ 686,
       /*0x0113*/ 65,
-      /*0x2c93*/ 913,
+      /*0x2c93*/ 914,
+      /*0x0250*/ 199,
+      /*0x01a1*/ 127,
+      /*0x0503*/ 417,
+      /*0x2d01*/ 959,
+      /*0x13e0*/ 588,
+      /*0x10cf0*/ 1294,
+      /*0xff41*/ 1109,
+      -1,
+      /*0x0242*/ 193,
+      /*0x104e0*/ 1183,
+      /*0x10f0*/ 510,
+      /*0x0209*/ 169,
+      /*0x050f*/ 423,
+      /*0x1e940*/ 1391,
       -1, -1,
-      /*0x13ab*/ 535,
-      /*0x00f9*/ 49,
-      /*0x04ab*/ 373,
+      /*0xa7a9*/ 1093,
       -1,
-      /*0x1042b*/ 1130,
-      /*0xa781*/ 1075,
-      /*0x1e2b*/ 634,
-      /*0x1eab*/ 693,
-      /*0x012b*/ 77,
-      /*0x2cab*/ 925,
-      /*0x13e4*/ 592,
-      /*0x0203*/ 166,
-      /*0x1e93b*/ 1343,
-      /*0x0064*/ 3,
-      /*0x10cd6*/ 1225,
-      /*0x104e4*/ 1179,
-      /*0x037c*/ 240,
-      /*0xff47*/ 1107,
-      /*0x2c39*/ 858,
-      /*0x10d6*/ 484,
-      /*0x1f77*/ 791,
-      /*0x0268*/ 214,
-      /*0x057c*/ 467,
-      /*0x13e2*/ 590,
-      /*0x24e4*/ 843,
-      /*0x16e66*/ 1292,
-      /*0x0062*/ 1,
+      /*0x24e0*/ 839,
+      /*0x2d25*/ 995,
       -1,
-      /*0x104e2*/ 1177,
+      /*0x1f42*/ 768,
       -1,
-      /*0x2c42*/ 867,
-      /*0xff45*/ 1105,
-      /*0x1f03*/ 739,
+      /*0x2c48*/ 873,
+      /*0x2d05*/ 963,
+      /*0x10cc8*/ 1254,
+      /*0x1e07*/ 616,
+      /*0x1e87*/ 680,
+      /*0x0107*/ 59,
+      /*0x2c87*/ 908,
+      -1,
+      /*0x13c4*/ 560,
+      /*0x0444*/ 312,
+      /*0x04c4*/ 385,
+      -1,
+      /*0x10444*/ 1163,
+      -1,
+      /*0x0199*/ 124,
+      /*0x2d1c*/ 986,
+      /*0x0144*/ 88,
+      /*0x2c76*/ 904,
+      /*0x105a1*/ 1221,
+      -1, -1, -1, -1,
+      /*0x0283*/ 226,
+      /*0x10f6*/ 516,
+      /*0x0497*/ 363,
+      /*0x0521*/ 432,
+      /*0x03c4*/ 264,
+      /*0x105bb*/ 1244,
+      /*0x1e17*/ 624,
+      /*0x049d*/ 366,
+      /*0x0117*/ 67,
+      /*0x2c97*/ 916,
+      /*0x10ce4*/ 1282,
+      /*0x1e1d*/ 627,
+      -1,
+      /*0x011d*/ 70,
+      /*0x2c9d*/ 919,
+      /*0x10e4*/ 498,
+      /*0x1e93d*/ 1388,
       -1, -1,
-      /*0x052f*/ 439,
+      /*0x105af*/ 1234,
+      /*0x026c*/ 218,
+      /*0xff4f*/ 1123,
+      /*0x2d23*/ 993,
       -1,
-      /*0x24e2*/ 841,
+      /*0x1f77*/ 791,
       -1,
-      /*0x2c50*/ 881,
+      /*0x022b*/ 185,
+      /*0x052f*/ 439,
+      -1, -1,
+      /*0x13e2*/ 590,
+      /*0x10599*/ 1213,
       -1,
-      /*0x0505*/ 418,
+      /*0x0062*/ 1,
       -1,
-      /*0xa7a7*/ 1091,
-      /*0x1e92f*/ 1331,
+      /*0x104e2*/ 1185,
+      /*0x2d2d*/ 997,
+      /*0x0268*/ 214,
       -1,
-      /*0x0185*/ 119,
-      /*0x13e0*/ 588,
-      /*0x0219*/ 177,
-      /*0x13da*/ 582,
-      /*0x045a*/ 334,
+      /*0x0519*/ 428,
       -1,
-      /*0x104e0*/ 1175,
-      /*0x217b*/ 817,
-      /*0x104da*/ 1169,
-      /*0x1f70*/ 784,
-      /*0x16e6c*/ 1298,
-      /*0x0529*/ 436,
+      /*0x2c46*/ 871,
+      /*0x1e93b*/ 1386,
+      /*0x10cc6*/ 1252,
+      /*0x24e2*/ 841,
+      /*0xff4d*/ 1121,
+      /*0x13d6*/ 578,
+      /*0x0456*/ 330,
       /*0x0078*/ 22,
-      /*0x10cea*/ 1245,
-      /*0x104f8*/ 1199,
-      /*0x24e0*/ 839,
-      -1,
-      /*0x24da*/ 833,
-      /*0x10ea*/ 504,
       -1,
-      /*0x1e929*/ 1325,
+      /*0x104f8*/ 1207,
+      /*0x0566*/ 445,
+      /*0x026a*/ 216,
+      /*0x00e6*/ 31,
       /*0x13dc*/ 584,
       /*0x045c*/ 336,
-      /*0x13cc*/ 568,
-      /*0x044c*/ 320,
-      /*0x04cc*/ 389,
-      /*0x104dc*/ 1171,
-      /*0x1044c*/ 1163,
+      /*0x1e92f*/ 1374,
+      /*0x13da*/ 582,
+      /*0x045a*/ 334,
+      /*0x104dc*/ 1179,
+      /*0x24d6*/ 829,
+      /*0xff4b*/ 1119,
+      /*0x104da*/ 1177,
+      /*0x0572*/ 457,
       /*0x03f8*/ 290,
+      /*0x00f2*/ 43,
+      -1,
+      /*0x01f9*/ 161,
+      /*0x24dc*/ 835,
+      -1, -1,
+      /*0x24da*/ 833,
+      /*0x10ce0*/ 1278,
+      -1, -1,
+      /*0xff49*/ 1117,
+      -1,
+      /*0x10e0*/ 494,
+      -1, -1, -1,
+      /*0x118d0*/ 1313,
+      /*0x13bc*/ 552,
+      /*0x043c*/ 304,
       /*0x217d*/ 819,
-      /*0x118ce*/ 1268,
-      /*0x2c3b*/ 860,
       -1,
+      /*0x1043c*/ 1155,
+      -1,
+      /*0x1f70*/ 784,
+      /*0x118c2*/ 1299,
+      /*0x013c*/ 84,
+      /*0x017c*/ 115,
+      -1, -1,
+      /*0x01d0*/ 142,
+      /*0x105a9*/ 1228,
+      -1,
+      /*0x2c44*/ 869,
+      /*0x1fb1*/ 799,
+      /*0x10cc4*/ 1250,
+      -1,
+      /*0x03bc*/ 257,
+      -1,
+      /*0x0529*/ 436,
       /*0x13d8*/ 580,
       /*0x0458*/ 332,
-      /*0x24dc*/ 835,
+      -1, -1, -1,
+      /*0x104d8*/ 1175,
+      /*0x16e7d*/ 1358,
       -1,
-      /*0x217f*/ 821,
-      /*0x104d8*/ 1167,
-      -1, -1,
-      /*0xa72b*/ 1038,
-      /*0x03cc*/ 272,
-      /*0x0585*/ 476,
+      /*0x13ca*/ 566,
+      /*0x044a*/ 318,
+      /*0x04ca*/ 388,
+      /*0x0579*/ 464,
+      /*0x1044a*/ 1169,
+      /*0x00f9*/ 49,
+      /*0x24d8*/ 831,
+      /*0x037c*/ 240,
       /*0x13d4*/ 576,
       /*0x0454*/ 328,
+      -1, -1, -1,
+      /*0x1f76*/ 790,
+      /*0x13b6*/ 546,
+      /*0x0436*/ 298,
+      -1, -1,
+      /*0x10436*/ 1149,
+      /*0x03ca*/ 270,
+      /*0x1e929*/ 1368,
       -1,
-      /*0x24d8*/ 831,
+      /*0x24d4*/ 827,
+      /*0x0215*/ 175,
+      /*0x13b0*/ 540,
+      /*0x0430*/ 292,
       -1,
-      /*0x1f44*/ 770,
-      /*0x0256*/ 204,
+      /*0x1f64*/ 780,
+      /*0x10430*/ 1143,
       /*0x13d2*/ 574,
       /*0x0452*/ 326,
-      /*0x0377*/ 238,
+      /*0x01ff*/ 164,
+      /*0x10ce2*/ 1280,
+      /*0x03b6*/ 251,
       -1, -1,
-      /*0xa7bd*/ 1097,
-      /*0x01ce*/ 141,
-      /*0x24d4*/ 827,
-      /*0x0577*/ 462,
+      /*0x1f15*/ 749,
+      /*0x10e2*/ 496,
+      /*0xa7c8*/ 1102,
       -1, -1,
-      /*0x017e*/ 116,
-      /*0x0497*/ 363,
-      /*0x217a*/ 816,
+      /*0x0509*/ 420,
+      /*0x2d27*/ 996,
       /*0x24d2*/ 825,
-      /*0x118c6*/ 1260,
-      /*0x1e17*/ 624,
-      /*0x0215*/ 175,
-      /*0x0117*/ 67,
-      /*0x2c97*/ 915,
-      /*0x0503*/ 417,
-      -1,
-      /*0x0076*/ 20,
-      /*0x13f4*/ 608,
-      /*0x104f6*/ 1197,
-      /*0x0183*/ 118,
-      /*0x0074*/ 18,
-      /*0x10ce4*/ 1239,
-      /*0x104f4*/ 1195,
-      -1,
-      /*0x0568*/ 447,
-      -1,
-      /*0x10e4*/ 498,
-      /*0x13bc*/ 552,
-      /*0x043c*/ 304,
-      /*0xa7b9*/ 1095,
+      -1, -1,
+      /*0x2c56*/ 887,
       -1,
-      /*0x1043c*/ 1147,
-      /*0x1f15*/ 749,
+      /*0x10cd6*/ 1268,
+      -1, -1, -1,
+      /*0x10f8*/ 518,
+      /*0x10d6*/ 484,
+      /*0x2c5c*/ 893,
+      /*0xa7f6*/ 1107,
+      /*0x10cdc*/ 1274,
+      /*0x2c5a*/ 891,
+      /*0xa77c*/ 1074,
+      /*0x10cda*/ 1272,
       -1,
-      /*0x10ce2*/ 1237,
-      /*0x013c*/ 84,
-      /*0x01c6*/ 138,
-      /*0x0570*/ 455,
-      /*0x026a*/ 216,
-      /*0x10e2*/ 496,
-      /*0x13c8*/ 564,
-      /*0x0448*/ 316,
-      /*0x04c8*/ 387,
-      /*0x2172*/ 808,
-      /*0x10448*/ 1159,
+      /*0x10dc*/ 490,
+      /*0x0213*/ 174,
       -1,
-      /*0x03bc*/ 257,
+      /*0x10da*/ 488,
+      /*0x13f4*/ 608,
       -1,
-      /*0x0148*/ 90,
-      /*0x16e79*/ 1311,
+      /*0x1e942*/ 1393,
+      /*0x0074*/ 18,
       -1,
-      /*0x0519*/ 428,
-      /*0x00fb*/ 51,
+      /*0x104f4*/ 1203,
+      -1, -1, -1, -1,
+      /*0x1f13*/ 747,
+      /*0x0260*/ 209,
       -1, -1,
-      /*0x118c4*/ 1258,
-      /*0x0199*/ 124,
+      /*0x057f*/ 470,
       -1,
-      /*0x10ce0*/ 1235,
-      /*0x03c8*/ 268,
-      /*0x10cda*/ 1229,
+      /*0x00ff*/ 55,
+      /*0x2c3c*/ 861,
+      -1, -1,
+      /*0x0289*/ 229,
       -1,
-      /*0x0583*/ 474,
-      /*0x10e0*/ 494,
+      /*0x0577*/ 462,
       -1,
-      /*0x10da*/ 488,
-      -1, -1, -1,
-      /*0x2c4e*/ 879,
-      /*0x0207*/ 168,
-      /*0x10f8*/ 518,
+      /*0x1f60*/ 776,
       -1, -1,
-      /*0x00fd*/ 53,
+      /*0x0207*/ 168,
+      /*0x2172*/ 808,
+      /*0x105ab*/ 1230,
       -1,
-      /*0x2d05*/ 962,
-      /*0x118d6*/ 1276,
-      /*0x10cdc*/ 1231,
+      /*0x056c*/ 451,
       -1,
-      /*0x10ccc*/ 1215,
-      /*0x0213*/ 174,
-      /*0x00ff*/ 55,
-      /*0x10dc*/ 490,
+      /*0x00ec*/ 37,
+      -1, -1, -1,
+      /*0x052b*/ 437,
       -1,
-      /*0x1f21*/ 751,
+      /*0x2c58*/ 889,
+      /*0x1f07*/ 743,
+      /*0x10cd8*/ 1270,
+      /*0x16e66*/ 1335,
       -1, -1,
-      /*0xa7bb*/ 1096,
+      /*0x118c8*/ 1305,
+      /*0x10d8*/ 486,
+      /*0x2c4a*/ 875,
+      /*0x0568*/ 447,
+      /*0x10cca*/ 1256,
+      /*0x00e8*/ 33,
+      /*0x1f44*/ 770,
+      /*0xa793*/ 1082,
+      /*0x0217*/ 176,
+      /*0x16e72*/ 1347,
+      /*0x2c54*/ 885,
       -1,
-      /*0x10cd8*/ 1227,
-      /*0x1f07*/ 743,
+      /*0x10cd4*/ 1266,
+      /*0x021d*/ 179,
       -1,
-      /*0x022b*/ 185,
+      /*0xa681*/ 1021,
+      /*0x2c36*/ 855,
+      /*0x10d4*/ 482,
+      /*0x056a*/ 449,
       -1,
-      /*0x10d8*/ 486,
-      /*0x217c*/ 818,
+      /*0x00ea*/ 35,
+      /*0x1e92b*/ 1370,
       -1,
-      /*0x2c68*/ 899,
-      -1, -1,
-      /*0x10cd4*/ 1223,
-      /*0x1f13*/ 747,
+      /*0x13b4*/ 544,
+      /*0x0434*/ 296,
       -1,
-      /*0x01d6*/ 145,
-      /*0x2c46*/ 871,
-      /*0x10d4*/ 482,
+      /*0x2c30*/ 849,
+      /*0x10434*/ 1147,
+      -1, -1, -1,
+      /*0x2c52*/ 883,
       -1,
-      /*0x10cd2*/ 1221,
-      /*0x00fa*/ 50,
-      /*0x13ca*/ 566,
-      /*0x044a*/ 318,
-      /*0x04ca*/ 388,
+      /*0x10cd2*/ 1264,
+      -1,
+      /*0x2179*/ 815,
+      /*0xa685*/ 1023,
+      /*0xa787*/ 1079,
       /*0x10d2*/ 480,
-      /*0x1044a*/ 1161,
-      /*0x2184*/ 822,
-      /*0x10fe*/ 522,
-      /*0x0515*/ 426,
-      -1, -1, -1, -1,
+      /*0x2d03*/ 961,
+      -1,
+      /*0x0570*/ 455,
+      /*0x03b4*/ 249,
+      /*0x00f0*/ 41,
+      -1, -1,
+      /*0x13cc*/ 568,
+      /*0x044c*/ 320,
+      /*0x04cc*/ 389,
+      /*0x2d0f*/ 973,
+      /*0x1044c*/ 1171,
+      /*0x1f62*/ 778,
+      /*0x049f*/ 367,
       /*0x0195*/ 123,
+      /*0x0256*/ 204,
       -1,
-      /*0x1f64*/ 780,
+      /*0x1e1f*/ 628,
       -1,
-      /*0xa785*/ 1077,
-      /*0x13b6*/ 546,
-      /*0x0436*/ 298,
-      /*0x03ca*/ 270,
+      /*0x011f*/ 71,
+      /*0x2c9f*/ 920,
       -1,
-      /*0x10436*/ 1141,
-      /*0x10f6*/ 516,
+      /*0x16e79*/ 1354,
+      /*0x025c*/ 208,
+      /*0xa797*/ 1084,
+      /*0x118c6*/ 1303,
+      /*0x03cc*/ 272,
+      /*0x1f78*/ 792,
       -1,
-      /*0x13b4*/ 544,
-      /*0x0434*/ 296,
+      /*0xa79d*/ 1087,
+      -1, -1, -1, -1, -1,
       /*0x10f4*/ 514,
-      /*0x1f62*/ 778,
-      /*0x10434*/ 1139,
+      -1, -1,
+      /*0x01c6*/ 138,
+      /*0x0576*/ 461,
       -1,
-      /*0x0260*/ 209,
+      /*0x00f6*/ 47,
+      -1, -1,
+      /*0x13be*/ 554,
+      /*0x043e*/ 306,
       -1,
-      /*0xa7a9*/ 1092,
+      /*0x2d21*/ 991,
+      /*0x1043e*/ 1157,
+      -1, -1,
+      /*0x023c*/ 190,
+      /*0x013e*/ 85,
+      /*0x0564*/ 443,
       /*0x048d*/ 358,
-      /*0x056a*/ 449,
-      /*0x00f2*/ 43,
-      /*0x03b6*/ 251,
+      /*0x00e4*/ 29,
+      -1, -1,
       /*0x1e0d*/ 619,
       /*0x1e8d*/ 683,
       /*0x010d*/ 62,
-      /*0x2c8d*/ 910,
-      /*0x2c44*/ 869,
-      /*0x2d03*/ 960,
-      /*0x03b4*/ 249,
-      /*0x10cc8*/ 1211,
-      /*0x1e09*/ 617,
-      /*0x1e89*/ 681,
-      /*0x0109*/ 60,
-      /*0x2c89*/ 908,
+      /*0x2c8d*/ 911,
+      /*0x0515*/ 426,
+      /*0x03be*/ 259,
       -1,
-      /*0x025c*/ 208,
-      /*0x1f60*/ 776,
+      /*0x1f7c*/ 796,
+      /*0x13ba*/ 550,
+      /*0x043a*/ 302,
       -1, -1,
-      /*0x13b0*/ 540,
-      /*0x0430*/ 292,
-      /*0x13de*/ 586,
-      /*0x045e*/ 338,
-      /*0x10430*/ 1135,
-      /*0x1f78*/ 792,
-      /*0x0521*/ 432,
-      /*0x104de*/ 1173,
-      /*0x214e*/ 805,
-      /*0x2c56*/ 887,
+      /*0x1043a*/ 1153,
       -1,
-      /*0x01a1*/ 127,
-      /*0x0507*/ 419,
+      /*0x217f*/ 821,
       -1,
-      /*0x049f*/ 367,
+      /*0x013a*/ 83,
+      -1, -1, -1,
+      /*0x13b8*/ 548,
+      /*0x0438*/ 300,
       /*0x2177*/ 813,
-      /*0x24de*/ 837,
+      /*0x118c4*/ 1301,
+      /*0x10438*/ 1151,
+      /*0x2d19*/ 983,
       -1,
-      /*0x1e1f*/ 628,
+      /*0x03ba*/ 255,
+      -1, -1, -1,
       /*0x0254*/ 203,
-      /*0x011f*/ 71,
-      /*0x2c9f*/ 919,
-      -1,
-      /*0x0513*/ 425,
-      -1,
-      /*0x2d19*/ 982,
-      /*0x0252*/ 201,
       -1, -1, -1, -1, -1, -1,
+      /*0x2c34*/ 853,
+      /*0x03b8*/ 253,
+      /*0x16e7f*/ 1360,
+      -1, -1,
+      /*0x0513*/ 425,
+      -1, -1, -1, -1,
+      /*0x16e77*/ 1352,
       -1,
-      /*0x00fc*/ 52,
-      /*0x052b*/ 437,
-      /*0x0217*/ 176,
+      /*0x1f36*/ 764,
       -1,
-      /*0xa783*/ 1076,
-      /*0x16e7b*/ 1313,
-      -1, -1, -1, -1,
-      /*0x1e92b*/ 1327,
-      /*0x0564*/ 443,
-      -1, -1, -1, -1,
-      /*0x2170*/ 806,
-      -1, -1, -1,
-      /*0x2c6a*/ 900,
-      -1, -1, -1,
-      /*0x0562*/ 441,
-      /*0x023c*/ 190,
-      /*0x10cca*/ 1213,
-      /*0x16e7d*/ 1315,
-      /*0x118da*/ 1280,
-      -1, -1, -1,
-      /*0x1f76*/ 790,
-      -1, -1,
-      /*0x16e7f*/ 1317,
-      /*0x1f74*/ 788,
+      /*0x0252*/ 201,
       -1, -1, -1, -1,
-      /*0xa799*/ 1084,
-      -1, -1,
-      /*0xa68f*/ 1027,
+      /*0x16e6c*/ 1341,
       -1,
-      /*0x118dc*/ 1282,
+      /*0x00e0*/ 25,
+      /*0x1f30*/ 758,
+      /*0x2c4c*/ 877,
       -1,
-      /*0x118cc*/ 1266,
+      /*0x10ccc*/ 1258,
       -1, -1, -1, -1, -1, -1,
-      /*0x01da*/ 147,
-      /*0x0578*/ 463,
-      /*0x2d15*/ 978,
-      /*0x118d8*/ 1278,
       -1, -1, -1,
-      /*0x16e7a*/ 1312,
-      -1, -1, -1, -1, -1,
-      /*0xa681*/ 1020,
-      /*0x118d4*/ 1274,
+      /*0x0507*/ 419,
+      /*0x16e68*/ 1337,
       -1, -1, -1,
-      /*0x01dc*/ 148,
-      -1,
-      /*0x01cc*/ 140,
-      /*0x118d2*/ 1272,
+      /*0xa7ca*/ 1103,
       -1, -1, -1, -1, -1,
-      /*0x10cde*/ 1233,
-      -1, -1,
-      /*0x01d8*/ 146,
-      -1,
-      /*0x10de*/ 492,
-      -1, -1, -1, -1, -1, -1,
-      -1, -1,
-      /*0x01d4*/ 144,
+      /*0x118d6*/ 1319,
       -1,
-      /*0x16e72*/ 1304,
+      /*0x2170*/ 806,
       -1, -1,
-      /*0x057e*/ 469,
+      /*0x16e6a*/ 1339,
       -1,
-      /*0x01d2*/ 143,
+      /*0x10597*/ 1211,
+      /*0x118dc*/ 1325,
+      /*0x1fd0*/ 800,
       -1,
-      /*0x00e8*/ 33,
-      -1, -1,
+      /*0x118da*/ 1323,
+      /*0x1059d*/ 1217,
+      /*0x01d6*/ 145,
+      /*0x2c3e*/ 863,
       /*0x0517*/ 427,
       -1,
-      /*0x2d21*/ 990,
-      -1, -1, -1, -1, -1,
-      /*0x2d07*/ 964,
-      /*0x0576*/ 461,
-      /*0x00f0*/ 41,
-      /*0xff42*/ 1102,
+      /*0x1f74*/ 788,
+      -1, -1,
+      /*0x051d*/ 430,
+      /*0x01dc*/ 148,
+      -1, -1,
+      /*0x01da*/ 147,
       -1,
-      /*0x0574*/ 459,
-      /*0x118c8*/ 1262,
+      /*0xff47*/ 1115,
       -1,
-      /*0x2c5a*/ 891,
-      -1, -1,
-      /*0x2d13*/ 976,
-      /*0xff50*/ 1116,
-      -1, -1, -1, -1, -1, -1,
+      /*0x16e70*/ 1345,
       -1, -1, -1, -1,
-      /*0x020d*/ 171,
-      /*0x1e93c*/ 1344,
+      /*0x0287*/ 227,
+      -1, -1,
+      /*0x2c3a*/ 859,
+      -1, -1,
+      /*0x2176*/ 812,
+      -1, -1, -1, -1, -1,
+      /*0x0562*/ 441,
       -1,
-      /*0x2c5c*/ 893,
+      /*0x00e2*/ 27,
+      /*0x2c38*/ 857,
+      -1, -1, -1, -1, -1, -1,
+      /*0x2d09*/ 967,
+      -1, -1,
+      /*0x118d8*/ 1321,
       -1,
-      /*0x2c4c*/ 877,
+      /*0x0578*/ 463,
       -1,
-      /*0x1f36*/ 764,
-      /*0x0209*/ 169,
-      -1, -1, -1,
-      /*0x16e7c*/ 1314,
+      /*0x00f8*/ 48,
       -1,
-      /*0x1f34*/ 762,
-      /*0x2c58*/ 889,
-      -1, -1, -1,
-      /*0x1fb1*/ 799,
+      /*0x029d*/ 234,
+      /*0x16e76*/ 1351,
+      /*0x118ca*/ 1307,
       -1,
-      /*0xa7a1*/ 1088,
+      /*0xff45*/ 1113,
+      -1, -1,
+      /*0x01d8*/ 146,
+      -1, -1,
+      /*0x118d4*/ 1317,
       -1, -1, -1, -1,
-      /*0x2c54*/ 885,
-      /*0xa787*/ 1078,
+      /*0x16e64*/ 1333,
       -1, -1, -1, -1, -1,
-      /*0x2c52*/ 883,
+      /*0x1f34*/ 762,
+      -1,
+      /*0x01d4*/ 144,
+      -1,
+      /*0x105bc*/ 1245,
+      -1, -1, -1,
+      /*0x01b6*/ 134,
       -1,
+      /*0x118d2*/ 1315,
+      -1, -1,
+      /*0x057c*/ 467,
       /*0x021f*/ 180,
+      /*0x00fc*/ 52,
       -1, -1,
-      /*0xa793*/ 1081,
+      /*0x01b0*/ 132,
+      -1, -1, -1, -1,
+      /*0x01d2*/ 143,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1,
-      /*0x1f30*/ 758,
-      -1, -1, -1,
-      /*0x0283*/ 226,
-      -1, -1, -1,
-      /*0x2c76*/ 903,
-      /*0x118ca*/ 1264,
+      /*0x1e93c*/ 1387,
       -1, -1, -1, -1, -1, -1,
+      /*0x105b6*/ 1240,
+      -1, -1, -1, -1,
+      /*0xa683*/ 1022,
+      -1,
+      /*0x020d*/ 171,
+      /*0x16e60*/ 1329,
+      -1,
+      /*0x105b0*/ 1235,
+      -1, -1, -1, -1,
+      /*0xa68f*/ 1028,
+      -1, -1, -1, -1, -1,
+      /*0xa79f*/ 1088,
       -1, -1, -1, -1, -1, -1,
-      /*0x2c3c*/ 861,
       -1, -1, -1, -1, -1, -1,
+      -1, -1, -1,
+      /*0x1e936*/ 1381,
       -1, -1, -1, -1, -1, -1,
-      /*0x2c48*/ 873,
+      -1, -1, -1,
+      /*0x1e930*/ 1375,
       -1, -1, -1, -1, -1, -1,
-      /*0x00ea*/ 35,
+      -1, -1, -1, -1, -1,
+      /*0x0574*/ 459,
+      -1,
+      /*0x00f4*/ 45,
       -1, -1, -1, -1, -1, -1,
       -1,
       /*0x2178*/ 814,
-      /*0x16e77*/ 1309,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1,
+      /*0x01b4*/ 133,
+      /*0x16e62*/ 1331,
+      -1, -1, -1, -1, -1, -1,
       -1,
-      /*0x01b6*/ 134,
+      /*0xa699*/ 1033,
+      /*0x118cc*/ 1309,
       -1, -1,
-      /*0x1fd0*/ 800,
-      /*0x1e936*/ 1338,
+      /*0x2d15*/ 979,
       -1, -1,
-      /*0x01b4*/ 133,
-      -1,
-      /*0x050d*/ 422,
-      /*0x2d17*/ 980,
-      /*0x1e934*/ 1336,
-      /*0x118de*/ 1284,
+      /*0x16e78*/ 1353,
+      -1, -1, -1, -1, -1, -1,
+      /*0x01cc*/ 140,
       -1, -1, -1, -1,
-      /*0x0509*/ 420,
+      /*0x217c*/ 818,
       -1, -1,
-      /*0x16e68*/ 1294,
-      -1, -1, -1, -1,
-      /*0xff4e*/ 1114,
+      /*0x1fe0*/ 802,
       -1, -1, -1, -1, -1, -1,
-      -1,
-      /*0x16e70*/ 1302,
-      -1, -1, -1,
-      /*0x01b0*/ 132,
-      -1, -1, -1,
-      /*0x1e930*/ 1332,
-      /*0x217e*/ 820,
-      -1,
-      /*0x051f*/ 431,
+      -1, -1,
+      /*0x105b4*/ 1238,
       -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1, -1,
+      /*0x2d13*/ 977,
       -1,
-      /*0x2c4a*/ 875,
-      -1,
-      /*0x00e4*/ 29,
-      -1,
-      /*0xa685*/ 1022,
+      /*0x16e7c*/ 1357,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1, -1, -1,
+      /*0x1059f*/ 1219,
+      -1, -1, -1, -1, -1, -1,
       -1,
-      /*0x2176*/ 812,
+      /*0x051f*/ 431,
       -1,
-      /*0xa797*/ 1083,
-      /*0xff46*/ 1106,
-      /*0x2174*/ 810,
+      /*0x1e934*/ 1379,
       -1, -1, -1, -1,
-      /*0x00e2*/ 27,
+      /*0x2d07*/ 965,
       -1,
-      /*0x2c36*/ 855,
+      /*0xff50*/ 1124,
       -1, -1, -1, -1, -1, -1,
-      /*0x2c34*/ 853,
+      -1,
+      /*0xff42*/ 1110,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      -1, -1, -1,
+      /*0x2d17*/ 981,
+      -1, -1, -1, -1,
+      /*0x2d1d*/ 987,
       -1, -1,
-      /*0x00e0*/ 25,
+      /*0x050d*/ 422,
+      -1, -1, -1, -1, -1,
+      /*0x2174*/ 810,
+      /*0xa689*/ 1025,
       -1, -1, -1, -1, -1, -1,
-      -1,
-      /*0x00f8*/ 48,
+      -1, -1, -1, -1,
+      /*0x105b8*/ 1242,
+      -1, -1,
+      /*0x1e93e*/ 1389,
       -1, -1, -1, -1, -1, -1,
-      /*0x2c30*/ 849,
-      /*0xff44*/ 1104,
-      /*0x2c5e*/ 895,
       -1, -1, -1, -1,
-      /*0x0287*/ 227,
+      /*0x16e74*/ 1349,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1,
+      /*0x1e93a*/ 1385,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1, -1,
+      /*0x1e938*/ 1383,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      -1, -1, -1,
-      /*0xff56*/ 1122,
-      -1, -1,
-      /*0xa683*/ 1021,
       -1, -1, -1, -1, -1, -1,
-      -1,
-      /*0x16e6a*/ 1296,
-      -1, -1, -1,
-      /*0x00fe*/ 54,
-      -1, -1,
-      /*0x2d0d*/ 970,
       -1, -1, -1, -1, -1, -1,
       -1,
-      /*0x2d09*/ 966,
-      -1, -1, -1, -1,
-      /*0x00f6*/ 47,
+      /*0x1fb0*/ 798,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1, -1, -1,
       -1, -1, -1,
-      /*0x00f4*/ 45,
-      -1, -1, -1, -1,
-      /*0xa699*/ 1032,
+      /*0xff48*/ 1116,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      /*0x2d1f*/ 988,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1,
-      /*0x16e64*/ 1290,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      /*0x16e62*/ 1288,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      -1,
-      /*0xa79f*/ 1087,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1,
+      /*0xff46*/ 1114,
+      -1, -1, -1,
+      /*0xa695*/ 1031,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1, -1, -1,
       -1, -1,
-      /*0xa695*/ 1030,
+      /*0xa693*/ 1030,
       -1, -1, -1, -1, -1, -1,
-      /*0x16e60*/ 1286,
       -1, -1, -1, -1, -1, -1,
-      -1,
-      /*0x16e78*/ 1310,
+      /*0xff44*/ 1112,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1,
+      /*0xa687*/ 1024,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      -1, -1, -1,
-      /*0xff5a*/ 1126,
+      -1, -1, -1, -1, -1,
+      /*0x2d1f*/ 989,
       -1, -1, -1, -1, -1, -1,
+      -1,
+      /*0xa697*/ 1032,
       -1, -1, -1, -1, -1, -1,
-      -1, -1, -1,
-      /*0xa687*/ 1023,
-      /*0x16e7e*/ 1316,
-      -1, -1,
-      /*0xff4c*/ 1112,
       -1, -1, -1, -1, -1, -1,
-      /*0xa693*/ 1029,
-      -1, -1,
-      /*0xff58*/ 1124,
-      -1, -1,
-      /*0x16e76*/ 1308,
-      -1, -1, -1,
-      /*0x16e74*/ 1306,
+      -1, -1, -1, -1, -1,
+      /*0xff56*/ 1130,
+      -1, -1, -1, -1, -1, -1,
+      -1, -1, -1, -1,
+      /*0xff5a*/ 1134,
       -1, -1, -1,
-      /*0xff54*/ 1120,
+      /*0x2d0d*/ 971,
       -1, -1, -1, -1, -1, -1,
-      /*0xff52*/ 1118,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      /*0xff58*/ 1132,
+      -1, -1, -1, -1, -1, -1,
+      -1,
+      /*0xff4a*/ 1118,
+      -1, -1, -1, -1, -1, -1,
+      -1,
+      /*0xff54*/ 1128,
       -1, -1, -1, -1, -1, -1,
-      -1, -1, -1,
-      /*0xff48*/ 1108,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1,
-      /*0x1fe0*/ 802,
-      /*0x0289*/ 229,
+      /*0xff52*/ 1126,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1,
-      /*0xa697*/ 1031,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1,
-      /*0xff4a*/ 1110,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
@@ -6952,24 +7157,20 @@ onigenc_unicode_CaseUnfold_11_lookup(const OnigCodePoint code)
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
+      /*0xff4c*/ 1120,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1,
-      /*0xa68d*/ 1026,
       -1, -1, -1, -1, -1, -1,
-      -1,
-      /*0xa689*/ 1024,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1,
-      -1,
-      /*0x1fb0*/ 798
+      /*0xa68d*/ 1027
     };
 
   if (code <= MAX_CODE_VALUE && code >= MIN_CODE_VALUE)
diff --git a/lib/onigmo/enc/unicode/name2ctype.h b/lib/onigmo/enc/unicode/name2ctype.h
index 39405797361..3703b5a61bd 100644
--- a/lib/onigmo/enc/unicode/name2ctype.h
+++ b/lib/onigmo/enc/unicode/name2ctype.h
@@ -43,7 +43,7 @@ static const OnigCodePoint CR_NEWLINE[] = {
 
 /* 'Alpha': [[:Alpha:]] */
 static const OnigCodePoint CR_Alpha[] = {
-	679,
+	732,
 	0x0041, 0x005a,
 	0x0061, 0x007a,
 	0x00aa, 0x00aa,
@@ -96,8 +96,9 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x081a, 0x082c,
 	0x0840, 0x0858,
 	0x0860, 0x086a,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
+	0x0870, 0x0887,
+	0x0889, 0x088e,
+	0x08a0, 0x08c9,
 	0x08d4, 0x08df,
 	0x08e3, 0x08e9,
 	0x08f0, 0x093b,
@@ -177,8 +178,7 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x0bca, 0x0bcc,
 	0x0bd0, 0x0bd0,
 	0x0bd7, 0x0bd7,
-	0x0c00, 0x0c03,
-	0x0c05, 0x0c0c,
+	0x0c00, 0x0c0c,
 	0x0c0e, 0x0c10,
 	0x0c12, 0x0c28,
 	0x0c2a, 0x0c39,
@@ -187,6 +187,7 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x0c4a, 0x0c4c,
 	0x0c55, 0x0c56,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c63,
 	0x0c80, 0x0c83,
 	0x0c85, 0x0c8c,
@@ -198,11 +199,10 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x0cc6, 0x0cc8,
 	0x0cca, 0x0ccc,
 	0x0cd5, 0x0cd6,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce3,
-	0x0cf1, 0x0cf2,
-	0x0d00, 0x0d03,
-	0x0d05, 0x0d0c,
+	0x0cf1, 0x0cf3,
+	0x0d00, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d3a,
 	0x0d3d, 0x0d44,
@@ -212,7 +212,7 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x0d54, 0x0d57,
 	0x0d5f, 0x0d63,
 	0x0d7a, 0x0d7f,
-	0x0d82, 0x0d83,
+	0x0d81, 0x0d83,
 	0x0d85, 0x0d96,
 	0x0d9a, 0x0db1,
 	0x0db3, 0x0dbb,
@@ -239,7 +239,7 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x0f00, 0x0f00,
 	0x0f40, 0x0f47,
 	0x0f49, 0x0f6c,
-	0x0f71, 0x0f81,
+	0x0f71, 0x0f83,
 	0x0f88, 0x0f97,
 	0x0f99, 0x0fbc,
 	0x1000, 0x1036,
@@ -275,9 +275,8 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x1681, 0x169a,
 	0x16a0, 0x16ea,
 	0x16ee, 0x16f8,
-	0x1700, 0x170c,
-	0x170e, 0x1713,
-	0x1720, 0x1733,
+	0x1700, 0x1713,
+	0x171f, 0x1733,
 	0x1740, 0x1753,
 	0x1760, 0x176c,
 	0x176e, 0x1770,
@@ -300,9 +299,11 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x1a20, 0x1a5e,
 	0x1a61, 0x1a74,
 	0x1aa7, 0x1aa7,
+	0x1abf, 0x1ac0,
+	0x1acc, 0x1ace,
 	0x1b00, 0x1b33,
 	0x1b35, 0x1b43,
-	0x1b45, 0x1b4b,
+	0x1b45, 0x1b4c,
 	0x1b80, 0x1ba9,
 	0x1bac, 0x1baf,
 	0x1bba, 0x1be5,
@@ -356,9 +357,7 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x214e, 0x214e,
 	0x2160, 0x2188,
 	0x24b6, 0x24e9,
-	0x2c00, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2ce4,
+	0x2c00, 0x2ce4,
 	0x2ceb, 0x2cee,
 	0x2cf2, 0x2cf3,
 	0x2d00, 0x2d25,
@@ -387,11 +386,10 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x30fc, 0x30ff,
 	0x3105, 0x312f,
 	0x3131, 0x318e,
-	0x31a0, 0x31ba,
+	0x31a0, 0x31bf,
 	0x31f0, 0x31ff,
-	0x3400, 0x4db5,
-	0x4e00, 0x9fef,
-	0xa000, 0xa48c,
+	0x3400, 0x4dbf,
+	0x4e00, 0xa48c,
 	0xa4d0, 0xa4fd,
 	0xa500, 0xa60c,
 	0xa610, 0xa61f,
@@ -401,9 +399,11 @@ static const OnigCodePoint CR_Alpha[] = {
 	0xa67f, 0xa6ef,
 	0xa717, 0xa71f,
 	0xa722, 0xa788,
-	0xa78b, 0xa7bf,
-	0xa7c2, 0xa7c6,
-	0xa7f7, 0xa805,
+	0xa78b, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa805,
 	0xa807, 0xa827,
 	0xa840, 0xa873,
 	0xa880, 0xa8c3,
@@ -434,7 +434,7 @@ static const OnigCodePoint CR_Alpha[] = {
 	0xab20, 0xab26,
 	0xab28, 0xab2e,
 	0xab30, 0xab5a,
-	0xab5c, 0xab67,
+	0xab5c, 0xab69,
 	0xab70, 0xabea,
 	0xac00, 0xd7a3,
 	0xd7b0, 0xd7c6,
@@ -485,9 +485,20 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x104d8, 0x104fb,
 	0x10500, 0x10527,
 	0x10530, 0x10563,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10600, 0x10736,
 	0x10740, 0x10755,
 	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10800, 0x10805,
 	0x10808, 0x10808,
 	0x1080a, 0x10835,
@@ -519,25 +530,33 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x10c80, 0x10cb2,
 	0x10cc0, 0x10cf2,
 	0x10d00, 0x10d27,
+	0x10e80, 0x10ea9,
+	0x10eab, 0x10eac,
+	0x10eb0, 0x10eb1,
 	0x10f00, 0x10f1c,
 	0x10f27, 0x10f27,
 	0x10f30, 0x10f45,
+	0x10f70, 0x10f81,
+	0x10fb0, 0x10fc4,
 	0x10fe0, 0x10ff6,
 	0x11000, 0x11045,
-	0x11082, 0x110b8,
+	0x11071, 0x11075,
+	0x11080, 0x110b8,
+	0x110c2, 0x110c2,
 	0x110d0, 0x110e8,
 	0x11100, 0x11132,
-	0x11144, 0x11146,
+	0x11144, 0x11147,
 	0x11150, 0x11172,
 	0x11176, 0x11176,
 	0x11180, 0x111bf,
 	0x111c1, 0x111c4,
+	0x111ce, 0x111cf,
 	0x111da, 0x111da,
 	0x111dc, 0x111dc,
 	0x11200, 0x11211,
 	0x11213, 0x11234,
 	0x11237, 0x11237,
-	0x1123e, 0x1123e,
+	0x1123e, 0x11241,
 	0x11280, 0x11286,
 	0x11288, 0x11288,
 	0x1128a, 0x1128d,
@@ -560,7 +579,7 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x11400, 0x11441,
 	0x11443, 0x11445,
 	0x11447, 0x1144a,
-	0x1145f, 0x1145f,
+	0x1145f, 0x11461,
 	0x11480, 0x114c1,
 	0x114c4, 0x114c5,
 	0x114c7, 0x114c7,
@@ -574,9 +593,17 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x116b8, 0x116b8,
 	0x11700, 0x1171a,
 	0x1171d, 0x1172a,
+	0x11740, 0x11746,
 	0x11800, 0x11838,
 	0x118a0, 0x118df,
-	0x118ff, 0x118ff,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x1193c,
+	0x1193f, 0x11942,
 	0x119a0, 0x119a7,
 	0x119aa, 0x119d7,
 	0x119da, 0x119df,
@@ -586,7 +613,7 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x11a35, 0x11a3e,
 	0x11a50, 0x11a97,
 	0x11a9d, 0x11a9d,
-	0x11ac0, 0x11af8,
+	0x11ab0, 0x11af8,
 	0x11c00, 0x11c08,
 	0x11c0a, 0x11c36,
 	0x11c38, 0x11c3e,
@@ -609,13 +636,20 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x11d93, 0x11d96,
 	0x11d98, 0x11d98,
 	0x11ee0, 0x11ef6,
+	0x11f00, 0x11f10,
+	0x11f12, 0x11f3a,
+	0x11f3e, 0x11f40,
+	0x11fb0, 0x11fb0,
 	0x12000, 0x12399,
 	0x12400, 0x1246e,
 	0x12480, 0x12543,
-	0x13000, 0x1342e,
+	0x12f90, 0x12ff0,
+	0x13000, 0x1342f,
+	0x13441, 0x13446,
 	0x14400, 0x14646,
 	0x16800, 0x16a38,
 	0x16a40, 0x16a5e,
+	0x16a70, 0x16abe,
 	0x16ad0, 0x16aed,
 	0x16b00, 0x16b2f,
 	0x16b40, 0x16b43,
@@ -627,10 +661,17 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x16f8f, 0x16f9f,
 	0x16fe0, 0x16fe1,
 	0x16fe3, 0x16fe3,
+	0x16ff0, 0x16ff1,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
-	0x1b000, 0x1b11e,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 	0x1b170, 0x1b2fb,
 	0x1bc00, 0x1bc6a,
@@ -668,15 +709,25 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x1d78a, 0x1d7a8,
 	0x1d7aa, 0x1d7c2,
 	0x1d7c4, 0x1d7cb,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
 	0x1e000, 0x1e006,
 	0x1e008, 0x1e018,
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e030, 0x1e06d,
+	0x1e08f, 0x1e08f,
 	0x1e100, 0x1e12c,
 	0x1e137, 0x1e13d,
 	0x1e14e, 0x1e14e,
+	0x1e290, 0x1e2ad,
 	0x1e2c0, 0x1e2eb,
+	0x1e4d0, 0x1e4eb,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 	0x1e800, 0x1e8c4,
 	0x1e900, 0x1e943,
 	0x1e947, 0x1e947,
@@ -717,12 +768,14 @@ static const OnigCodePoint CR_Alpha[] = {
 	0x1f130, 0x1f149,
 	0x1f150, 0x1f169,
 	0x1f170, 0x1f189,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 }; /* CR_Alpha */
 
 /* 'Blank': [[:Blank:]] */
@@ -747,7 +800,7 @@ static const OnigCodePoint CR_Cntrl[] = {
 
 /* 'Digit': [[:Digit:]] */
 static const OnigCodePoint CR_Digit[] = {
-	59,
+	64,
 	0x0030, 0x0039,
 	0x0660, 0x0669,
 	0x06f0, 0x06f9,
@@ -798,20 +851,25 @@ static const OnigCodePoint CR_Digit[] = {
 	0x116c0, 0x116c9,
 	0x11730, 0x11739,
 	0x118e0, 0x118e9,
+	0x11950, 0x11959,
 	0x11c50, 0x11c59,
 	0x11d50, 0x11d59,
 	0x11da0, 0x11da9,
+	0x11f50, 0x11f59,
 	0x16a60, 0x16a69,
+	0x16ac0, 0x16ac9,
 	0x16b50, 0x16b59,
 	0x1d7ce, 0x1d7ff,
 	0x1e140, 0x1e149,
 	0x1e2f0, 0x1e2f9,
+	0x1e4f0, 0x1e4f9,
 	0x1e950, 0x1e959,
+	0x1fbf0, 0x1fbf9,
 }; /* CR_Digit */
 
 /* 'Graph': [[:Graph:]] */
 static const OnigCodePoint CR_Graph[] = {
-	671,
+	712,
 	0x0021, 0x007e,
 	0x00a1, 0x0377,
 	0x037a, 0x037f,
@@ -825,8 +883,7 @@ static const OnigCodePoint CR_Graph[] = {
 	0x0591, 0x05c7,
 	0x05d0, 0x05ea,
 	0x05ef, 0x05f4,
-	0x0600, 0x061c,
-	0x061e, 0x070d,
+	0x0600, 0x070d,
 	0x070f, 0x074a,
 	0x074d, 0x07b1,
 	0x07c0, 0x07fa,
@@ -835,9 +892,9 @@ static const OnigCodePoint CR_Graph[] = {
 	0x0840, 0x085b,
 	0x085e, 0x085e,
 	0x0860, 0x086a,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
-	0x08d3, 0x0983,
+	0x0870, 0x088e,
+	0x0890, 0x0891,
+	0x0898, 0x0983,
 	0x0985, 0x098c,
 	0x098f, 0x0990,
 	0x0993, 0x09a8,
@@ -891,7 +948,7 @@ static const OnigCodePoint CR_Graph[] = {
 	0x0b3c, 0x0b44,
 	0x0b47, 0x0b48,
 	0x0b4b, 0x0b4d,
-	0x0b56, 0x0b57,
+	0x0b55, 0x0b57,
 	0x0b5c, 0x0b5d,
 	0x0b5f, 0x0b63,
 	0x0b66, 0x0b77,
@@ -915,11 +972,12 @@ static const OnigCodePoint CR_Graph[] = {
 	0x0c0e, 0x0c10,
 	0x0c12, 0x0c28,
 	0x0c2a, 0x0c39,
-	0x0c3d, 0x0c44,
+	0x0c3c, 0x0c44,
 	0x0c46, 0x0c48,
 	0x0c4a, 0x0c4d,
 	0x0c55, 0x0c56,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c63,
 	0x0c66, 0x0c6f,
 	0x0c77, 0x0c8c,
@@ -931,19 +989,18 @@ static const OnigCodePoint CR_Graph[] = {
 	0x0cc6, 0x0cc8,
 	0x0cca, 0x0ccd,
 	0x0cd5, 0x0cd6,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce3,
 	0x0ce6, 0x0cef,
-	0x0cf1, 0x0cf2,
-	0x0d00, 0x0d03,
-	0x0d05, 0x0d0c,
+	0x0cf1, 0x0cf3,
+	0x0d00, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d44,
 	0x0d46, 0x0d48,
 	0x0d4a, 0x0d4f,
 	0x0d54, 0x0d63,
 	0x0d66, 0x0d7f,
-	0x0d82, 0x0d83,
+	0x0d81, 0x0d83,
 	0x0d85, 0x0d96,
 	0x0d9a, 0x0db1,
 	0x0db3, 0x0dbb,
@@ -965,7 +1022,7 @@ static const OnigCodePoint CR_Graph[] = {
 	0x0ea7, 0x0ebd,
 	0x0ec0, 0x0ec4,
 	0x0ec6, 0x0ec6,
-	0x0ec8, 0x0ecd,
+	0x0ec8, 0x0ece,
 	0x0ed0, 0x0ed9,
 	0x0edc, 0x0edf,
 	0x0f00, 0x0f47,
@@ -1000,9 +1057,8 @@ static const OnigCodePoint CR_Graph[] = {
 	0x1400, 0x167f,
 	0x1681, 0x169c,
 	0x16a0, 0x16f8,
-	0x1700, 0x170c,
-	0x170e, 0x1714,
-	0x1720, 0x1736,
+	0x1700, 0x1715,
+	0x171f, 0x1736,
 	0x1740, 0x1753,
 	0x1760, 0x176c,
 	0x176e, 0x1770,
@@ -1010,8 +1066,7 @@ static const OnigCodePoint CR_Graph[] = {
 	0x1780, 0x17dd,
 	0x17e0, 0x17e9,
 	0x17f0, 0x17f9,
-	0x1800, 0x180e,
-	0x1810, 0x1819,
+	0x1800, 0x1819,
 	0x1820, 0x1878,
 	0x1880, 0x18aa,
 	0x18b0, 0x18f5,
@@ -1030,9 +1085,9 @@ static const OnigCodePoint CR_Graph[] = {
 	0x1a7f, 0x1a89,
 	0x1a90, 0x1a99,
 	0x1aa0, 0x1aad,
-	0x1ab0, 0x1abe,
-	0x1b00, 0x1b4b,
-	0x1b50, 0x1b7c,
+	0x1ab0, 0x1ace,
+	0x1b00, 0x1b4c,
+	0x1b50, 0x1b7e,
 	0x1b80, 0x1bf3,
 	0x1bfc, 0x1c37,
 	0x1c3b, 0x1c49,
@@ -1040,8 +1095,7 @@ static const OnigCodePoint CR_Graph[] = {
 	0x1c90, 0x1cba,
 	0x1cbd, 0x1cc7,
 	0x1cd0, 0x1cfa,
-	0x1d00, 0x1df9,
-	0x1dfb, 0x1f15,
+	0x1d00, 0x1f15,
 	0x1f18, 0x1f1d,
 	0x1f20, 0x1f45,
 	0x1f48, 0x1f4d,
@@ -1064,16 +1118,14 @@ static const OnigCodePoint CR_Graph[] = {
 	0x2066, 0x2071,
 	0x2074, 0x208e,
 	0x2090, 0x209c,
-	0x20a0, 0x20bf,
+	0x20a0, 0x20c0,
 	0x20d0, 0x20f0,
 	0x2100, 0x218b,
 	0x2190, 0x2426,
 	0x2440, 0x244a,
 	0x2460, 0x2b73,
 	0x2b76, 0x2b95,
-	0x2b98, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2cf3,
+	0x2b97, 0x2cf3,
 	0x2cf9, 0x2d25,
 	0x2d27, 0x2d27,
 	0x2d2d, 0x2d2d,
@@ -1088,7 +1140,7 @@ static const OnigCodePoint CR_Graph[] = {
 	0x2dc8, 0x2dce,
 	0x2dd0, 0x2dd6,
 	0x2dd8, 0x2dde,
-	0x2de0, 0x2e4f,
+	0x2de0, 0x2e5d,
 	0x2e80, 0x2e99,
 	0x2e9b, 0x2ef3,
 	0x2f00, 0x2fd5,
@@ -1098,18 +1150,17 @@ static const OnigCodePoint CR_Graph[] = {
 	0x3099, 0x30ff,
 	0x3105, 0x312f,
 	0x3131, 0x318e,
-	0x3190, 0x31ba,
-	0x31c0, 0x31e3,
+	0x3190, 0x31e3,
 	0x31f0, 0x321e,
-	0x3220, 0x4db5,
-	0x4dc0, 0x9fef,
-	0xa000, 0xa48c,
+	0x3220, 0xa48c,
 	0xa490, 0xa4c6,
 	0xa4d0, 0xa62b,
 	0xa640, 0xa6f7,
-	0xa700, 0xa7bf,
-	0xa7c2, 0xa7c6,
-	0xa7f7, 0xa82b,
+	0xa700, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa82c,
 	0xa830, 0xa839,
 	0xa840, 0xa877,
 	0xa880, 0xa8c5,
@@ -1129,7 +1180,7 @@ static const OnigCodePoint CR_Graph[] = {
 	0xab11, 0xab16,
 	0xab20, 0xab26,
 	0xab28, 0xab2e,
-	0xab30, 0xab67,
+	0xab30, 0xab6b,
 	0xab70, 0xabed,
 	0xabf0, 0xabf9,
 	0xac00, 0xd7a3,
@@ -1144,12 +1195,11 @@ static const OnigCodePoint CR_Graph[] = {
 	0xfb3e, 0xfb3e,
 	0xfb40, 0xfb41,
 	0xfb43, 0xfb44,
-	0xfb46, 0xfbc1,
-	0xfbd3, 0xfd3f,
-	0xfd50, 0xfd8f,
+	0xfb46, 0xfbc2,
+	0xfbd3, 0xfd8f,
 	0xfd92, 0xfdc7,
-	0xfdf0, 0xfdfd,
-	0xfe00, 0xfe19,
+	0xfdcf, 0xfdcf,
+	0xfdf0, 0xfe19,
 	0xfe20, 0xfe52,
 	0xfe54, 0xfe66,
 	0xfe68, 0xfe6b,
@@ -1174,7 +1224,7 @@ static const OnigCodePoint CR_Graph[] = {
 	0x10100, 0x10102,
 	0x10107, 0x10133,
 	0x10137, 0x1018e,
-	0x10190, 0x1019b,
+	0x10190, 0x1019c,
 	0x101a0, 0x101a0,
 	0x101d0, 0x101fd,
 	0x10280, 0x1029c,
@@ -1192,10 +1242,20 @@ static const OnigCodePoint CR_Graph[] = {
 	0x104d8, 0x104fb,
 	0x10500, 0x10527,
 	0x10530, 0x10563,
-	0x1056f, 0x1056f,
+	0x1056f, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10600, 0x10736,
 	0x10740, 0x10755,
 	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10800, 0x10805,
 	0x10808, 0x10808,
 	0x1080a, 0x10835,
@@ -1234,23 +1294,27 @@ static const OnigCodePoint CR_Graph[] = {
 	0x10cfa, 0x10d27,
 	0x10d30, 0x10d39,
 	0x10e60, 0x10e7e,
-	0x10f00, 0x10f27,
+	0x10e80, 0x10ea9,
+	0x10eab, 0x10ead,
+	0x10eb0, 0x10eb1,
+	0x10efd, 0x10f27,
 	0x10f30, 0x10f59,
+	0x10f70, 0x10f89,
+	0x10fb0, 0x10fcb,
 	0x10fe0, 0x10ff6,
 	0x11000, 0x1104d,
-	0x11052, 0x1106f,
-	0x1107f, 0x110c1,
+	0x11052, 0x11075,
+	0x1107f, 0x110c2,
 	0x110cd, 0x110cd,
 	0x110d0, 0x110e8,
 	0x110f0, 0x110f9,
 	0x11100, 0x11134,
-	0x11136, 0x11146,
+	0x11136, 0x11147,
 	0x11150, 0x11176,
-	0x11180, 0x111cd,
-	0x111d0, 0x111df,
+	0x11180, 0x111df,
 	0x111e1, 0x111f4,
 	0x11200, 0x11211,
-	0x11213, 0x1123e,
+	0x11213, 0x11241,
 	0x11280, 0x11286,
 	0x11288, 0x11288,
 	0x1128a, 0x1128d,
@@ -1273,9 +1337,8 @@ static const OnigCodePoint CR_Graph[] = {
 	0x1135d, 0x11363,
 	0x11366, 0x1136c,
 	0x11370, 0x11374,
-	0x11400, 0x11459,
-	0x1145b, 0x1145b,
-	0x1145d, 0x1145f,
+	0x11400, 0x1145b,
+	0x1145d, 0x11461,
 	0x11480, 0x114c7,
 	0x114d0, 0x114d9,
 	0x11580, 0x115b5,
@@ -1283,20 +1346,28 @@ static const OnigCodePoint CR_Graph[] = {
 	0x11600, 0x11644,
 	0x11650, 0x11659,
 	0x11660, 0x1166c,
-	0x11680, 0x116b8,
+	0x11680, 0x116b9,
 	0x116c0, 0x116c9,
 	0x11700, 0x1171a,
 	0x1171d, 0x1172b,
-	0x11730, 0x1173f,
+	0x11730, 0x11746,
 	0x11800, 0x1183b,
 	0x118a0, 0x118f2,
-	0x118ff, 0x118ff,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x11946,
+	0x11950, 0x11959,
 	0x119a0, 0x119a7,
 	0x119aa, 0x119d7,
 	0x119da, 0x119e4,
 	0x11a00, 0x11a47,
 	0x11a50, 0x11aa2,
-	0x11ac0, 0x11af8,
+	0x11ab0, 0x11af8,
+	0x11b00, 0x11b09,
 	0x11c00, 0x11c08,
 	0x11c0a, 0x11c36,
 	0x11c38, 0x11c45,
@@ -1318,18 +1389,23 @@ static const OnigCodePoint CR_Graph[] = {
 	0x11d93, 0x11d98,
 	0x11da0, 0x11da9,
 	0x11ee0, 0x11ef8,
+	0x11f00, 0x11f10,
+	0x11f12, 0x11f3a,
+	0x11f3e, 0x11f59,
+	0x11fb0, 0x11fb0,
 	0x11fc0, 0x11ff1,
 	0x11fff, 0x12399,
 	0x12400, 0x1246e,
 	0x12470, 0x12474,
 	0x12480, 0x12543,
-	0x13000, 0x1342e,
-	0x13430, 0x13438,
+	0x12f90, 0x12ff2,
+	0x13000, 0x13455,
 	0x14400, 0x14646,
 	0x16800, 0x16a38,
 	0x16a40, 0x16a5e,
 	0x16a60, 0x16a69,
-	0x16a6e, 0x16a6f,
+	0x16a6e, 0x16abe,
+	0x16ac0, 0x16ac9,
 	0x16ad0, 0x16aed,
 	0x16af0, 0x16af5,
 	0x16b00, 0x16b45,
@@ -1341,11 +1417,18 @@ static const OnigCodePoint CR_Graph[] = {
 	0x16f00, 0x16f4a,
 	0x16f4f, 0x16f87,
 	0x16f8f, 0x16f9f,
-	0x16fe0, 0x16fe3,
+	0x16fe0, 0x16fe4,
+	0x16ff0, 0x16ff1,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
-	0x1b000, 0x1b11e,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 	0x1b170, 0x1b2fb,
 	0x1bc00, 0x1bc6a,
@@ -1353,10 +1436,14 @@ static const OnigCodePoint CR_Graph[] = {
 	0x1bc80, 0x1bc88,
 	0x1bc90, 0x1bc99,
 	0x1bc9c, 0x1bca3,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
+	0x1cf50, 0x1cfc3,
 	0x1d000, 0x1d0f5,
 	0x1d100, 0x1d126,
-	0x1d129, 0x1d1e8,
+	0x1d129, 0x1d1ea,
 	0x1d200, 0x1d245,
+	0x1d2c0, 0x1d2d3,
 	0x1d2e0, 0x1d2f3,
 	0x1d300, 0x1d356,
 	0x1d360, 0x1d378,
@@ -1383,17 +1470,27 @@ static const OnigCodePoint CR_Graph[] = {
 	0x1d7ce, 0x1da8b,
 	0x1da9b, 0x1da9f,
 	0x1daa1, 0x1daaf,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
 	0x1e000, 0x1e006,
 	0x1e008, 0x1e018,
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e030, 0x1e06d,
+	0x1e08f, 0x1e08f,
 	0x1e100, 0x1e12c,
 	0x1e130, 0x1e13d,
 	0x1e140, 0x1e149,
 	0x1e14e, 0x1e14f,
+	0x1e290, 0x1e2ae,
 	0x1e2c0, 0x1e2f9,
 	0x1e2ff, 0x1e2ff,
+	0x1e4d0, 0x1e4f9,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 	0x1e800, 0x1e8c4,
 	0x1e8c7, 0x1e8d6,
 	0x1e900, 0x1e94b,
@@ -1441,43 +1538,45 @@ static const OnigCodePoint CR_Graph[] = {
 	0x1f0b1, 0x1f0bf,
 	0x1f0c1, 0x1f0cf,
 	0x1f0d1, 0x1f0f5,
-	0x1f100, 0x1f10c,
-	0x1f110, 0x1f16c,
-	0x1f170, 0x1f1ac,
+	0x1f100, 0x1f1ad,
 	0x1f1e6, 0x1f202,
 	0x1f210, 0x1f23b,
 	0x1f240, 0x1f248,
 	0x1f250, 0x1f251,
 	0x1f260, 0x1f265,
-	0x1f300, 0x1f6d5,
-	0x1f6e0, 0x1f6ec,
-	0x1f6f0, 0x1f6fa,
-	0x1f700, 0x1f773,
-	0x1f780, 0x1f7d8,
+	0x1f300, 0x1f6d7,
+	0x1f6dc, 0x1f6ec,
+	0x1f6f0, 0x1f6fc,
+	0x1f700, 0x1f776,
+	0x1f77b, 0x1f7d9,
 	0x1f7e0, 0x1f7eb,
+	0x1f7f0, 0x1f7f0,
 	0x1f800, 0x1f80b,
 	0x1f810, 0x1f847,
 	0x1f850, 0x1f859,
 	0x1f860, 0x1f887,
 	0x1f890, 0x1f8ad,
-	0x1f900, 0x1f90b,
-	0x1f90d, 0x1f971,
-	0x1f973, 0x1f976,
-	0x1f97a, 0x1f9a2,
-	0x1f9a5, 0x1f9aa,
-	0x1f9ae, 0x1f9ca,
-	0x1f9cd, 0x1fa53,
+	0x1f8b0, 0x1f8b1,
+	0x1f900, 0x1fa53,
 	0x1fa60, 0x1fa6d,
-	0x1fa70, 0x1fa73,
-	0x1fa78, 0x1fa7a,
-	0x1fa80, 0x1fa82,
-	0x1fa90, 0x1fa95,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x1fa70, 0x1fa7c,
+	0x1fa80, 0x1fa88,
+	0x1fa90, 0x1fabd,
+	0x1fabf, 0x1fac5,
+	0x1face, 0x1fadb,
+	0x1fae0, 0x1fae8,
+	0x1faf0, 0x1faf8,
+	0x1fb00, 0x1fb92,
+	0x1fb94, 0x1fbca,
+	0x1fbf0, 0x1fbf9,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 	0xe0001, 0xe0001,
 	0xe0020, 0xe007f,
 	0xe0100, 0xe01ef,
@@ -1487,7 +1586,7 @@ static const OnigCodePoint CR_Graph[] = {
 
 /* 'Lower': [[:Lower:]] */
 static const OnigCodePoint CR_Lower[] = {
-	649,
+	671,
 	0x0061, 0x007a,
 	0x00aa, 0x00aa,
 	0x00b5, 0x00b5,
@@ -1764,7 +1863,7 @@ static const OnigCodePoint CR_Lower[] = {
 	0x052f, 0x052f,
 	0x0560, 0x0588,
 	0x10d0, 0x10fa,
-	0x10fd, 0x10ff,
+	0x10fc, 0x10ff,
 	0x13f8, 0x13fd,
 	0x1c80, 0x1c88,
 	0x1d00, 0x1dbf,
@@ -1927,7 +2026,7 @@ static const OnigCodePoint CR_Lower[] = {
 	0x2170, 0x217f,
 	0x2184, 0x2184,
 	0x24d0, 0x24e9,
-	0x2c30, 0x2c5e,
+	0x2c30, 0x2c5f,
 	0x2c61, 0x2c61,
 	0x2c65, 0x2c66,
 	0x2c68, 0x2c68,
@@ -2095,16 +2194,34 @@ static const OnigCodePoint CR_Lower[] = {
 	0xa7bb, 0xa7bb,
 	0xa7bd, 0xa7bd,
 	0xa7bf, 0xa7bf,
+	0xa7c1, 0xa7c1,
 	0xa7c3, 0xa7c3,
+	0xa7c8, 0xa7c8,
+	0xa7ca, 0xa7ca,
+	0xa7d1, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d5,
+	0xa7d7, 0xa7d7,
+	0xa7d9, 0xa7d9,
+	0xa7f2, 0xa7f4,
+	0xa7f6, 0xa7f6,
 	0xa7f8, 0xa7fa,
 	0xab30, 0xab5a,
-	0xab5c, 0xab67,
+	0xab5c, 0xab69,
 	0xab70, 0xabbf,
 	0xfb00, 0xfb06,
 	0xfb13, 0xfb17,
 	0xff41, 0xff5a,
 	0x10428, 0x1044f,
 	0x104d8, 0x104fb,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
+	0x10780, 0x10780,
+	0x10783, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10cc0, 0x10cf2,
 	0x118c0, 0x118df,
 	0x16e60, 0x16e7f,
@@ -2136,12 +2253,16 @@ static const OnigCodePoint CR_Lower[] = {
 	0x1d7aa, 0x1d7c2,
 	0x1d7c4, 0x1d7c9,
 	0x1d7cb, 0x1d7cb,
+	0x1df00, 0x1df09,
+	0x1df0b, 0x1df1e,
+	0x1df25, 0x1df2a,
+	0x1e030, 0x1e06d,
 	0x1e922, 0x1e943,
 }; /* CR_Lower */
 
 /* 'Print': [[:Print:]] */
 static const OnigCodePoint CR_Print[] = {
-	668,
+	709,
 	0x0020, 0x007e,
 	0x00a0, 0x0377,
 	0x037a, 0x037f,
@@ -2155,8 +2276,7 @@ static const OnigCodePoint CR_Print[] = {
 	0x0591, 0x05c7,
 	0x05d0, 0x05ea,
 	0x05ef, 0x05f4,
-	0x0600, 0x061c,
-	0x061e, 0x070d,
+	0x0600, 0x070d,
 	0x070f, 0x074a,
 	0x074d, 0x07b1,
 	0x07c0, 0x07fa,
@@ -2165,9 +2285,9 @@ static const OnigCodePoint CR_Print[] = {
 	0x0840, 0x085b,
 	0x085e, 0x085e,
 	0x0860, 0x086a,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
-	0x08d3, 0x0983,
+	0x0870, 0x088e,
+	0x0890, 0x0891,
+	0x0898, 0x0983,
 	0x0985, 0x098c,
 	0x098f, 0x0990,
 	0x0993, 0x09a8,
@@ -2221,7 +2341,7 @@ static const OnigCodePoint CR_Print[] = {
 	0x0b3c, 0x0b44,
 	0x0b47, 0x0b48,
 	0x0b4b, 0x0b4d,
-	0x0b56, 0x0b57,
+	0x0b55, 0x0b57,
 	0x0b5c, 0x0b5d,
 	0x0b5f, 0x0b63,
 	0x0b66, 0x0b77,
@@ -2245,11 +2365,12 @@ static const OnigCodePoint CR_Print[] = {
 	0x0c0e, 0x0c10,
 	0x0c12, 0x0c28,
 	0x0c2a, 0x0c39,
-	0x0c3d, 0x0c44,
+	0x0c3c, 0x0c44,
 	0x0c46, 0x0c48,
 	0x0c4a, 0x0c4d,
 	0x0c55, 0x0c56,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c63,
 	0x0c66, 0x0c6f,
 	0x0c77, 0x0c8c,
@@ -2261,19 +2382,18 @@ static const OnigCodePoint CR_Print[] = {
 	0x0cc6, 0x0cc8,
 	0x0cca, 0x0ccd,
 	0x0cd5, 0x0cd6,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce3,
 	0x0ce6, 0x0cef,
-	0x0cf1, 0x0cf2,
-	0x0d00, 0x0d03,
-	0x0d05, 0x0d0c,
+	0x0cf1, 0x0cf3,
+	0x0d00, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d44,
 	0x0d46, 0x0d48,
 	0x0d4a, 0x0d4f,
 	0x0d54, 0x0d63,
 	0x0d66, 0x0d7f,
-	0x0d82, 0x0d83,
+	0x0d81, 0x0d83,
 	0x0d85, 0x0d96,
 	0x0d9a, 0x0db1,
 	0x0db3, 0x0dbb,
@@ -2295,7 +2415,7 @@ static const OnigCodePoint CR_Print[] = {
 	0x0ea7, 0x0ebd,
 	0x0ec0, 0x0ec4,
 	0x0ec6, 0x0ec6,
-	0x0ec8, 0x0ecd,
+	0x0ec8, 0x0ece,
 	0x0ed0, 0x0ed9,
 	0x0edc, 0x0edf,
 	0x0f00, 0x0f47,
@@ -2329,9 +2449,8 @@ static const OnigCodePoint CR_Print[] = {
 	0x13f8, 0x13fd,
 	0x1400, 0x169c,
 	0x16a0, 0x16f8,
-	0x1700, 0x170c,
-	0x170e, 0x1714,
-	0x1720, 0x1736,
+	0x1700, 0x1715,
+	0x171f, 0x1736,
 	0x1740, 0x1753,
 	0x1760, 0x176c,
 	0x176e, 0x1770,
@@ -2339,8 +2458,7 @@ static const OnigCodePoint CR_Print[] = {
 	0x1780, 0x17dd,
 	0x17e0, 0x17e9,
 	0x17f0, 0x17f9,
-	0x1800, 0x180e,
-	0x1810, 0x1819,
+	0x1800, 0x1819,
 	0x1820, 0x1878,
 	0x1880, 0x18aa,
 	0x18b0, 0x18f5,
@@ -2359,9 +2477,9 @@ static const OnigCodePoint CR_Print[] = {
 	0x1a7f, 0x1a89,
 	0x1a90, 0x1a99,
 	0x1aa0, 0x1aad,
-	0x1ab0, 0x1abe,
-	0x1b00, 0x1b4b,
-	0x1b50, 0x1b7c,
+	0x1ab0, 0x1ace,
+	0x1b00, 0x1b4c,
+	0x1b50, 0x1b7e,
 	0x1b80, 0x1bf3,
 	0x1bfc, 0x1c37,
 	0x1c3b, 0x1c49,
@@ -2369,8 +2487,7 @@ static const OnigCodePoint CR_Print[] = {
 	0x1c90, 0x1cba,
 	0x1cbd, 0x1cc7,
 	0x1cd0, 0x1cfa,
-	0x1d00, 0x1df9,
-	0x1dfb, 0x1f15,
+	0x1d00, 0x1f15,
 	0x1f18, 0x1f1d,
 	0x1f20, 0x1f45,
 	0x1f48, 0x1f4d,
@@ -2391,16 +2508,14 @@ static const OnigCodePoint CR_Print[] = {
 	0x2066, 0x2071,
 	0x2074, 0x208e,
 	0x2090, 0x209c,
-	0x20a0, 0x20bf,
+	0x20a0, 0x20c0,
 	0x20d0, 0x20f0,
 	0x2100, 0x218b,
 	0x2190, 0x2426,
 	0x2440, 0x244a,
 	0x2460, 0x2b73,
 	0x2b76, 0x2b95,
-	0x2b98, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2cf3,
+	0x2b97, 0x2cf3,
 	0x2cf9, 0x2d25,
 	0x2d27, 0x2d27,
 	0x2d2d, 0x2d2d,
@@ -2415,7 +2530,7 @@ static const OnigCodePoint CR_Print[] = {
 	0x2dc8, 0x2dce,
 	0x2dd0, 0x2dd6,
 	0x2dd8, 0x2dde,
-	0x2de0, 0x2e4f,
+	0x2de0, 0x2e5d,
 	0x2e80, 0x2e99,
 	0x2e9b, 0x2ef3,
 	0x2f00, 0x2fd5,
@@ -2425,18 +2540,17 @@ static const OnigCodePoint CR_Print[] = {
 	0x3099, 0x30ff,
 	0x3105, 0x312f,
 	0x3131, 0x318e,
-	0x3190, 0x31ba,
-	0x31c0, 0x31e3,
+	0x3190, 0x31e3,
 	0x31f0, 0x321e,
-	0x3220, 0x4db5,
-	0x4dc0, 0x9fef,
-	0xa000, 0xa48c,
+	0x3220, 0xa48c,
 	0xa490, 0xa4c6,
 	0xa4d0, 0xa62b,
 	0xa640, 0xa6f7,
-	0xa700, 0xa7bf,
-	0xa7c2, 0xa7c6,
-	0xa7f7, 0xa82b,
+	0xa700, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa82c,
 	0xa830, 0xa839,
 	0xa840, 0xa877,
 	0xa880, 0xa8c5,
@@ -2456,7 +2570,7 @@ static const OnigCodePoint CR_Print[] = {
 	0xab11, 0xab16,
 	0xab20, 0xab26,
 	0xab28, 0xab2e,
-	0xab30, 0xab67,
+	0xab30, 0xab6b,
 	0xab70, 0xabed,
 	0xabf0, 0xabf9,
 	0xac00, 0xd7a3,
@@ -2471,12 +2585,11 @@ static const OnigCodePoint CR_Print[] = {
 	0xfb3e, 0xfb3e,
 	0xfb40, 0xfb41,
 	0xfb43, 0xfb44,
-	0xfb46, 0xfbc1,
-	0xfbd3, 0xfd3f,
-	0xfd50, 0xfd8f,
+	0xfb46, 0xfbc2,
+	0xfbd3, 0xfd8f,
 	0xfd92, 0xfdc7,
-	0xfdf0, 0xfdfd,
-	0xfe00, 0xfe19,
+	0xfdcf, 0xfdcf,
+	0xfdf0, 0xfe19,
 	0xfe20, 0xfe52,
 	0xfe54, 0xfe66,
 	0xfe68, 0xfe6b,
@@ -2501,7 +2614,7 @@ static const OnigCodePoint CR_Print[] = {
 	0x10100, 0x10102,
 	0x10107, 0x10133,
 	0x10137, 0x1018e,
-	0x10190, 0x1019b,
+	0x10190, 0x1019c,
 	0x101a0, 0x101a0,
 	0x101d0, 0x101fd,
 	0x10280, 0x1029c,
@@ -2519,10 +2632,20 @@ static const OnigCodePoint CR_Print[] = {
 	0x104d8, 0x104fb,
 	0x10500, 0x10527,
 	0x10530, 0x10563,
-	0x1056f, 0x1056f,
+	0x1056f, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10600, 0x10736,
 	0x10740, 0x10755,
 	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10800, 0x10805,
 	0x10808, 0x10808,
 	0x1080a, 0x10835,
@@ -2561,23 +2684,27 @@ static const OnigCodePoint CR_Print[] = {
 	0x10cfa, 0x10d27,
 	0x10d30, 0x10d39,
 	0x10e60, 0x10e7e,
-	0x10f00, 0x10f27,
+	0x10e80, 0x10ea9,
+	0x10eab, 0x10ead,
+	0x10eb0, 0x10eb1,
+	0x10efd, 0x10f27,
 	0x10f30, 0x10f59,
+	0x10f70, 0x10f89,
+	0x10fb0, 0x10fcb,
 	0x10fe0, 0x10ff6,
 	0x11000, 0x1104d,
-	0x11052, 0x1106f,
-	0x1107f, 0x110c1,
+	0x11052, 0x11075,
+	0x1107f, 0x110c2,
 	0x110cd, 0x110cd,
 	0x110d0, 0x110e8,
 	0x110f0, 0x110f9,
 	0x11100, 0x11134,
-	0x11136, 0x11146,
+	0x11136, 0x11147,
 	0x11150, 0x11176,
-	0x11180, 0x111cd,
-	0x111d0, 0x111df,
+	0x11180, 0x111df,
 	0x111e1, 0x111f4,
 	0x11200, 0x11211,
-	0x11213, 0x1123e,
+	0x11213, 0x11241,
 	0x11280, 0x11286,
 	0x11288, 0x11288,
 	0x1128a, 0x1128d,
@@ -2600,9 +2727,8 @@ static const OnigCodePoint CR_Print[] = {
 	0x1135d, 0x11363,
 	0x11366, 0x1136c,
 	0x11370, 0x11374,
-	0x11400, 0x11459,
-	0x1145b, 0x1145b,
-	0x1145d, 0x1145f,
+	0x11400, 0x1145b,
+	0x1145d, 0x11461,
 	0x11480, 0x114c7,
 	0x114d0, 0x114d9,
 	0x11580, 0x115b5,
@@ -2610,20 +2736,28 @@ static const OnigCodePoint CR_Print[] = {
 	0x11600, 0x11644,
 	0x11650, 0x11659,
 	0x11660, 0x1166c,
-	0x11680, 0x116b8,
+	0x11680, 0x116b9,
 	0x116c0, 0x116c9,
 	0x11700, 0x1171a,
 	0x1171d, 0x1172b,
-	0x11730, 0x1173f,
+	0x11730, 0x11746,
 	0x11800, 0x1183b,
 	0x118a0, 0x118f2,
-	0x118ff, 0x118ff,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x11946,
+	0x11950, 0x11959,
 	0x119a0, 0x119a7,
 	0x119aa, 0x119d7,
 	0x119da, 0x119e4,
 	0x11a00, 0x11a47,
 	0x11a50, 0x11aa2,
-	0x11ac0, 0x11af8,
+	0x11ab0, 0x11af8,
+	0x11b00, 0x11b09,
 	0x11c00, 0x11c08,
 	0x11c0a, 0x11c36,
 	0x11c38, 0x11c45,
@@ -2645,18 +2779,23 @@ static const OnigCodePoint CR_Print[] = {
 	0x11d93, 0x11d98,
 	0x11da0, 0x11da9,
 	0x11ee0, 0x11ef8,
+	0x11f00, 0x11f10,
+	0x11f12, 0x11f3a,
+	0x11f3e, 0x11f59,
+	0x11fb0, 0x11fb0,
 	0x11fc0, 0x11ff1,
 	0x11fff, 0x12399,
 	0x12400, 0x1246e,
 	0x12470, 0x12474,
 	0x12480, 0x12543,
-	0x13000, 0x1342e,
-	0x13430, 0x13438,
+	0x12f90, 0x12ff2,
+	0x13000, 0x13455,
 	0x14400, 0x14646,
 	0x16800, 0x16a38,
 	0x16a40, 0x16a5e,
 	0x16a60, 0x16a69,
-	0x16a6e, 0x16a6f,
+	0x16a6e, 0x16abe,
+	0x16ac0, 0x16ac9,
 	0x16ad0, 0x16aed,
 	0x16af0, 0x16af5,
 	0x16b00, 0x16b45,
@@ -2668,11 +2807,18 @@ static const OnigCodePoint CR_Print[] = {
 	0x16f00, 0x16f4a,
 	0x16f4f, 0x16f87,
 	0x16f8f, 0x16f9f,
-	0x16fe0, 0x16fe3,
+	0x16fe0, 0x16fe4,
+	0x16ff0, 0x16ff1,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
-	0x1b000, 0x1b11e,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 	0x1b170, 0x1b2fb,
 	0x1bc00, 0x1bc6a,
@@ -2680,10 +2826,14 @@ static const OnigCodePoint CR_Print[] = {
 	0x1bc80, 0x1bc88,
 	0x1bc90, 0x1bc99,
 	0x1bc9c, 0x1bca3,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
+	0x1cf50, 0x1cfc3,
 	0x1d000, 0x1d0f5,
 	0x1d100, 0x1d126,
-	0x1d129, 0x1d1e8,
+	0x1d129, 0x1d1ea,
 	0x1d200, 0x1d245,
+	0x1d2c0, 0x1d2d3,
 	0x1d2e0, 0x1d2f3,
 	0x1d300, 0x1d356,
 	0x1d360, 0x1d378,
@@ -2710,17 +2860,27 @@ static const OnigCodePoint CR_Print[] = {
 	0x1d7ce, 0x1da8b,
 	0x1da9b, 0x1da9f,
 	0x1daa1, 0x1daaf,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
 	0x1e000, 0x1e006,
 	0x1e008, 0x1e018,
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e030, 0x1e06d,
+	0x1e08f, 0x1e08f,
 	0x1e100, 0x1e12c,
 	0x1e130, 0x1e13d,
 	0x1e140, 0x1e149,
 	0x1e14e, 0x1e14f,
+	0x1e290, 0x1e2ae,
 	0x1e2c0, 0x1e2f9,
 	0x1e2ff, 0x1e2ff,
+	0x1e4d0, 0x1e4f9,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 	0x1e800, 0x1e8c4,
 	0x1e8c7, 0x1e8d6,
 	0x1e900, 0x1e94b,
@@ -2768,43 +2928,45 @@ static const OnigCodePoint CR_Print[] = {
 	0x1f0b1, 0x1f0bf,
 	0x1f0c1, 0x1f0cf,
 	0x1f0d1, 0x1f0f5,
-	0x1f100, 0x1f10c,
-	0x1f110, 0x1f16c,
-	0x1f170, 0x1f1ac,
+	0x1f100, 0x1f1ad,
 	0x1f1e6, 0x1f202,
 	0x1f210, 0x1f23b,
 	0x1f240, 0x1f248,
 	0x1f250, 0x1f251,
 	0x1f260, 0x1f265,
-	0x1f300, 0x1f6d5,
-	0x1f6e0, 0x1f6ec,
-	0x1f6f0, 0x1f6fa,
-	0x1f700, 0x1f773,
-	0x1f780, 0x1f7d8,
+	0x1f300, 0x1f6d7,
+	0x1f6dc, 0x1f6ec,
+	0x1f6f0, 0x1f6fc,
+	0x1f700, 0x1f776,
+	0x1f77b, 0x1f7d9,
 	0x1f7e0, 0x1f7eb,
+	0x1f7f0, 0x1f7f0,
 	0x1f800, 0x1f80b,
 	0x1f810, 0x1f847,
 	0x1f850, 0x1f859,
 	0x1f860, 0x1f887,
 	0x1f890, 0x1f8ad,
-	0x1f900, 0x1f90b,
-	0x1f90d, 0x1f971,
-	0x1f973, 0x1f976,
-	0x1f97a, 0x1f9a2,
-	0x1f9a5, 0x1f9aa,
-	0x1f9ae, 0x1f9ca,
-	0x1f9cd, 0x1fa53,
+	0x1f8b0, 0x1f8b1,
+	0x1f900, 0x1fa53,
 	0x1fa60, 0x1fa6d,
-	0x1fa70, 0x1fa73,
-	0x1fa78, 0x1fa7a,
-	0x1fa80, 0x1fa82,
-	0x1fa90, 0x1fa95,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x1fa70, 0x1fa7c,
+	0x1fa80, 0x1fa88,
+	0x1fa90, 0x1fabd,
+	0x1fabf, 0x1fac5,
+	0x1face, 0x1fadb,
+	0x1fae0, 0x1fae8,
+	0x1faf0, 0x1faf8,
+	0x1fb00, 0x1fb92,
+	0x1fb94, 0x1fbca,
+	0x1fbf0, 0x1fbf9,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 	0xe0001, 0xe0001,
 	0xe0020, 0xe007f,
 	0xe0100, 0xe01ef,
@@ -2814,7 +2976,7 @@ static const OnigCodePoint CR_Print[] = {
 
 /* 'XPosixPunct': [[:Punct:]] */
 static const OnigCodePoint CR_XPosixPunct[] = {
-	177,
+	186,
 	0x0021, 0x002f,
 	0x003a, 0x0040,
 	0x005b, 0x0060,
@@ -2837,7 +2999,7 @@ static const OnigCodePoint CR_XPosixPunct[] = {
 	0x0609, 0x060a,
 	0x060c, 0x060d,
 	0x061b, 0x061b,
-	0x061e, 0x061f,
+	0x061d, 0x061f,
 	0x066a, 0x066d,
 	0x06d4, 0x06d4,
 	0x0700, 0x070d,
@@ -2876,6 +3038,7 @@ static const OnigCodePoint CR_XPosixPunct[] = {
 	0x1aa0, 0x1aa6,
 	0x1aa8, 0x1aad,
 	0x1b5a, 0x1b60,
+	0x1b7d, 0x1b7e,
 	0x1bfc, 0x1bff,
 	0x1c3b, 0x1c3f,
 	0x1c7e, 0x1c7f,
@@ -2900,6 +3063,7 @@ static const OnigCodePoint CR_XPosixPunct[] = {
 	0x2d70, 0x2d70,
 	0x2e00, 0x2e2e,
 	0x2e30, 0x2e4f,
+	0x2e52, 0x2e5d,
 	0x3001, 0x3003,
 	0x3008, 0x3011,
 	0x3014, 0x301f,
@@ -2953,7 +3117,9 @@ static const OnigCodePoint CR_XPosixPunct[] = {
 	0x10af0, 0x10af6,
 	0x10b39, 0x10b3f,
 	0x10b99, 0x10b9c,
+	0x10ead, 0x10ead,
 	0x10f55, 0x10f59,
+	0x10f86, 0x10f89,
 	0x11047, 0x1104d,
 	0x110bb, 0x110bc,
 	0x110be, 0x110c1,
@@ -2966,23 +3132,28 @@ static const OnigCodePoint CR_XPosixPunct[] = {
 	0x11238, 0x1123d,
 	0x112a9, 0x112a9,
 	0x1144b, 0x1144f,
-	0x1145b, 0x1145b,
+	0x1145a, 0x1145b,
 	0x1145d, 0x1145d,
 	0x114c6, 0x114c6,
 	0x115c1, 0x115d7,
 	0x11641, 0x11643,
 	0x11660, 0x1166c,
+	0x116b9, 0x116b9,
 	0x1173c, 0x1173e,
 	0x1183b, 0x1183b,
+	0x11944, 0x11946,
 	0x119e2, 0x119e2,
 	0x11a3f, 0x11a46,
 	0x11a9a, 0x11a9c,
 	0x11a9e, 0x11aa2,
+	0x11b00, 0x11b09,
 	0x11c41, 0x11c45,
 	0x11c70, 0x11c71,
 	0x11ef7, 0x11ef8,
+	0x11f43, 0x11f4f,
 	0x11fff, 0x11fff,
 	0x12470, 0x12474,
+	0x12ff1, 0x12ff2,
 	0x16a6e, 0x16a6f,
 	0x16af5, 0x16af5,
 	0x16b37, 0x16b3b,
@@ -3011,7 +3182,7 @@ static const OnigCodePoint CR_Space[] = {
 
 /* 'Upper': [[:Upper:]] */
 static const OnigCodePoint CR_Upper[] = {
-	641,
+	651,
 	0x0041, 0x005a,
 	0x00c0, 0x00d6,
 	0x00d8, 0x00de,
@@ -3445,7 +3616,7 @@ static const OnigCodePoint CR_Upper[] = {
 	0x2160, 0x216f,
 	0x2183, 0x2183,
 	0x24b6, 0x24cf,
-	0x2c00, 0x2c2e,
+	0x2c00, 0x2c2f,
 	0x2c60, 0x2c60,
 	0x2c62, 0x2c64,
 	0x2c67, 0x2c67,
@@ -3610,11 +3781,21 @@ static const OnigCodePoint CR_Upper[] = {
 	0xa7ba, 0xa7ba,
 	0xa7bc, 0xa7bc,
 	0xa7be, 0xa7be,
+	0xa7c0, 0xa7c0,
 	0xa7c2, 0xa7c2,
-	0xa7c4, 0xa7c6,
+	0xa7c4, 0xa7c7,
+	0xa7c9, 0xa7c9,
+	0xa7d0, 0xa7d0,
+	0xa7d6, 0xa7d6,
+	0xa7d8, 0xa7d8,
+	0xa7f5, 0xa7f5,
 	0xff21, 0xff3a,
 	0x10400, 0x10427,
 	0x104b0, 0x104d3,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
 	0x10c80, 0x10cb2,
 	0x118a0, 0x118bf,
 	0x16e40, 0x16e5f,
@@ -3665,7 +3846,7 @@ static const OnigCodePoint CR_XDigit[] = {
 
 /* 'Word': [[:Word:]] */
 static const OnigCodePoint CR_Word[] = {
-	716,
+	770,
 	0x0030, 0x0039,
 	0x0041, 0x005a,
 	0x005f, 0x005f,
@@ -3716,9 +3897,9 @@ static const OnigCodePoint CR_Word[] = {
 	0x0800, 0x082d,
 	0x0840, 0x085b,
 	0x0860, 0x086a,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
-	0x08d3, 0x08e1,
+	0x0870, 0x0887,
+	0x0889, 0x088e,
+	0x0898, 0x08e1,
 	0x08e3, 0x0963,
 	0x0966, 0x096f,
 	0x0971, 0x0983,
@@ -3777,7 +3958,7 @@ static const OnigCodePoint CR_Word[] = {
 	0x0b3c, 0x0b44,
 	0x0b47, 0x0b48,
 	0x0b4b, 0x0b4d,
-	0x0b56, 0x0b57,
+	0x0b55, 0x0b57,
 	0x0b5c, 0x0b5d,
 	0x0b5f, 0x0b63,
 	0x0b66, 0x0b6f,
@@ -3802,11 +3983,12 @@ static const OnigCodePoint CR_Word[] = {
 	0x0c0e, 0x0c10,
 	0x0c12, 0x0c28,
 	0x0c2a, 0x0c39,
-	0x0c3d, 0x0c44,
+	0x0c3c, 0x0c44,
 	0x0c46, 0x0c48,
 	0x0c4a, 0x0c4d,
 	0x0c55, 0x0c56,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c63,
 	0x0c66, 0x0c6f,
 	0x0c80, 0x0c83,
@@ -3819,12 +4001,11 @@ static const OnigCodePoint CR_Word[] = {
 	0x0cc6, 0x0cc8,
 	0x0cca, 0x0ccd,
 	0x0cd5, 0x0cd6,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce3,
 	0x0ce6, 0x0cef,
-	0x0cf1, 0x0cf2,
-	0x0d00, 0x0d03,
-	0x0d05, 0x0d0c,
+	0x0cf1, 0x0cf3,
+	0x0d00, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d44,
 	0x0d46, 0x0d48,
@@ -3833,7 +4014,7 @@ static const OnigCodePoint CR_Word[] = {
 	0x0d5f, 0x0d63,
 	0x0d66, 0x0d6f,
 	0x0d7a, 0x0d7f,
-	0x0d82, 0x0d83,
+	0x0d81, 0x0d83,
 	0x0d85, 0x0d96,
 	0x0d9a, 0x0db1,
 	0x0db3, 0x0dbb,
@@ -3856,7 +4037,7 @@ static const OnigCodePoint CR_Word[] = {
 	0x0ea7, 0x0ebd,
 	0x0ec0, 0x0ec4,
 	0x0ec6, 0x0ec6,
-	0x0ec8, 0x0ecd,
+	0x0ec8, 0x0ece,
 	0x0ed0, 0x0ed9,
 	0x0edc, 0x0edf,
 	0x0f00, 0x0f00,
@@ -3902,9 +4083,8 @@ static const OnigCodePoint CR_Word[] = {
 	0x1681, 0x169a,
 	0x16a0, 0x16ea,
 	0x16ee, 0x16f8,
-	0x1700, 0x170c,
-	0x170e, 0x1714,
-	0x1720, 0x1734,
+	0x1700, 0x1715,
+	0x171f, 0x1734,
 	0x1740, 0x1753,
 	0x1760, 0x176c,
 	0x176e, 0x1770,
@@ -3914,7 +4094,7 @@ static const OnigCodePoint CR_Word[] = {
 	0x17dc, 0x17dd,
 	0x17e0, 0x17e9,
 	0x180b, 0x180d,
-	0x1810, 0x1819,
+	0x180f, 0x1819,
 	0x1820, 0x1878,
 	0x1880, 0x18aa,
 	0x18b0, 0x18f5,
@@ -3932,8 +4112,8 @@ static const OnigCodePoint CR_Word[] = {
 	0x1a7f, 0x1a89,
 	0x1a90, 0x1a99,
 	0x1aa7, 0x1aa7,
-	0x1ab0, 0x1abe,
-	0x1b00, 0x1b4b,
+	0x1ab0, 0x1ace,
+	0x1b00, 0x1b4c,
 	0x1b50, 0x1b59,
 	0x1b6b, 0x1b73,
 	0x1b80, 0x1bf3,
@@ -3945,8 +4125,7 @@ static const OnigCodePoint CR_Word[] = {
 	0x1cbd, 0x1cbf,
 	0x1cd0, 0x1cd2,
 	0x1cd4, 0x1cfa,
-	0x1d00, 0x1df9,
-	0x1dfb, 0x1f15,
+	0x1d00, 0x1f15,
 	0x1f18, 0x1f1d,
 	0x1f20, 0x1f45,
 	0x1f48, 0x1f4d,
@@ -3986,9 +4165,7 @@ static const OnigCodePoint CR_Word[] = {
 	0x214e, 0x214e,
 	0x2160, 0x2188,
 	0x24b6, 0x24e9,
-	0x2c00, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2ce4,
+	0x2c00, 0x2ce4,
 	0x2ceb, 0x2cf3,
 	0x2d00, 0x2d25,
 	0x2d27, 0x2d27,
@@ -4017,11 +4194,10 @@ static const OnigCodePoint CR_Word[] = {
 	0x30fc, 0x30ff,
 	0x3105, 0x312f,
 	0x3131, 0x318e,
-	0x31a0, 0x31ba,
+	0x31a0, 0x31bf,
 	0x31f0, 0x31ff,
-	0x3400, 0x4db5,
-	0x4e00, 0x9fef,
-	0xa000, 0xa48c,
+	0x3400, 0x4dbf,
+	0x4e00, 0xa48c,
 	0xa4d0, 0xa4fd,
 	0xa500, 0xa60c,
 	0xa610, 0xa62b,
@@ -4030,9 +4206,12 @@ static const OnigCodePoint CR_Word[] = {
 	0xa67f, 0xa6f1,
 	0xa717, 0xa71f,
 	0xa722, 0xa788,
-	0xa78b, 0xa7bf,
-	0xa7c2, 0xa7c6,
-	0xa7f7, 0xa827,
+	0xa78b, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa827,
+	0xa82c, 0xa82c,
 	0xa840, 0xa873,
 	0xa880, 0xa8c5,
 	0xa8d0, 0xa8d9,
@@ -4058,7 +4237,7 @@ static const OnigCodePoint CR_Word[] = {
 	0xab20, 0xab26,
 	0xab28, 0xab2e,
 	0xab30, 0xab5a,
-	0xab5c, 0xab67,
+	0xab5c, 0xab69,
 	0xab70, 0xabea,
 	0xabec, 0xabed,
 	0xabf0, 0xabf9,
@@ -4120,9 +4299,20 @@ static const OnigCodePoint CR_Word[] = {
 	0x104d8, 0x104fb,
 	0x10500, 0x10527,
 	0x10530, 0x10563,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10600, 0x10736,
 	0x10740, 0x10755,
 	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10800, 0x10805,
 	0x10808, 0x10808,
 	0x1080a, 0x10835,
@@ -4157,27 +4347,33 @@ static const OnigCodePoint CR_Word[] = {
 	0x10cc0, 0x10cf2,
 	0x10d00, 0x10d27,
 	0x10d30, 0x10d39,
-	0x10f00, 0x10f1c,
+	0x10e80, 0x10ea9,
+	0x10eab, 0x10eac,
+	0x10eb0, 0x10eb1,
+	0x10efd, 0x10f1c,
 	0x10f27, 0x10f27,
 	0x10f30, 0x10f50,
+	0x10f70, 0x10f85,
+	0x10fb0, 0x10fc4,
 	0x10fe0, 0x10ff6,
 	0x11000, 0x11046,
-	0x11066, 0x1106f,
+	0x11066, 0x11075,
 	0x1107f, 0x110ba,
+	0x110c2, 0x110c2,
 	0x110d0, 0x110e8,
 	0x110f0, 0x110f9,
 	0x11100, 0x11134,
 	0x11136, 0x1113f,
-	0x11144, 0x11146,
+	0x11144, 0x11147,
 	0x11150, 0x11173,
 	0x11176, 0x11176,
 	0x11180, 0x111c4,
 	0x111c9, 0x111cc,
-	0x111d0, 0x111da,
+	0x111ce, 0x111da,
 	0x111dc, 0x111dc,
 	0x11200, 0x11211,
 	0x11213, 0x11237,
-	0x1123e, 0x1123e,
+	0x1123e, 0x11241,
 	0x11280, 0x11286,
 	0x11288, 0x11288,
 	0x1128a, 0x1128d,
@@ -4202,7 +4398,7 @@ static const OnigCodePoint CR_Word[] = {
 	0x11370, 0x11374,
 	0x11400, 0x1144a,
 	0x11450, 0x11459,
-	0x1145e, 0x1145f,
+	0x1145e, 0x11461,
 	0x11480, 0x114c5,
 	0x114c7, 0x114c7,
 	0x114d0, 0x114d9,
@@ -4217,9 +4413,17 @@ static const OnigCodePoint CR_Word[] = {
 	0x11700, 0x1171a,
 	0x1171d, 0x1172b,
 	0x11730, 0x11739,
+	0x11740, 0x11746,
 	0x11800, 0x1183a,
 	0x118a0, 0x118e9,
-	0x118ff, 0x118ff,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x11943,
+	0x11950, 0x11959,
 	0x119a0, 0x119a7,
 	0x119aa, 0x119d7,
 	0x119da, 0x119e1,
@@ -4228,7 +4432,7 @@ static const OnigCodePoint CR_Word[] = {
 	0x11a47, 0x11a47,
 	0x11a50, 0x11a99,
 	0x11a9d, 0x11a9d,
-	0x11ac0, 0x11af8,
+	0x11ab0, 0x11af8,
 	0x11c00, 0x11c08,
 	0x11c0a, 0x11c36,
 	0x11c38, 0x11c40,
@@ -4250,14 +4454,23 @@ static const OnigCodePoint CR_Word[] = {
 	0x11d93, 0x11d98,
 	0x11da0, 0x11da9,
 	0x11ee0, 0x11ef6,
+	0x11f00, 0x11f10,
+	0x11f12, 0x11f3a,
+	0x11f3e, 0x11f42,
+	0x11f50, 0x11f59,
+	0x11fb0, 0x11fb0,
 	0x12000, 0x12399,
 	0x12400, 0x1246e,
 	0x12480, 0x12543,
-	0x13000, 0x1342e,
+	0x12f90, 0x12ff0,
+	0x13000, 0x1342f,
+	0x13440, 0x13455,
 	0x14400, 0x14646,
 	0x16800, 0x16a38,
 	0x16a40, 0x16a5e,
 	0x16a60, 0x16a69,
+	0x16a70, 0x16abe,
+	0x16ac0, 0x16ac9,
 	0x16ad0, 0x16aed,
 	0x16af0, 0x16af4,
 	0x16b00, 0x16b36,
@@ -4270,11 +4483,18 @@ static const OnigCodePoint CR_Word[] = {
 	0x16f4f, 0x16f87,
 	0x16f8f, 0x16f9f,
 	0x16fe0, 0x16fe1,
-	0x16fe3, 0x16fe3,
+	0x16fe3, 0x16fe4,
+	0x16ff0, 0x16ff1,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
-	0x1b000, 0x1b11e,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 	0x1b170, 0x1b2fb,
 	0x1bc00, 0x1bc6a,
@@ -4282,6 +4502,8 @@ static const OnigCodePoint CR_Word[] = {
 	0x1bc80, 0x1bc88,
 	0x1bc90, 0x1bc99,
 	0x1bc9d, 0x1bc9e,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
 	0x1d165, 0x1d169,
 	0x1d16d, 0x1d172,
 	0x1d17b, 0x1d182,
@@ -4325,16 +4547,26 @@ static const OnigCodePoint CR_Word[] = {
 	0x1da84, 0x1da84,
 	0x1da9b, 0x1da9f,
 	0x1daa1, 0x1daaf,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
 	0x1e000, 0x1e006,
 	0x1e008, 0x1e018,
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e030, 0x1e06d,
+	0x1e08f, 0x1e08f,
 	0x1e100, 0x1e12c,
 	0x1e130, 0x1e13d,
 	0x1e140, 0x1e149,
 	0x1e14e, 0x1e14e,
+	0x1e290, 0x1e2ae,
 	0x1e2c0, 0x1e2f9,
+	0x1e4d0, 0x1e4f9,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 	0x1e800, 0x1e8c4,
 	0x1e8d0, 0x1e8d6,
 	0x1e900, 0x1e94b,
@@ -4375,18 +4607,21 @@ static const OnigCodePoint CR_Word[] = {
 	0x1f130, 0x1f149,
 	0x1f150, 0x1f169,
 	0x1f170, 0x1f189,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x1fbf0, 0x1fbf9,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 	0xe0100, 0xe01ef,
 }; /* CR_Word */
 
 /* 'Alnum': [[:Alnum:]] */
 static const OnigCodePoint CR_Alnum[] = {
-	715,
+	772,
 	0x0030, 0x0039,
 	0x0041, 0x005a,
 	0x0061, 0x007a,
@@ -4439,8 +4674,9 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x081a, 0x082c,
 	0x0840, 0x0858,
 	0x0860, 0x086a,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
+	0x0870, 0x0887,
+	0x0889, 0x088e,
+	0x08a0, 0x08c9,
 	0x08d4, 0x08df,
 	0x08e3, 0x08e9,
 	0x08f0, 0x093b,
@@ -4524,8 +4760,7 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x0bd0, 0x0bd0,
 	0x0bd7, 0x0bd7,
 	0x0be6, 0x0bef,
-	0x0c00, 0x0c03,
-	0x0c05, 0x0c0c,
+	0x0c00, 0x0c0c,
 	0x0c0e, 0x0c10,
 	0x0c12, 0x0c28,
 	0x0c2a, 0x0c39,
@@ -4534,6 +4769,7 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x0c4a, 0x0c4c,
 	0x0c55, 0x0c56,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c63,
 	0x0c66, 0x0c6f,
 	0x0c80, 0x0c83,
@@ -4546,12 +4782,11 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x0cc6, 0x0cc8,
 	0x0cca, 0x0ccc,
 	0x0cd5, 0x0cd6,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce3,
 	0x0ce6, 0x0cef,
-	0x0cf1, 0x0cf2,
-	0x0d00, 0x0d03,
-	0x0d05, 0x0d0c,
+	0x0cf1, 0x0cf3,
+	0x0d00, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d3a,
 	0x0d3d, 0x0d44,
@@ -4562,7 +4797,7 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x0d5f, 0x0d63,
 	0x0d66, 0x0d6f,
 	0x0d7a, 0x0d7f,
-	0x0d82, 0x0d83,
+	0x0d81, 0x0d83,
 	0x0d85, 0x0d96,
 	0x0d9a, 0x0db1,
 	0x0db3, 0x0dbb,
@@ -4593,7 +4828,7 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x0f20, 0x0f29,
 	0x0f40, 0x0f47,
 	0x0f49, 0x0f6c,
-	0x0f71, 0x0f81,
+	0x0f71, 0x0f83,
 	0x0f88, 0x0f97,
 	0x0f99, 0x0fbc,
 	0x1000, 0x1036,
@@ -4628,9 +4863,8 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x1681, 0x169a,
 	0x16a0, 0x16ea,
 	0x16ee, 0x16f8,
-	0x1700, 0x170c,
-	0x170e, 0x1713,
-	0x1720, 0x1733,
+	0x1700, 0x1713,
+	0x171f, 0x1733,
 	0x1740, 0x1753,
 	0x1760, 0x176c,
 	0x176e, 0x1770,
@@ -4658,9 +4892,11 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x1a80, 0x1a89,
 	0x1a90, 0x1a99,
 	0x1aa7, 0x1aa7,
+	0x1abf, 0x1ac0,
+	0x1acc, 0x1ace,
 	0x1b00, 0x1b33,
 	0x1b35, 0x1b43,
-	0x1b45, 0x1b4b,
+	0x1b45, 0x1b4c,
 	0x1b50, 0x1b59,
 	0x1b80, 0x1ba9,
 	0x1bac, 0x1be5,
@@ -4714,9 +4950,7 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x214e, 0x214e,
 	0x2160, 0x2188,
 	0x24b6, 0x24e9,
-	0x2c00, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2ce4,
+	0x2c00, 0x2ce4,
 	0x2ceb, 0x2cee,
 	0x2cf2, 0x2cf3,
 	0x2d00, 0x2d25,
@@ -4745,11 +4979,10 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x30fc, 0x30ff,
 	0x3105, 0x312f,
 	0x3131, 0x318e,
-	0x31a0, 0x31ba,
+	0x31a0, 0x31bf,
 	0x31f0, 0x31ff,
-	0x3400, 0x4db5,
-	0x4e00, 0x9fef,
-	0xa000, 0xa48c,
+	0x3400, 0x4dbf,
+	0x4e00, 0xa48c,
 	0xa4d0, 0xa4fd,
 	0xa500, 0xa60c,
 	0xa610, 0xa62b,
@@ -4758,9 +4991,11 @@ static const OnigCodePoint CR_Alnum[] = {
 	0xa67f, 0xa6ef,
 	0xa717, 0xa71f,
 	0xa722, 0xa788,
-	0xa78b, 0xa7bf,
-	0xa7c2, 0xa7c6,
-	0xa7f7, 0xa805,
+	0xa78b, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa805,
 	0xa807, 0xa827,
 	0xa840, 0xa873,
 	0xa880, 0xa8c3,
@@ -4791,7 +5026,7 @@ static const OnigCodePoint CR_Alnum[] = {
 	0xab20, 0xab26,
 	0xab28, 0xab2e,
 	0xab30, 0xab5a,
-	0xab5c, 0xab67,
+	0xab5c, 0xab69,
 	0xab70, 0xabea,
 	0xabf0, 0xabf9,
 	0xac00, 0xd7a3,
@@ -4845,9 +5080,20 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x104d8, 0x104fb,
 	0x10500, 0x10527,
 	0x10530, 0x10563,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10600, 0x10736,
 	0x10740, 0x10755,
 	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10800, 0x10805,
 	0x10808, 0x10808,
 	0x1080a, 0x10835,
@@ -4880,28 +5126,35 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x10cc0, 0x10cf2,
 	0x10d00, 0x10d27,
 	0x10d30, 0x10d39,
+	0x10e80, 0x10ea9,
+	0x10eab, 0x10eac,
+	0x10eb0, 0x10eb1,
 	0x10f00, 0x10f1c,
 	0x10f27, 0x10f27,
 	0x10f30, 0x10f45,
+	0x10f70, 0x10f81,
+	0x10fb0, 0x10fc4,
 	0x10fe0, 0x10ff6,
 	0x11000, 0x11045,
 	0x11066, 0x1106f,
-	0x11082, 0x110b8,
+	0x11071, 0x11075,
+	0x11080, 0x110b8,
+	0x110c2, 0x110c2,
 	0x110d0, 0x110e8,
 	0x110f0, 0x110f9,
 	0x11100, 0x11132,
 	0x11136, 0x1113f,
-	0x11144, 0x11146,
+	0x11144, 0x11147,
 	0x11150, 0x11172,
 	0x11176, 0x11176,
 	0x11180, 0x111bf,
 	0x111c1, 0x111c4,
-	0x111d0, 0x111da,
+	0x111ce, 0x111da,
 	0x111dc, 0x111dc,
 	0x11200, 0x11211,
 	0x11213, 0x11234,
 	0x11237, 0x11237,
-	0x1123e, 0x1123e,
+	0x1123e, 0x11241,
 	0x11280, 0x11286,
 	0x11288, 0x11288,
 	0x1128a, 0x1128d,
@@ -4926,7 +5179,7 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x11443, 0x11445,
 	0x11447, 0x1144a,
 	0x11450, 0x11459,
-	0x1145f, 0x1145f,
+	0x1145f, 0x11461,
 	0x11480, 0x114c1,
 	0x114c4, 0x114c5,
 	0x114c7, 0x114c7,
@@ -4944,9 +5197,18 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x11700, 0x1171a,
 	0x1171d, 0x1172a,
 	0x11730, 0x11739,
+	0x11740, 0x11746,
 	0x11800, 0x11838,
 	0x118a0, 0x118e9,
-	0x118ff, 0x118ff,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x1193c,
+	0x1193f, 0x11942,
+	0x11950, 0x11959,
 	0x119a0, 0x119a7,
 	0x119aa, 0x119d7,
 	0x119da, 0x119df,
@@ -4956,7 +5218,7 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x11a35, 0x11a3e,
 	0x11a50, 0x11a97,
 	0x11a9d, 0x11a9d,
-	0x11ac0, 0x11af8,
+	0x11ab0, 0x11af8,
 	0x11c00, 0x11c08,
 	0x11c0a, 0x11c36,
 	0x11c38, 0x11c3e,
@@ -4982,14 +5244,23 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x11d98, 0x11d98,
 	0x11da0, 0x11da9,
 	0x11ee0, 0x11ef6,
+	0x11f00, 0x11f10,
+	0x11f12, 0x11f3a,
+	0x11f3e, 0x11f40,
+	0x11f50, 0x11f59,
+	0x11fb0, 0x11fb0,
 	0x12000, 0x12399,
 	0x12400, 0x1246e,
 	0x12480, 0x12543,
-	0x13000, 0x1342e,
+	0x12f90, 0x12ff0,
+	0x13000, 0x1342f,
+	0x13441, 0x13446,
 	0x14400, 0x14646,
 	0x16800, 0x16a38,
 	0x16a40, 0x16a5e,
 	0x16a60, 0x16a69,
+	0x16a70, 0x16abe,
+	0x16ac0, 0x16ac9,
 	0x16ad0, 0x16aed,
 	0x16b00, 0x16b2f,
 	0x16b40, 0x16b43,
@@ -5002,10 +5273,17 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x16f8f, 0x16f9f,
 	0x16fe0, 0x16fe1,
 	0x16fe3, 0x16fe3,
+	0x16ff0, 0x16ff1,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
-	0x1b000, 0x1b11e,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 	0x1b170, 0x1b2fb,
 	0x1bc00, 0x1bc6a,
@@ -5044,17 +5322,28 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x1d7aa, 0x1d7c2,
 	0x1d7c4, 0x1d7cb,
 	0x1d7ce, 0x1d7ff,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
 	0x1e000, 0x1e006,
 	0x1e008, 0x1e018,
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e030, 0x1e06d,
+	0x1e08f, 0x1e08f,
 	0x1e100, 0x1e12c,
 	0x1e137, 0x1e13d,
 	0x1e140, 0x1e149,
 	0x1e14e, 0x1e14e,
+	0x1e290, 0x1e2ad,
 	0x1e2c0, 0x1e2eb,
 	0x1e2f0, 0x1e2f9,
+	0x1e4d0, 0x1e4eb,
+	0x1e4f0, 0x1e4f9,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 	0x1e800, 0x1e8c4,
 	0x1e900, 0x1e943,
 	0x1e947, 0x1e947,
@@ -5096,12 +5385,15 @@ static const OnigCodePoint CR_Alnum[] = {
 	0x1f130, 0x1f149,
 	0x1f150, 0x1f169,
 	0x1f170, 0x1f189,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x1fbf0, 0x1fbf9,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 }; /* CR_Alnum */
 
 /* 'ASCII': [[:ASCII:]] */
@@ -5112,7 +5404,7 @@ static const OnigCodePoint CR_ASCII[] = {
 
 /* 'Punct' */
 static const OnigCodePoint CR_Punct[] = {
-	182,
+	191,
 	0x0021, 0x0023,
 	0x0025, 0x002a,
 	0x002c, 0x002f,
@@ -5140,7 +5432,7 @@ static const OnigCodePoint CR_Punct[] = {
 	0x0609, 0x060a,
 	0x060c, 0x060d,
 	0x061b, 0x061b,
-	0x061e, 0x061f,
+	0x061d, 0x061f,
 	0x066a, 0x066d,
 	0x06d4, 0x06d4,
 	0x0700, 0x070d,
@@ -5179,6 +5471,7 @@ static const OnigCodePoint CR_Punct[] = {
 	0x1aa0, 0x1aa6,
 	0x1aa8, 0x1aad,
 	0x1b5a, 0x1b60,
+	0x1b7d, 0x1b7e,
 	0x1bfc, 0x1bff,
 	0x1c3b, 0x1c3f,
 	0x1c7e, 0x1c7f,
@@ -5203,6 +5496,7 @@ static const OnigCodePoint CR_Punct[] = {
 	0x2d70, 0x2d70,
 	0x2e00, 0x2e2e,
 	0x2e30, 0x2e4f,
+	0x2e52, 0x2e5d,
 	0x3001, 0x3003,
 	0x3008, 0x3011,
 	0x3014, 0x301f,
@@ -5256,7 +5550,9 @@ static const OnigCodePoint CR_Punct[] = {
 	0x10af0, 0x10af6,
 	0x10b39, 0x10b3f,
 	0x10b99, 0x10b9c,
+	0x10ead, 0x10ead,
 	0x10f55, 0x10f59,
+	0x10f86, 0x10f89,
 	0x11047, 0x1104d,
 	0x110bb, 0x110bc,
 	0x110be, 0x110c1,
@@ -5269,23 +5565,28 @@ static const OnigCodePoint CR_Punct[] = {
 	0x11238, 0x1123d,
 	0x112a9, 0x112a9,
 	0x1144b, 0x1144f,
-	0x1145b, 0x1145b,
+	0x1145a, 0x1145b,
 	0x1145d, 0x1145d,
 	0x114c6, 0x114c6,
 	0x115c1, 0x115d7,
 	0x11641, 0x11643,
 	0x11660, 0x1166c,
+	0x116b9, 0x116b9,
 	0x1173c, 0x1173e,
 	0x1183b, 0x1183b,
+	0x11944, 0x11946,
 	0x119e2, 0x119e2,
 	0x11a3f, 0x11a46,
 	0x11a9a, 0x11a9c,
 	0x11a9e, 0x11aa2,
+	0x11b00, 0x11b09,
 	0x11c41, 0x11c45,
 	0x11c70, 0x11c71,
 	0x11ef7, 0x11ef8,
+	0x11f43, 0x11f4f,
 	0x11fff, 0x11fff,
 	0x12470, 0x12474,
+	0x12ff1, 0x12ff2,
 	0x16a6e, 0x16a6f,
 	0x16af5, 0x16af5,
 	0x16b37, 0x16b3b,
@@ -5306,7 +5607,7 @@ static const OnigCodePoint CR_Any[] = {
 
 /* 'Assigned': - */
 static const OnigCodePoint CR_Assigned[] = {
-	666,
+	707,
 	0x0000, 0x0377,
 	0x037a, 0x037f,
 	0x0384, 0x038a,
@@ -5319,8 +5620,7 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x0591, 0x05c7,
 	0x05d0, 0x05ea,
 	0x05ef, 0x05f4,
-	0x0600, 0x061c,
-	0x061e, 0x070d,
+	0x0600, 0x070d,
 	0x070f, 0x074a,
 	0x074d, 0x07b1,
 	0x07c0, 0x07fa,
@@ -5329,9 +5629,9 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x0840, 0x085b,
 	0x085e, 0x085e,
 	0x0860, 0x086a,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
-	0x08d3, 0x0983,
+	0x0870, 0x088e,
+	0x0890, 0x0891,
+	0x0898, 0x0983,
 	0x0985, 0x098c,
 	0x098f, 0x0990,
 	0x0993, 0x09a8,
@@ -5385,7 +5685,7 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x0b3c, 0x0b44,
 	0x0b47, 0x0b48,
 	0x0b4b, 0x0b4d,
-	0x0b56, 0x0b57,
+	0x0b55, 0x0b57,
 	0x0b5c, 0x0b5d,
 	0x0b5f, 0x0b63,
 	0x0b66, 0x0b77,
@@ -5409,11 +5709,12 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x0c0e, 0x0c10,
 	0x0c12, 0x0c28,
 	0x0c2a, 0x0c39,
-	0x0c3d, 0x0c44,
+	0x0c3c, 0x0c44,
 	0x0c46, 0x0c48,
 	0x0c4a, 0x0c4d,
 	0x0c55, 0x0c56,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c63,
 	0x0c66, 0x0c6f,
 	0x0c77, 0x0c8c,
@@ -5425,19 +5726,18 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x0cc6, 0x0cc8,
 	0x0cca, 0x0ccd,
 	0x0cd5, 0x0cd6,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce3,
 	0x0ce6, 0x0cef,
-	0x0cf1, 0x0cf2,
-	0x0d00, 0x0d03,
-	0x0d05, 0x0d0c,
+	0x0cf1, 0x0cf3,
+	0x0d00, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d44,
 	0x0d46, 0x0d48,
 	0x0d4a, 0x0d4f,
 	0x0d54, 0x0d63,
 	0x0d66, 0x0d7f,
-	0x0d82, 0x0d83,
+	0x0d81, 0x0d83,
 	0x0d85, 0x0d96,
 	0x0d9a, 0x0db1,
 	0x0db3, 0x0dbb,
@@ -5459,7 +5759,7 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x0ea7, 0x0ebd,
 	0x0ec0, 0x0ec4,
 	0x0ec6, 0x0ec6,
-	0x0ec8, 0x0ecd,
+	0x0ec8, 0x0ece,
 	0x0ed0, 0x0ed9,
 	0x0edc, 0x0edf,
 	0x0f00, 0x0f47,
@@ -5493,9 +5793,8 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x13f8, 0x13fd,
 	0x1400, 0x169c,
 	0x16a0, 0x16f8,
-	0x1700, 0x170c,
-	0x170e, 0x1714,
-	0x1720, 0x1736,
+	0x1700, 0x1715,
+	0x171f, 0x1736,
 	0x1740, 0x1753,
 	0x1760, 0x176c,
 	0x176e, 0x1770,
@@ -5503,8 +5802,7 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x1780, 0x17dd,
 	0x17e0, 0x17e9,
 	0x17f0, 0x17f9,
-	0x1800, 0x180e,
-	0x1810, 0x1819,
+	0x1800, 0x1819,
 	0x1820, 0x1878,
 	0x1880, 0x18aa,
 	0x18b0, 0x18f5,
@@ -5523,9 +5821,9 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x1a7f, 0x1a89,
 	0x1a90, 0x1a99,
 	0x1aa0, 0x1aad,
-	0x1ab0, 0x1abe,
-	0x1b00, 0x1b4b,
-	0x1b50, 0x1b7c,
+	0x1ab0, 0x1ace,
+	0x1b00, 0x1b4c,
+	0x1b50, 0x1b7e,
 	0x1b80, 0x1bf3,
 	0x1bfc, 0x1c37,
 	0x1c3b, 0x1c49,
@@ -5533,8 +5831,7 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x1c90, 0x1cba,
 	0x1cbd, 0x1cc7,
 	0x1cd0, 0x1cfa,
-	0x1d00, 0x1df9,
-	0x1dfb, 0x1f15,
+	0x1d00, 0x1f15,
 	0x1f18, 0x1f1d,
 	0x1f20, 0x1f45,
 	0x1f48, 0x1f4d,
@@ -5554,16 +5851,14 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x2066, 0x2071,
 	0x2074, 0x208e,
 	0x2090, 0x209c,
-	0x20a0, 0x20bf,
+	0x20a0, 0x20c0,
 	0x20d0, 0x20f0,
 	0x2100, 0x218b,
 	0x2190, 0x2426,
 	0x2440, 0x244a,
 	0x2460, 0x2b73,
 	0x2b76, 0x2b95,
-	0x2b98, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2cf3,
+	0x2b97, 0x2cf3,
 	0x2cf9, 0x2d25,
 	0x2d27, 0x2d27,
 	0x2d2d, 0x2d2d,
@@ -5578,7 +5873,7 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x2dc8, 0x2dce,
 	0x2dd0, 0x2dd6,
 	0x2dd8, 0x2dde,
-	0x2de0, 0x2e4f,
+	0x2de0, 0x2e5d,
 	0x2e80, 0x2e99,
 	0x2e9b, 0x2ef3,
 	0x2f00, 0x2fd5,
@@ -5588,18 +5883,17 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x3099, 0x30ff,
 	0x3105, 0x312f,
 	0x3131, 0x318e,
-	0x3190, 0x31ba,
-	0x31c0, 0x31e3,
+	0x3190, 0x31e3,
 	0x31f0, 0x321e,
-	0x3220, 0x4db5,
-	0x4dc0, 0x9fef,
-	0xa000, 0xa48c,
+	0x3220, 0xa48c,
 	0xa490, 0xa4c6,
 	0xa4d0, 0xa62b,
 	0xa640, 0xa6f7,
-	0xa700, 0xa7bf,
-	0xa7c2, 0xa7c6,
-	0xa7f7, 0xa82b,
+	0xa700, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa82c,
 	0xa830, 0xa839,
 	0xa840, 0xa877,
 	0xa880, 0xa8c5,
@@ -5619,7 +5913,7 @@ static const OnigCodePoint CR_Assigned[] = {
 	0xab11, 0xab16,
 	0xab20, 0xab26,
 	0xab28, 0xab2e,
-	0xab30, 0xab67,
+	0xab30, 0xab6b,
 	0xab70, 0xabed,
 	0xabf0, 0xabf9,
 	0xac00, 0xd7a3,
@@ -5634,12 +5928,11 @@ static const OnigCodePoint CR_Assigned[] = {
 	0xfb3e, 0xfb3e,
 	0xfb40, 0xfb41,
 	0xfb43, 0xfb44,
-	0xfb46, 0xfbc1,
-	0xfbd3, 0xfd3f,
-	0xfd50, 0xfd8f,
+	0xfb46, 0xfbc2,
+	0xfbd3, 0xfd8f,
 	0xfd92, 0xfdc7,
-	0xfdf0, 0xfdfd,
-	0xfe00, 0xfe19,
+	0xfdcf, 0xfdcf,
+	0xfdf0, 0xfe19,
 	0xfe20, 0xfe52,
 	0xfe54, 0xfe66,
 	0xfe68, 0xfe6b,
@@ -5664,7 +5957,7 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x10100, 0x10102,
 	0x10107, 0x10133,
 	0x10137, 0x1018e,
-	0x10190, 0x1019b,
+	0x10190, 0x1019c,
 	0x101a0, 0x101a0,
 	0x101d0, 0x101fd,
 	0x10280, 0x1029c,
@@ -5682,10 +5975,20 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x104d8, 0x104fb,
 	0x10500, 0x10527,
 	0x10530, 0x10563,
-	0x1056f, 0x1056f,
+	0x1056f, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10600, 0x10736,
 	0x10740, 0x10755,
 	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10800, 0x10805,
 	0x10808, 0x10808,
 	0x1080a, 0x10835,
@@ -5724,23 +6027,27 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x10cfa, 0x10d27,
 	0x10d30, 0x10d39,
 	0x10e60, 0x10e7e,
-	0x10f00, 0x10f27,
+	0x10e80, 0x10ea9,
+	0x10eab, 0x10ead,
+	0x10eb0, 0x10eb1,
+	0x10efd, 0x10f27,
 	0x10f30, 0x10f59,
+	0x10f70, 0x10f89,
+	0x10fb0, 0x10fcb,
 	0x10fe0, 0x10ff6,
 	0x11000, 0x1104d,
-	0x11052, 0x1106f,
-	0x1107f, 0x110c1,
+	0x11052, 0x11075,
+	0x1107f, 0x110c2,
 	0x110cd, 0x110cd,
 	0x110d0, 0x110e8,
 	0x110f0, 0x110f9,
 	0x11100, 0x11134,
-	0x11136, 0x11146,
+	0x11136, 0x11147,
 	0x11150, 0x11176,
-	0x11180, 0x111cd,
-	0x111d0, 0x111df,
+	0x11180, 0x111df,
 	0x111e1, 0x111f4,
 	0x11200, 0x11211,
-	0x11213, 0x1123e,
+	0x11213, 0x11241,
 	0x11280, 0x11286,
 	0x11288, 0x11288,
 	0x1128a, 0x1128d,
@@ -5763,9 +6070,8 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x1135d, 0x11363,
 	0x11366, 0x1136c,
 	0x11370, 0x11374,
-	0x11400, 0x11459,
-	0x1145b, 0x1145b,
-	0x1145d, 0x1145f,
+	0x11400, 0x1145b,
+	0x1145d, 0x11461,
 	0x11480, 0x114c7,
 	0x114d0, 0x114d9,
 	0x11580, 0x115b5,
@@ -5773,20 +6079,28 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x11600, 0x11644,
 	0x11650, 0x11659,
 	0x11660, 0x1166c,
-	0x11680, 0x116b8,
+	0x11680, 0x116b9,
 	0x116c0, 0x116c9,
 	0x11700, 0x1171a,
 	0x1171d, 0x1172b,
-	0x11730, 0x1173f,
+	0x11730, 0x11746,
 	0x11800, 0x1183b,
 	0x118a0, 0x118f2,
-	0x118ff, 0x118ff,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x11946,
+	0x11950, 0x11959,
 	0x119a0, 0x119a7,
 	0x119aa, 0x119d7,
 	0x119da, 0x119e4,
 	0x11a00, 0x11a47,
 	0x11a50, 0x11aa2,
-	0x11ac0, 0x11af8,
+	0x11ab0, 0x11af8,
+	0x11b00, 0x11b09,
 	0x11c00, 0x11c08,
 	0x11c0a, 0x11c36,
 	0x11c38, 0x11c45,
@@ -5808,18 +6122,23 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x11d93, 0x11d98,
 	0x11da0, 0x11da9,
 	0x11ee0, 0x11ef8,
+	0x11f00, 0x11f10,
+	0x11f12, 0x11f3a,
+	0x11f3e, 0x11f59,
+	0x11fb0, 0x11fb0,
 	0x11fc0, 0x11ff1,
 	0x11fff, 0x12399,
 	0x12400, 0x1246e,
 	0x12470, 0x12474,
 	0x12480, 0x12543,
-	0x13000, 0x1342e,
-	0x13430, 0x13438,
+	0x12f90, 0x12ff2,
+	0x13000, 0x13455,
 	0x14400, 0x14646,
 	0x16800, 0x16a38,
 	0x16a40, 0x16a5e,
 	0x16a60, 0x16a69,
-	0x16a6e, 0x16a6f,
+	0x16a6e, 0x16abe,
+	0x16ac0, 0x16ac9,
 	0x16ad0, 0x16aed,
 	0x16af0, 0x16af5,
 	0x16b00, 0x16b45,
@@ -5831,11 +6150,18 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x16f00, 0x16f4a,
 	0x16f4f, 0x16f87,
 	0x16f8f, 0x16f9f,
-	0x16fe0, 0x16fe3,
+	0x16fe0, 0x16fe4,
+	0x16ff0, 0x16ff1,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
-	0x1b000, 0x1b11e,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 	0x1b170, 0x1b2fb,
 	0x1bc00, 0x1bc6a,
@@ -5843,10 +6169,14 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x1bc80, 0x1bc88,
 	0x1bc90, 0x1bc99,
 	0x1bc9c, 0x1bca3,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
+	0x1cf50, 0x1cfc3,
 	0x1d000, 0x1d0f5,
 	0x1d100, 0x1d126,
-	0x1d129, 0x1d1e8,
+	0x1d129, 0x1d1ea,
 	0x1d200, 0x1d245,
+	0x1d2c0, 0x1d2d3,
 	0x1d2e0, 0x1d2f3,
 	0x1d300, 0x1d356,
 	0x1d360, 0x1d378,
@@ -5873,17 +6203,27 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x1d7ce, 0x1da8b,
 	0x1da9b, 0x1da9f,
 	0x1daa1, 0x1daaf,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
 	0x1e000, 0x1e006,
 	0x1e008, 0x1e018,
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e030, 0x1e06d,
+	0x1e08f, 0x1e08f,
 	0x1e100, 0x1e12c,
 	0x1e130, 0x1e13d,
 	0x1e140, 0x1e149,
 	0x1e14e, 0x1e14f,
+	0x1e290, 0x1e2ae,
 	0x1e2c0, 0x1e2f9,
 	0x1e2ff, 0x1e2ff,
+	0x1e4d0, 0x1e4f9,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 	0x1e800, 0x1e8c4,
 	0x1e8c7, 0x1e8d6,
 	0x1e900, 0x1e94b,
@@ -5931,43 +6271,45 @@ static const OnigCodePoint CR_Assigned[] = {
 	0x1f0b1, 0x1f0bf,
 	0x1f0c1, 0x1f0cf,
 	0x1f0d1, 0x1f0f5,
-	0x1f100, 0x1f10c,
-	0x1f110, 0x1f16c,
-	0x1f170, 0x1f1ac,
+	0x1f100, 0x1f1ad,
 	0x1f1e6, 0x1f202,
 	0x1f210, 0x1f23b,
 	0x1f240, 0x1f248,
 	0x1f250, 0x1f251,
 	0x1f260, 0x1f265,
-	0x1f300, 0x1f6d5,
-	0x1f6e0, 0x1f6ec,
-	0x1f6f0, 0x1f6fa,
-	0x1f700, 0x1f773,
-	0x1f780, 0x1f7d8,
+	0x1f300, 0x1f6d7,
+	0x1f6dc, 0x1f6ec,
+	0x1f6f0, 0x1f6fc,
+	0x1f700, 0x1f776,
+	0x1f77b, 0x1f7d9,
 	0x1f7e0, 0x1f7eb,
+	0x1f7f0, 0x1f7f0,
 	0x1f800, 0x1f80b,
 	0x1f810, 0x1f847,
 	0x1f850, 0x1f859,
 	0x1f860, 0x1f887,
 	0x1f890, 0x1f8ad,
-	0x1f900, 0x1f90b,
-	0x1f90d, 0x1f971,
-	0x1f973, 0x1f976,
-	0x1f97a, 0x1f9a2,
-	0x1f9a5, 0x1f9aa,
-	0x1f9ae, 0x1f9ca,
-	0x1f9cd, 0x1fa53,
+	0x1f8b0, 0x1f8b1,
+	0x1f900, 0x1fa53,
 	0x1fa60, 0x1fa6d,
-	0x1fa70, 0x1fa73,
-	0x1fa78, 0x1fa7a,
-	0x1fa80, 0x1fa82,
-	0x1fa90, 0x1fa95,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x1fa70, 0x1fa7c,
+	0x1fa80, 0x1fa88,
+	0x1fa90, 0x1fabd,
+	0x1fabf, 0x1fac5,
+	0x1face, 0x1fadb,
+	0x1fae0, 0x1fae8,
+	0x1faf0, 0x1faf8,
+	0x1fb00, 0x1fb92,
+	0x1fb94, 0x1fbca,
+	0x1fbf0, 0x1fbf9,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 	0xe0001, 0xe0001,
 	0xe0020, 0xe007f,
 	0xe0100, 0xe01ef,
@@ -5977,7 +6319,7 @@ static const OnigCodePoint CR_Assigned[] = {
 
 /* 'C': Major Category */
 static const OnigCodePoint CR_C[] = {
-	668,
+	712,
 	0x0000, 0x001f,
 	0x007f, 0x009f,
 	0x00ad, 0x00ad,
@@ -5993,7 +6335,7 @@ static const OnigCodePoint CR_C[] = {
 	0x05c8, 0x05cf,
 	0x05eb, 0x05ee,
 	0x05f5, 0x0605,
-	0x061c, 0x061d,
+	0x061c, 0x061c,
 	0x06dd, 0x06dd,
 	0x070e, 0x070f,
 	0x074b, 0x074c,
@@ -6003,9 +6345,8 @@ static const OnigCodePoint CR_C[] = {
 	0x083f, 0x083f,
 	0x085c, 0x085d,
 	0x085f, 0x085f,
-	0x086b, 0x089f,
-	0x08b5, 0x08b5,
-	0x08be, 0x08d2,
+	0x086b, 0x086f,
+	0x088f, 0x0897,
 	0x08e2, 0x08e2,
 	0x0984, 0x0984,
 	0x098d, 0x098e,
@@ -6060,7 +6401,7 @@ static const OnigCodePoint CR_C[] = {
 	0x0b3a, 0x0b3b,
 	0x0b45, 0x0b46,
 	0x0b49, 0x0b4a,
-	0x0b4e, 0x0b55,
+	0x0b4e, 0x0b54,
 	0x0b58, 0x0b5b,
 	0x0b5e, 0x0b5e,
 	0x0b64, 0x0b65,
@@ -6084,12 +6425,13 @@ static const OnigCodePoint CR_C[] = {
 	0x0c0d, 0x0c0d,
 	0x0c11, 0x0c11,
 	0x0c29, 0x0c29,
-	0x0c3a, 0x0c3c,
+	0x0c3a, 0x0c3b,
 	0x0c45, 0x0c45,
 	0x0c49, 0x0c49,
 	0x0c4e, 0x0c54,
 	0x0c57, 0x0c57,
-	0x0c5b, 0x0c5f,
+	0x0c5b, 0x0c5c,
+	0x0c5e, 0x0c5f,
 	0x0c64, 0x0c65,
 	0x0c70, 0x0c76,
 	0x0c8d, 0x0c8d,
@@ -6100,19 +6442,18 @@ static const OnigCodePoint CR_C[] = {
 	0x0cc5, 0x0cc5,
 	0x0cc9, 0x0cc9,
 	0x0cce, 0x0cd4,
-	0x0cd7, 0x0cdd,
+	0x0cd7, 0x0cdc,
 	0x0cdf, 0x0cdf,
 	0x0ce4, 0x0ce5,
 	0x0cf0, 0x0cf0,
-	0x0cf3, 0x0cff,
-	0x0d04, 0x0d04,
+	0x0cf4, 0x0cff,
 	0x0d0d, 0x0d0d,
 	0x0d11, 0x0d11,
 	0x0d45, 0x0d45,
 	0x0d49, 0x0d49,
 	0x0d50, 0x0d53,
 	0x0d64, 0x0d65,
-	0x0d80, 0x0d81,
+	0x0d80, 0x0d80,
 	0x0d84, 0x0d84,
 	0x0d97, 0x0d99,
 	0x0db2, 0x0db2,
@@ -6135,7 +6476,7 @@ static const OnigCodePoint CR_C[] = {
 	0x0ebe, 0x0ebf,
 	0x0ec5, 0x0ec5,
 	0x0ec7, 0x0ec7,
-	0x0ece, 0x0ecf,
+	0x0ecf, 0x0ecf,
 	0x0eda, 0x0edb,
 	0x0ee0, 0x0eff,
 	0x0f48, 0x0f48,
@@ -6169,8 +6510,7 @@ static const OnigCodePoint CR_C[] = {
 	0x13fe, 0x13ff,
 	0x169d, 0x169f,
 	0x16f9, 0x16ff,
-	0x170d, 0x170d,
-	0x1715, 0x171f,
+	0x1716, 0x171e,
 	0x1737, 0x173f,
 	0x1754, 0x175f,
 	0x176d, 0x176d,
@@ -6179,7 +6519,7 @@ static const OnigCodePoint CR_C[] = {
 	0x17de, 0x17df,
 	0x17ea, 0x17ef,
 	0x17fa, 0x17ff,
-	0x180e, 0x180f,
+	0x180e, 0x180e,
 	0x181a, 0x181f,
 	0x1879, 0x187f,
 	0x18ab, 0x18af,
@@ -6199,9 +6539,9 @@ static const OnigCodePoint CR_C[] = {
 	0x1a8a, 0x1a8f,
 	0x1a9a, 0x1a9f,
 	0x1aae, 0x1aaf,
-	0x1abf, 0x1aff,
-	0x1b4c, 0x1b4f,
-	0x1b7d, 0x1b7f,
+	0x1acf, 0x1aff,
+	0x1b4d, 0x1b4f,
+	0x1b7f, 0x1b7f,
 	0x1bf4, 0x1bfb,
 	0x1c38, 0x1c3a,
 	0x1c4a, 0x1c4c,
@@ -6209,7 +6549,6 @@ static const OnigCodePoint CR_C[] = {
 	0x1cbb, 0x1cbc,
 	0x1cc8, 0x1ccf,
 	0x1cfb, 0x1cff,
-	0x1dfa, 0x1dfa,
 	0x1f16, 0x1f17,
 	0x1f1e, 0x1f1f,
 	0x1f46, 0x1f47,
@@ -6232,15 +6571,13 @@ static const OnigCodePoint CR_C[] = {
 	0x2072, 0x2073,
 	0x208f, 0x208f,
 	0x209d, 0x209f,
-	0x20c0, 0x20cf,
+	0x20c1, 0x20cf,
 	0x20f1, 0x20ff,
 	0x218c, 0x218f,
 	0x2427, 0x243f,
 	0x244b, 0x245f,
 	0x2b74, 0x2b75,
-	0x2b96, 0x2b97,
-	0x2c2f, 0x2c2f,
-	0x2c5f, 0x2c5f,
+	0x2b96, 0x2b96,
 	0x2cf4, 0x2cf8,
 	0x2d26, 0x2d26,
 	0x2d28, 0x2d2c,
@@ -6256,7 +6593,7 @@ static const OnigCodePoint CR_C[] = {
 	0x2dcf, 0x2dcf,
 	0x2dd7, 0x2dd7,
 	0x2ddf, 0x2ddf,
-	0x2e50, 0x2e7f,
+	0x2e5e, 0x2e7f,
 	0x2e9a, 0x2e9a,
 	0x2ef4, 0x2eff,
 	0x2fd6, 0x2fef,
@@ -6266,18 +6603,17 @@ static const OnigCodePoint CR_C[] = {
 	0x3100, 0x3104,
 	0x3130, 0x3130,
 	0x318f, 0x318f,
-	0x31bb, 0x31bf,
 	0x31e4, 0x31ef,
 	0x321f, 0x321f,
-	0x4db6, 0x4dbf,
-	0x9ff0, 0x9fff,
 	0xa48d, 0xa48f,
 	0xa4c7, 0xa4cf,
 	0xa62c, 0xa63f,
 	0xa6f8, 0xa6ff,
-	0xa7c0, 0xa7c1,
-	0xa7c7, 0xa7f6,
-	0xa82c, 0xa82f,
+	0xa7cb, 0xa7cf,
+	0xa7d2, 0xa7d2,
+	0xa7d4, 0xa7d4,
+	0xa7da, 0xa7f1,
+	0xa82d, 0xa82f,
 	0xa83a, 0xa83f,
 	0xa878, 0xa87f,
 	0xa8c6, 0xa8cd,
@@ -6297,7 +6633,7 @@ static const OnigCodePoint CR_C[] = {
 	0xab17, 0xab1f,
 	0xab27, 0xab27,
 	0xab2f, 0xab2f,
-	0xab68, 0xab6f,
+	0xab6c, 0xab6f,
 	0xabee, 0xabef,
 	0xabfa, 0xabff,
 	0xd7a4, 0xd7af,
@@ -6312,11 +6648,10 @@ static const OnigCodePoint CR_C[] = {
 	0xfb3f, 0xfb3f,
 	0xfb42, 0xfb42,
 	0xfb45, 0xfb45,
-	0xfbc2, 0xfbd2,
-	0xfd40, 0xfd4f,
+	0xfbc3, 0xfbd2,
 	0xfd90, 0xfd91,
-	0xfdc8, 0xfdef,
-	0xfdfe, 0xfdff,
+	0xfdc8, 0xfdce,
+	0xfdd0, 0xfdef,
 	0xfe1a, 0xfe1f,
 	0xfe53, 0xfe53,
 	0xfe67, 0xfe67,
@@ -6341,7 +6676,7 @@ static const OnigCodePoint CR_C[] = {
 	0x10103, 0x10106,
 	0x10134, 0x10136,
 	0x1018f, 0x1018f,
-	0x1019c, 0x1019f,
+	0x1019d, 0x1019f,
 	0x101a1, 0x101cf,
 	0x101fe, 0x1027f,
 	0x1029d, 0x1029f,
@@ -6359,10 +6694,20 @@ static const OnigCodePoint CR_C[] = {
 	0x104fc, 0x104ff,
 	0x10528, 0x1052f,
 	0x10564, 0x1056e,
-	0x10570, 0x105ff,
+	0x1057b, 0x1057b,
+	0x1058b, 0x1058b,
+	0x10593, 0x10593,
+	0x10596, 0x10596,
+	0x105a2, 0x105a2,
+	0x105b2, 0x105b2,
+	0x105ba, 0x105ba,
+	0x105bd, 0x105ff,
 	0x10737, 0x1073f,
 	0x10756, 0x1075f,
-	0x10768, 0x107ff,
+	0x10768, 0x1077f,
+	0x10786, 0x10786,
+	0x107b1, 0x107b1,
+	0x107bb, 0x107ff,
 	0x10806, 0x10807,
 	0x10809, 0x10809,
 	0x10836, 0x10836,
@@ -6400,24 +6745,28 @@ static const OnigCodePoint CR_C[] = {
 	0x10cf3, 0x10cf9,
 	0x10d28, 0x10d2f,
 	0x10d3a, 0x10e5f,
-	0x10e7f, 0x10eff,
+	0x10e7f, 0x10e7f,
+	0x10eaa, 0x10eaa,
+	0x10eae, 0x10eaf,
+	0x10eb2, 0x10efc,
 	0x10f28, 0x10f2f,
-	0x10f5a, 0x10fdf,
+	0x10f5a, 0x10f6f,
+	0x10f8a, 0x10faf,
+	0x10fcc, 0x10fdf,
 	0x10ff7, 0x10fff,
 	0x1104e, 0x11051,
-	0x11070, 0x1107e,
+	0x11076, 0x1107e,
 	0x110bd, 0x110bd,
-	0x110c2, 0x110cf,
+	0x110c3, 0x110cf,
 	0x110e9, 0x110ef,
 	0x110fa, 0x110ff,
 	0x11135, 0x11135,
-	0x11147, 0x1114f,
+	0x11148, 0x1114f,
 	0x11177, 0x1117f,
-	0x111ce, 0x111cf,
 	0x111e0, 0x111e0,
 	0x111f5, 0x111ff,
 	0x11212, 0x11212,
-	0x1123f, 0x1127f,
+	0x11242, 0x1127f,
 	0x11287, 0x11287,
 	0x11289, 0x11289,
 	0x1128e, 0x1128e,
@@ -6440,9 +6789,8 @@ static const OnigCodePoint CR_C[] = {
 	0x11364, 0x11365,
 	0x1136d, 0x1136f,
 	0x11375, 0x113ff,
-	0x1145a, 0x1145a,
 	0x1145c, 0x1145c,
-	0x11460, 0x1147f,
+	0x11462, 0x1147f,
 	0x114c8, 0x114cf,
 	0x114da, 0x1157f,
 	0x115b6, 0x115b7,
@@ -6450,20 +6798,28 @@ static const OnigCodePoint CR_C[] = {
 	0x11645, 0x1164f,
 	0x1165a, 0x1165f,
 	0x1166d, 0x1167f,
-	0x116b9, 0x116bf,
+	0x116ba, 0x116bf,
 	0x116ca, 0x116ff,
 	0x1171b, 0x1171c,
 	0x1172c, 0x1172f,
-	0x11740, 0x117ff,
+	0x11747, 0x117ff,
 	0x1183c, 0x1189f,
 	0x118f3, 0x118fe,
-	0x11900, 0x1199f,
+	0x11907, 0x11908,
+	0x1190a, 0x1190b,
+	0x11914, 0x11914,
+	0x11917, 0x11917,
+	0x11936, 0x11936,
+	0x11939, 0x1193a,
+	0x11947, 0x1194f,
+	0x1195a, 0x1199f,
 	0x119a8, 0x119a9,
 	0x119d8, 0x119d9,
 	0x119e5, 0x119ff,
 	0x11a48, 0x11a4f,
-	0x11aa3, 0x11abf,
-	0x11af9, 0x11bff,
+	0x11aa3, 0x11aaf,
+	0x11af9, 0x11aff,
+	0x11b0a, 0x11bff,
 	0x11c09, 0x11c09,
 	0x11c37, 0x11c37,
 	0x11c46, 0x11c4f,
@@ -6484,18 +6840,25 @@ static const OnigCodePoint CR_C[] = {
 	0x11d92, 0x11d92,
 	0x11d99, 0x11d9f,
 	0x11daa, 0x11edf,
-	0x11ef9, 0x11fbf,
+	0x11ef9, 0x11eff,
+	0x11f11, 0x11f11,
+	0x11f3b, 0x11f3d,
+	0x11f5a, 0x11faf,
+	0x11fb1, 0x11fbf,
 	0x11ff2, 0x11ffe,
 	0x1239a, 0x123ff,
 	0x1246f, 0x1246f,
 	0x12475, 0x1247f,
-	0x12544, 0x12fff,
-	0x1342f, 0x143ff,
+	0x12544, 0x12f8f,
+	0x12ff3, 0x12fff,
+	0x13430, 0x1343f,
+	0x13456, 0x143ff,
 	0x14647, 0x167ff,
 	0x16a39, 0x16a3f,
 	0x16a5f, 0x16a5f,
 	0x16a6a, 0x16a6d,
-	0x16a70, 0x16acf,
+	0x16abf, 0x16abf,
+	0x16aca, 0x16acf,
 	0x16aee, 0x16aef,
 	0x16af6, 0x16aff,
 	0x16b46, 0x16b4f,
@@ -6507,23 +6870,34 @@ static const OnigCodePoint CR_C[] = {
 	0x16f4b, 0x16f4e,
 	0x16f88, 0x16f8e,
 	0x16fa0, 0x16fdf,
-	0x16fe4, 0x16fff,
+	0x16fe5, 0x16fef,
+	0x16ff2, 0x16fff,
 	0x187f8, 0x187ff,
-	0x18af3, 0x1afff,
-	0x1b11f, 0x1b14f,
-	0x1b153, 0x1b163,
+	0x18cd6, 0x18cff,
+	0x18d09, 0x1afef,
+	0x1aff4, 0x1aff4,
+	0x1affc, 0x1affc,
+	0x1afff, 0x1afff,
+	0x1b123, 0x1b131,
+	0x1b133, 0x1b14f,
+	0x1b153, 0x1b154,
+	0x1b156, 0x1b163,
 	0x1b168, 0x1b16f,
 	0x1b2fc, 0x1bbff,
 	0x1bc6b, 0x1bc6f,
 	0x1bc7d, 0x1bc7f,
 	0x1bc89, 0x1bc8f,
 	0x1bc9a, 0x1bc9b,
-	0x1bca0, 0x1cfff,
+	0x1bca0, 0x1ceff,
+	0x1cf2e, 0x1cf2f,
+	0x1cf47, 0x1cf4f,
+	0x1cfc4, 0x1cfff,
 	0x1d0f6, 0x1d0ff,
 	0x1d127, 0x1d128,
 	0x1d173, 0x1d17a,
-	0x1d1e9, 0x1d1ff,
-	0x1d246, 0x1d2df,
+	0x1d1eb, 0x1d1ff,
+	0x1d246, 0x1d2bf,
+	0x1d2d4, 0x1d2df,
 	0x1d2f4, 0x1d2ff,
 	0x1d357, 0x1d35f,
 	0x1d379, 0x1d3ff,
@@ -6549,18 +6923,28 @@ static const OnigCodePoint CR_C[] = {
 	0x1d7cc, 0x1d7cd,
 	0x1da8c, 0x1da9a,
 	0x1daa0, 0x1daa0,
-	0x1dab0, 0x1dfff,
+	0x1dab0, 0x1deff,
+	0x1df1f, 0x1df24,
+	0x1df2b, 0x1dfff,
 	0x1e007, 0x1e007,
 	0x1e019, 0x1e01a,
 	0x1e022, 0x1e022,
 	0x1e025, 0x1e025,
-	0x1e02b, 0x1e0ff,
+	0x1e02b, 0x1e02f,
+	0x1e06e, 0x1e08e,
+	0x1e090, 0x1e0ff,
 	0x1e12d, 0x1e12f,
 	0x1e13e, 0x1e13f,
 	0x1e14a, 0x1e14d,
-	0x1e150, 0x1e2bf,
+	0x1e150, 0x1e28f,
+	0x1e2af, 0x1e2bf,
 	0x1e2fa, 0x1e2fe,
-	0x1e300, 0x1e7ff,
+	0x1e300, 0x1e4cf,
+	0x1e4fa, 0x1e7df,
+	0x1e7e7, 0x1e7e7,
+	0x1e7ec, 0x1e7ec,
+	0x1e7ef, 0x1e7ef,
+	0x1e7ff, 0x1e7ff,
 	0x1e8c5, 0x1e8c6,
 	0x1e8d7, 0x1e8ff,
 	0x1e94c, 0x1e94f,
@@ -6608,43 +6992,45 @@ static const OnigCodePoint CR_C[] = {
 	0x1f0c0, 0x1f0c0,
 	0x1f0d0, 0x1f0d0,
 	0x1f0f6, 0x1f0ff,
-	0x1f10d, 0x1f10f,
-	0x1f16d, 0x1f16f,
-	0x1f1ad, 0x1f1e5,
+	0x1f1ae, 0x1f1e5,
 	0x1f203, 0x1f20f,
 	0x1f23c, 0x1f23f,
 	0x1f249, 0x1f24f,
 	0x1f252, 0x1f25f,
 	0x1f266, 0x1f2ff,
-	0x1f6d6, 0x1f6df,
+	0x1f6d8, 0x1f6db,
 	0x1f6ed, 0x1f6ef,
-	0x1f6fb, 0x1f6ff,
-	0x1f774, 0x1f77f,
-	0x1f7d9, 0x1f7df,
-	0x1f7ec, 0x1f7ff,
+	0x1f6fd, 0x1f6ff,
+	0x1f777, 0x1f77a,
+	0x1f7da, 0x1f7df,
+	0x1f7ec, 0x1f7ef,
+	0x1f7f1, 0x1f7ff,
 	0x1f80c, 0x1f80f,
 	0x1f848, 0x1f84f,
 	0x1f85a, 0x1f85f,
 	0x1f888, 0x1f88f,
-	0x1f8ae, 0x1f8ff,
-	0x1f90c, 0x1f90c,
-	0x1f972, 0x1f972,
-	0x1f977, 0x1f979,
-	0x1f9a3, 0x1f9a4,
-	0x1f9ab, 0x1f9ad,
-	0x1f9cb, 0x1f9cc,
+	0x1f8ae, 0x1f8af,
+	0x1f8b2, 0x1f8ff,
 	0x1fa54, 0x1fa5f,
 	0x1fa6e, 0x1fa6f,
-	0x1fa74, 0x1fa77,
-	0x1fa7b, 0x1fa7f,
-	0x1fa83, 0x1fa8f,
-	0x1fa96, 0x1ffff,
-	0x2a6d7, 0x2a6ff,
-	0x2b735, 0x2b73f,
+	0x1fa7d, 0x1fa7f,
+	0x1fa89, 0x1fa8f,
+	0x1fabe, 0x1fabe,
+	0x1fac6, 0x1facd,
+	0x1fadc, 0x1fadf,
+	0x1fae9, 0x1faef,
+	0x1faf9, 0x1faff,
+	0x1fb93, 0x1fb93,
+	0x1fbcb, 0x1fbef,
+	0x1fbfa, 0x1ffff,
+	0x2a6e0, 0x2a6ff,
+	0x2b73a, 0x2b73f,
 	0x2b81e, 0x2b81f,
 	0x2cea2, 0x2ceaf,
 	0x2ebe1, 0x2f7ff,
-	0x2fa1e, 0xe00ff,
+	0x2fa1e, 0x2ffff,
+	0x3134b, 0x3134f,
+	0x323b0, 0xe00ff,
 	0xe01f0, 0x10ffff,
 }; /* CR_C */
 
@@ -6653,12 +7039,13 @@ static const OnigCodePoint CR_C[] = {
 
 /* 'Cf': General Category */
 static const OnigCodePoint CR_Cf[] = {
-	20,
+	21,
 	0x00ad, 0x00ad,
 	0x0600, 0x0605,
 	0x061c, 0x061c,
 	0x06dd, 0x06dd,
 	0x070f, 0x070f,
+	0x0890, 0x0891,
 	0x08e2, 0x08e2,
 	0x180e, 0x180e,
 	0x200b, 0x200f,
@@ -6669,7 +7056,7 @@ static const OnigCodePoint CR_Cf[] = {
 	0xfff9, 0xfffb,
 	0x110bd, 0x110bd,
 	0x110cd, 0x110cd,
-	0x13430, 0x13438,
+	0x13430, 0x1343f,
 	0x1bca0, 0x1bca3,
 	0x1d173, 0x1d17a,
 	0xe0001, 0xe0001,
@@ -6678,7 +7065,7 @@ static const OnigCodePoint CR_Cf[] = {
 
 /* 'Cn': General Category */
 static const OnigCodePoint CR_Cn[] = {
-	666,
+	707,
 	0x0378, 0x0379,
 	0x0380, 0x0383,
 	0x038b, 0x038b,
@@ -6691,7 +7078,6 @@ static const OnigCodePoint CR_Cn[] = {
 	0x05c8, 0x05cf,
 	0x05eb, 0x05ee,
 	0x05f5, 0x05ff,
-	0x061d, 0x061d,
 	0x070e, 0x070e,
 	0x074b, 0x074c,
 	0x07b2, 0x07bf,
@@ -6700,9 +7086,9 @@ static const OnigCodePoint CR_Cn[] = {
 	0x083f, 0x083f,
 	0x085c, 0x085d,
 	0x085f, 0x085f,
-	0x086b, 0x089f,
-	0x08b5, 0x08b5,
-	0x08be, 0x08d2,
+	0x086b, 0x086f,
+	0x088f, 0x088f,
+	0x0892, 0x0897,
 	0x0984, 0x0984,
 	0x098d, 0x098e,
 	0x0991, 0x0992,
@@ -6756,7 +7142,7 @@ static const OnigCodePoint CR_Cn[] = {
 	0x0b3a, 0x0b3b,
 	0x0b45, 0x0b46,
 	0x0b49, 0x0b4a,
-	0x0b4e, 0x0b55,
+	0x0b4e, 0x0b54,
 	0x0b58, 0x0b5b,
 	0x0b5e, 0x0b5e,
 	0x0b64, 0x0b65,
@@ -6780,12 +7166,13 @@ static const OnigCodePoint CR_Cn[] = {
 	0x0c0d, 0x0c0d,
 	0x0c11, 0x0c11,
 	0x0c29, 0x0c29,
-	0x0c3a, 0x0c3c,
+	0x0c3a, 0x0c3b,
 	0x0c45, 0x0c45,
 	0x0c49, 0x0c49,
 	0x0c4e, 0x0c54,
 	0x0c57, 0x0c57,
-	0x0c5b, 0x0c5f,
+	0x0c5b, 0x0c5c,
+	0x0c5e, 0x0c5f,
 	0x0c64, 0x0c65,
 	0x0c70, 0x0c76,
 	0x0c8d, 0x0c8d,
@@ -6796,19 +7183,18 @@ static const OnigCodePoint CR_Cn[] = {
 	0x0cc5, 0x0cc5,
 	0x0cc9, 0x0cc9,
 	0x0cce, 0x0cd4,
-	0x0cd7, 0x0cdd,
+	0x0cd7, 0x0cdc,
 	0x0cdf, 0x0cdf,
 	0x0ce4, 0x0ce5,
 	0x0cf0, 0x0cf0,
-	0x0cf3, 0x0cff,
-	0x0d04, 0x0d04,
+	0x0cf4, 0x0cff,
 	0x0d0d, 0x0d0d,
 	0x0d11, 0x0d11,
 	0x0d45, 0x0d45,
 	0x0d49, 0x0d49,
 	0x0d50, 0x0d53,
 	0x0d64, 0x0d65,
-	0x0d80, 0x0d81,
+	0x0d80, 0x0d80,
 	0x0d84, 0x0d84,
 	0x0d97, 0x0d99,
 	0x0db2, 0x0db2,
@@ -6831,7 +7217,7 @@ static const OnigCodePoint CR_Cn[] = {
 	0x0ebe, 0x0ebf,
 	0x0ec5, 0x0ec5,
 	0x0ec7, 0x0ec7,
-	0x0ece, 0x0ecf,
+	0x0ecf, 0x0ecf,
 	0x0eda, 0x0edb,
 	0x0ee0, 0x0eff,
 	0x0f48, 0x0f48,
@@ -6865,8 +7251,7 @@ static const OnigCodePoint CR_Cn[] = {
 	0x13fe, 0x13ff,
 	0x169d, 0x169f,
 	0x16f9, 0x16ff,
-	0x170d, 0x170d,
-	0x1715, 0x171f,
+	0x1716, 0x171e,
 	0x1737, 0x173f,
 	0x1754, 0x175f,
 	0x176d, 0x176d,
@@ -6875,7 +7260,6 @@ static const OnigCodePoint CR_Cn[] = {
 	0x17de, 0x17df,
 	0x17ea, 0x17ef,
 	0x17fa, 0x17ff,
-	0x180f, 0x180f,
 	0x181a, 0x181f,
 	0x1879, 0x187f,
 	0x18ab, 0x18af,
@@ -6895,9 +7279,9 @@ static const OnigCodePoint CR_Cn[] = {
 	0x1a8a, 0x1a8f,
 	0x1a9a, 0x1a9f,
 	0x1aae, 0x1aaf,
-	0x1abf, 0x1aff,
-	0x1b4c, 0x1b4f,
-	0x1b7d, 0x1b7f,
+	0x1acf, 0x1aff,
+	0x1b4d, 0x1b4f,
+	0x1b7f, 0x1b7f,
 	0x1bf4, 0x1bfb,
 	0x1c38, 0x1c3a,
 	0x1c4a, 0x1c4c,
@@ -6905,7 +7289,6 @@ static const OnigCodePoint CR_Cn[] = {
 	0x1cbb, 0x1cbc,
 	0x1cc8, 0x1ccf,
 	0x1cfb, 0x1cff,
-	0x1dfa, 0x1dfa,
 	0x1f16, 0x1f17,
 	0x1f1e, 0x1f1f,
 	0x1f46, 0x1f47,
@@ -6926,15 +7309,13 @@ static const OnigCodePoint CR_Cn[] = {
 	0x2072, 0x2073,
 	0x208f, 0x208f,
 	0x209d, 0x209f,
-	0x20c0, 0x20cf,
+	0x20c1, 0x20cf,
 	0x20f1, 0x20ff,
 	0x218c, 0x218f,
 	0x2427, 0x243f,
 	0x244b, 0x245f,
 	0x2b74, 0x2b75,
-	0x2b96, 0x2b97,
-	0x2c2f, 0x2c2f,
-	0x2c5f, 0x2c5f,
+	0x2b96, 0x2b96,
 	0x2cf4, 0x2cf8,
 	0x2d26, 0x2d26,
 	0x2d28, 0x2d2c,
@@ -6950,7 +7331,7 @@ static const OnigCodePoint CR_Cn[] = {
 	0x2dcf, 0x2dcf,
 	0x2dd7, 0x2dd7,
 	0x2ddf, 0x2ddf,
-	0x2e50, 0x2e7f,
+	0x2e5e, 0x2e7f,
 	0x2e9a, 0x2e9a,
 	0x2ef4, 0x2eff,
 	0x2fd6, 0x2fef,
@@ -6960,18 +7341,17 @@ static const OnigCodePoint CR_Cn[] = {
 	0x3100, 0x3104,
 	0x3130, 0x3130,
 	0x318f, 0x318f,
-	0x31bb, 0x31bf,
 	0x31e4, 0x31ef,
 	0x321f, 0x321f,
-	0x4db6, 0x4dbf,
-	0x9ff0, 0x9fff,
 	0xa48d, 0xa48f,
 	0xa4c7, 0xa4cf,
 	0xa62c, 0xa63f,
 	0xa6f8, 0xa6ff,
-	0xa7c0, 0xa7c1,
-	0xa7c7, 0xa7f6,
-	0xa82c, 0xa82f,
+	0xa7cb, 0xa7cf,
+	0xa7d2, 0xa7d2,
+	0xa7d4, 0xa7d4,
+	0xa7da, 0xa7f1,
+	0xa82d, 0xa82f,
 	0xa83a, 0xa83f,
 	0xa878, 0xa87f,
 	0xa8c6, 0xa8cd,
@@ -6991,7 +7371,7 @@ static const OnigCodePoint CR_Cn[] = {
 	0xab17, 0xab1f,
 	0xab27, 0xab27,
 	0xab2f, 0xab2f,
-	0xab68, 0xab6f,
+	0xab6c, 0xab6f,
 	0xabee, 0xabef,
 	0xabfa, 0xabff,
 	0xd7a4, 0xd7af,
@@ -7006,11 +7386,10 @@ static const OnigCodePoint CR_Cn[] = {
 	0xfb3f, 0xfb3f,
 	0xfb42, 0xfb42,
 	0xfb45, 0xfb45,
-	0xfbc2, 0xfbd2,
-	0xfd40, 0xfd4f,
+	0xfbc3, 0xfbd2,
 	0xfd90, 0xfd91,
-	0xfdc8, 0xfdef,
-	0xfdfe, 0xfdff,
+	0xfdc8, 0xfdce,
+	0xfdd0, 0xfdef,
 	0xfe1a, 0xfe1f,
 	0xfe53, 0xfe53,
 	0xfe67, 0xfe67,
@@ -7036,7 +7415,7 @@ static const OnigCodePoint CR_Cn[] = {
 	0x10103, 0x10106,
 	0x10134, 0x10136,
 	0x1018f, 0x1018f,
-	0x1019c, 0x1019f,
+	0x1019d, 0x1019f,
 	0x101a1, 0x101cf,
 	0x101fe, 0x1027f,
 	0x1029d, 0x1029f,
@@ -7054,10 +7433,20 @@ static const OnigCodePoint CR_Cn[] = {
 	0x104fc, 0x104ff,
 	0x10528, 0x1052f,
 	0x10564, 0x1056e,
-	0x10570, 0x105ff,
+	0x1057b, 0x1057b,
+	0x1058b, 0x1058b,
+	0x10593, 0x10593,
+	0x10596, 0x10596,
+	0x105a2, 0x105a2,
+	0x105b2, 0x105b2,
+	0x105ba, 0x105ba,
+	0x105bd, 0x105ff,
 	0x10737, 0x1073f,
 	0x10756, 0x1075f,
-	0x10768, 0x107ff,
+	0x10768, 0x1077f,
+	0x10786, 0x10786,
+	0x107b1, 0x107b1,
+	0x107bb, 0x107ff,
 	0x10806, 0x10807,
 	0x10809, 0x10809,
 	0x10836, 0x10836,
@@ -7095,24 +7484,28 @@ static const OnigCodePoint CR_Cn[] = {
 	0x10cf3, 0x10cf9,
 	0x10d28, 0x10d2f,
 	0x10d3a, 0x10e5f,
-	0x10e7f, 0x10eff,
+	0x10e7f, 0x10e7f,
+	0x10eaa, 0x10eaa,
+	0x10eae, 0x10eaf,
+	0x10eb2, 0x10efc,
 	0x10f28, 0x10f2f,
-	0x10f5a, 0x10fdf,
+	0x10f5a, 0x10f6f,
+	0x10f8a, 0x10faf,
+	0x10fcc, 0x10fdf,
 	0x10ff7, 0x10fff,
 	0x1104e, 0x11051,
-	0x11070, 0x1107e,
-	0x110c2, 0x110cc,
+	0x11076, 0x1107e,
+	0x110c3, 0x110cc,
 	0x110ce, 0x110cf,
 	0x110e9, 0x110ef,
 	0x110fa, 0x110ff,
 	0x11135, 0x11135,
-	0x11147, 0x1114f,
+	0x11148, 0x1114f,
 	0x11177, 0x1117f,
-	0x111ce, 0x111cf,
 	0x111e0, 0x111e0,
 	0x111f5, 0x111ff,
 	0x11212, 0x11212,
-	0x1123f, 0x1127f,
+	0x11242, 0x1127f,
 	0x11287, 0x11287,
 	0x11289, 0x11289,
 	0x1128e, 0x1128e,
@@ -7135,9 +7528,8 @@ static const OnigCodePoint CR_Cn[] = {
 	0x11364, 0x11365,
 	0x1136d, 0x1136f,
 	0x11375, 0x113ff,
-	0x1145a, 0x1145a,
 	0x1145c, 0x1145c,
-	0x11460, 0x1147f,
+	0x11462, 0x1147f,
 	0x114c8, 0x114cf,
 	0x114da, 0x1157f,
 	0x115b6, 0x115b7,
@@ -7145,20 +7537,28 @@ static const OnigCodePoint CR_Cn[] = {
 	0x11645, 0x1164f,
 	0x1165a, 0x1165f,
 	0x1166d, 0x1167f,
-	0x116b9, 0x116bf,
+	0x116ba, 0x116bf,
 	0x116ca, 0x116ff,
 	0x1171b, 0x1171c,
 	0x1172c, 0x1172f,
-	0x11740, 0x117ff,
+	0x11747, 0x117ff,
 	0x1183c, 0x1189f,
 	0x118f3, 0x118fe,
-	0x11900, 0x1199f,
+	0x11907, 0x11908,
+	0x1190a, 0x1190b,
+	0x11914, 0x11914,
+	0x11917, 0x11917,
+	0x11936, 0x11936,
+	0x11939, 0x1193a,
+	0x11947, 0x1194f,
+	0x1195a, 0x1199f,
 	0x119a8, 0x119a9,
 	0x119d8, 0x119d9,
 	0x119e5, 0x119ff,
 	0x11a48, 0x11a4f,
-	0x11aa3, 0x11abf,
-	0x11af9, 0x11bff,
+	0x11aa3, 0x11aaf,
+	0x11af9, 0x11aff,
+	0x11b0a, 0x11bff,
 	0x11c09, 0x11c09,
 	0x11c37, 0x11c37,
 	0x11c46, 0x11c4f,
@@ -7179,19 +7579,24 @@ static const OnigCodePoint CR_Cn[] = {
 	0x11d92, 0x11d92,
 	0x11d99, 0x11d9f,
 	0x11daa, 0x11edf,
-	0x11ef9, 0x11fbf,
+	0x11ef9, 0x11eff,
+	0x11f11, 0x11f11,
+	0x11f3b, 0x11f3d,
+	0x11f5a, 0x11faf,
+	0x11fb1, 0x11fbf,
 	0x11ff2, 0x11ffe,
 	0x1239a, 0x123ff,
 	0x1246f, 0x1246f,
 	0x12475, 0x1247f,
-	0x12544, 0x12fff,
-	0x1342f, 0x1342f,
-	0x13439, 0x143ff,
+	0x12544, 0x12f8f,
+	0x12ff3, 0x12fff,
+	0x13456, 0x143ff,
 	0x14647, 0x167ff,
 	0x16a39, 0x16a3f,
 	0x16a5f, 0x16a5f,
 	0x16a6a, 0x16a6d,
-	0x16a70, 0x16acf,
+	0x16abf, 0x16abf,
+	0x16aca, 0x16acf,
 	0x16aee, 0x16aef,
 	0x16af6, 0x16aff,
 	0x16b46, 0x16b4f,
@@ -7203,22 +7608,33 @@ static const OnigCodePoint CR_Cn[] = {
 	0x16f4b, 0x16f4e,
 	0x16f88, 0x16f8e,
 	0x16fa0, 0x16fdf,
-	0x16fe4, 0x16fff,
+	0x16fe5, 0x16fef,
+	0x16ff2, 0x16fff,
 	0x187f8, 0x187ff,
-	0x18af3, 0x1afff,
-	0x1b11f, 0x1b14f,
-	0x1b153, 0x1b163,
+	0x18cd6, 0x18cff,
+	0x18d09, 0x1afef,
+	0x1aff4, 0x1aff4,
+	0x1affc, 0x1affc,
+	0x1afff, 0x1afff,
+	0x1b123, 0x1b131,
+	0x1b133, 0x1b14f,
+	0x1b153, 0x1b154,
+	0x1b156, 0x1b163,
 	0x1b168, 0x1b16f,
 	0x1b2fc, 0x1bbff,
 	0x1bc6b, 0x1bc6f,
 	0x1bc7d, 0x1bc7f,
 	0x1bc89, 0x1bc8f,
 	0x1bc9a, 0x1bc9b,
-	0x1bca4, 0x1cfff,
+	0x1bca4, 0x1ceff,
+	0x1cf2e, 0x1cf2f,
+	0x1cf47, 0x1cf4f,
+	0x1cfc4, 0x1cfff,
 	0x1d0f6, 0x1d0ff,
 	0x1d127, 0x1d128,
-	0x1d1e9, 0x1d1ff,
-	0x1d246, 0x1d2df,
+	0x1d1eb, 0x1d1ff,
+	0x1d246, 0x1d2bf,
+	0x1d2d4, 0x1d2df,
 	0x1d2f4, 0x1d2ff,
 	0x1d357, 0x1d35f,
 	0x1d379, 0x1d3ff,
@@ -7244,18 +7660,28 @@ static const OnigCodePoint CR_Cn[] = {
 	0x1d7cc, 0x1d7cd,
 	0x1da8c, 0x1da9a,
 	0x1daa0, 0x1daa0,
-	0x1dab0, 0x1dfff,
+	0x1dab0, 0x1deff,
+	0x1df1f, 0x1df24,
+	0x1df2b, 0x1dfff,
 	0x1e007, 0x1e007,
 	0x1e019, 0x1e01a,
 	0x1e022, 0x1e022,
 	0x1e025, 0x1e025,
-	0x1e02b, 0x1e0ff,
+	0x1e02b, 0x1e02f,
+	0x1e06e, 0x1e08e,
+	0x1e090, 0x1e0ff,
 	0x1e12d, 0x1e12f,
 	0x1e13e, 0x1e13f,
 	0x1e14a, 0x1e14d,
-	0x1e150, 0x1e2bf,
+	0x1e150, 0x1e28f,
+	0x1e2af, 0x1e2bf,
 	0x1e2fa, 0x1e2fe,
-	0x1e300, 0x1e7ff,
+	0x1e300, 0x1e4cf,
+	0x1e4fa, 0x1e7df,
+	0x1e7e7, 0x1e7e7,
+	0x1e7ec, 0x1e7ec,
+	0x1e7ef, 0x1e7ef,
+	0x1e7ff, 0x1e7ff,
 	0x1e8c5, 0x1e8c6,
 	0x1e8d7, 0x1e8ff,
 	0x1e94c, 0x1e94f,
@@ -7303,43 +7729,45 @@ static const OnigCodePoint CR_Cn[] = {
 	0x1f0c0, 0x1f0c0,
 	0x1f0d0, 0x1f0d0,
 	0x1f0f6, 0x1f0ff,
-	0x1f10d, 0x1f10f,
-	0x1f16d, 0x1f16f,
-	0x1f1ad, 0x1f1e5,
+	0x1f1ae, 0x1f1e5,
 	0x1f203, 0x1f20f,
 	0x1f23c, 0x1f23f,
 	0x1f249, 0x1f24f,
 	0x1f252, 0x1f25f,
 	0x1f266, 0x1f2ff,
-	0x1f6d6, 0x1f6df,
+	0x1f6d8, 0x1f6db,
 	0x1f6ed, 0x1f6ef,
-	0x1f6fb, 0x1f6ff,
-	0x1f774, 0x1f77f,
-	0x1f7d9, 0x1f7df,
-	0x1f7ec, 0x1f7ff,
+	0x1f6fd, 0x1f6ff,
+	0x1f777, 0x1f77a,
+	0x1f7da, 0x1f7df,
+	0x1f7ec, 0x1f7ef,
+	0x1f7f1, 0x1f7ff,
 	0x1f80c, 0x1f80f,
 	0x1f848, 0x1f84f,
 	0x1f85a, 0x1f85f,
 	0x1f888, 0x1f88f,
-	0x1f8ae, 0x1f8ff,
-	0x1f90c, 0x1f90c,
-	0x1f972, 0x1f972,
-	0x1f977, 0x1f979,
-	0x1f9a3, 0x1f9a4,
-	0x1f9ab, 0x1f9ad,
-	0x1f9cb, 0x1f9cc,
+	0x1f8ae, 0x1f8af,
+	0x1f8b2, 0x1f8ff,
 	0x1fa54, 0x1fa5f,
 	0x1fa6e, 0x1fa6f,
-	0x1fa74, 0x1fa77,
-	0x1fa7b, 0x1fa7f,
-	0x1fa83, 0x1fa8f,
-	0x1fa96, 0x1ffff,
-	0x2a6d7, 0x2a6ff,
-	0x2b735, 0x2b73f,
+	0x1fa7d, 0x1fa7f,
+	0x1fa89, 0x1fa8f,
+	0x1fabe, 0x1fabe,
+	0x1fac6, 0x1facd,
+	0x1fadc, 0x1fadf,
+	0x1fae9, 0x1faef,
+	0x1faf9, 0x1faff,
+	0x1fb93, 0x1fb93,
+	0x1fbcb, 0x1fbef,
+	0x1fbfa, 0x1ffff,
+	0x2a6e0, 0x2a6ff,
+	0x2b73a, 0x2b73f,
 	0x2b81e, 0x2b81f,
 	0x2cea2, 0x2ceaf,
 	0x2ebe1, 0x2f7ff,
-	0x2fa1e, 0xe0000,
+	0x2fa1e, 0x2ffff,
+	0x3134b, 0x3134f,
+	0x323b0, 0xe0000,
 	0xe0002, 0xe001f,
 	0xe0080, 0xe00ff,
 	0xe01f0, 0xeffff,
@@ -7363,7 +7791,7 @@ static const OnigCodePoint CR_Cs[] = {
 
 /* 'L': Major Category */
 static const OnigCodePoint CR_L[] = {
-	609,
+	659,
 	0x0041, 0x005a,
 	0x0061, 0x007a,
 	0x00aa, 0x00aa,
@@ -7413,8 +7841,9 @@ static const OnigCodePoint CR_L[] = {
 	0x0828, 0x0828,
 	0x0840, 0x0858,
 	0x0860, 0x086a,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
+	0x0870, 0x0887,
+	0x0889, 0x088e,
+	0x08a0, 0x08c9,
 	0x0904, 0x0939,
 	0x093d, 0x093d,
 	0x0950, 0x0950,
@@ -7479,6 +7908,7 @@ static const OnigCodePoint CR_L[] = {
 	0x0c2a, 0x0c39,
 	0x0c3d, 0x0c3d,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c61,
 	0x0c80, 0x0c80,
 	0x0c85, 0x0c8c,
@@ -7487,10 +7917,10 @@ static const OnigCodePoint CR_L[] = {
 	0x0caa, 0x0cb3,
 	0x0cb5, 0x0cb9,
 	0x0cbd, 0x0cbd,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce1,
 	0x0cf1, 0x0cf2,
-	0x0d05, 0x0d0c,
+	0x0d04, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d3a,
 	0x0d3d, 0x0d3d,
@@ -7558,9 +7988,8 @@ static const OnigCodePoint CR_L[] = {
 	0x1681, 0x169a,
 	0x16a0, 0x16ea,
 	0x16f1, 0x16f8,
-	0x1700, 0x170c,
-	0x170e, 0x1711,
-	0x1720, 0x1731,
+	0x1700, 0x1711,
+	0x171f, 0x1731,
 	0x1740, 0x1751,
 	0x1760, 0x176c,
 	0x176e, 0x1770,
@@ -7581,7 +8010,7 @@ static const OnigCodePoint CR_L[] = {
 	0x1a20, 0x1a54,
 	0x1aa7, 0x1aa7,
 	0x1b05, 0x1b33,
-	0x1b45, 0x1b4b,
+	0x1b45, 0x1b4c,
 	0x1b83, 0x1ba0,
 	0x1bae, 0x1baf,
 	0x1bba, 0x1be5,
@@ -7632,9 +8061,7 @@ static const OnigCodePoint CR_L[] = {
 	0x2145, 0x2149,
 	0x214e, 0x214e,
 	0x2183, 0x2184,
-	0x2c00, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2ce4,
+	0x2c00, 0x2ce4,
 	0x2ceb, 0x2cee,
 	0x2cf2, 0x2cf3,
 	0x2d00, 0x2d25,
@@ -7661,11 +8088,10 @@ static const OnigCodePoint CR_L[] = {
 	0x30fc, 0x30ff,
 	0x3105, 0x312f,
 	0x3131, 0x318e,
-	0x31a0, 0x31ba,
+	0x31a0, 0x31bf,
 	0x31f0, 0x31ff,
-	0x3400, 0x4db5,
-	0x4e00, 0x9fef,
-	0xa000, 0xa48c,
+	0x3400, 0x4dbf,
+	0x4e00, 0xa48c,
 	0xa4d0, 0xa4fd,
 	0xa500, 0xa60c,
 	0xa610, 0xa61f,
@@ -7675,9 +8101,11 @@ static const OnigCodePoint CR_L[] = {
 	0xa6a0, 0xa6e5,
 	0xa717, 0xa71f,
 	0xa722, 0xa788,
-	0xa78b, 0xa7bf,
-	0xa7c2, 0xa7c6,
-	0xa7f7, 0xa801,
+	0xa78b, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa801,
 	0xa803, 0xa805,
 	0xa807, 0xa80a,
 	0xa80c, 0xa822,
@@ -7714,7 +8142,7 @@ static const OnigCodePoint CR_L[] = {
 	0xab20, 0xab26,
 	0xab28, 0xab2e,
 	0xab30, 0xab5a,
-	0xab5c, 0xab67,
+	0xab5c, 0xab69,
 	0xab70, 0xabe2,
 	0xac00, 0xd7a3,
 	0xd7b0, 0xd7c6,
@@ -7765,9 +8193,20 @@ static const OnigCodePoint CR_L[] = {
 	0x104d8, 0x104fb,
 	0x10500, 0x10527,
 	0x10530, 0x10563,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10600, 0x10736,
 	0x10740, 0x10755,
 	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10800, 0x10805,
 	0x10808, 0x10808,
 	0x1080a, 0x10835,
@@ -7798,15 +8237,22 @@ static const OnigCodePoint CR_L[] = {
 	0x10c80, 0x10cb2,
 	0x10cc0, 0x10cf2,
 	0x10d00, 0x10d23,
+	0x10e80, 0x10ea9,
+	0x10eb0, 0x10eb1,
 	0x10f00, 0x10f1c,
 	0x10f27, 0x10f27,
 	0x10f30, 0x10f45,
+	0x10f70, 0x10f81,
+	0x10fb0, 0x10fc4,
 	0x10fe0, 0x10ff6,
 	0x11003, 0x11037,
+	0x11071, 0x11072,
+	0x11075, 0x11075,
 	0x11083, 0x110af,
 	0x110d0, 0x110e8,
 	0x11103, 0x11126,
 	0x11144, 0x11144,
+	0x11147, 0x11147,
 	0x11150, 0x11172,
 	0x11176, 0x11176,
 	0x11183, 0x111b2,
@@ -7815,6 +8261,7 @@ static const OnigCodePoint CR_L[] = {
 	0x111dc, 0x111dc,
 	0x11200, 0x11211,
 	0x11213, 0x1122b,
+	0x1123f, 0x11240,
 	0x11280, 0x11286,
 	0x11288, 0x11288,
 	0x1128a, 0x1128d,
@@ -7832,7 +8279,7 @@ static const OnigCodePoint CR_L[] = {
 	0x1135d, 0x11361,
 	0x11400, 0x11434,
 	0x11447, 0x1144a,
-	0x1145f, 0x1145f,
+	0x1145f, 0x11461,
 	0x11480, 0x114af,
 	0x114c4, 0x114c5,
 	0x114c7, 0x114c7,
@@ -7843,9 +8290,16 @@ static const OnigCodePoint CR_L[] = {
 	0x11680, 0x116aa,
 	0x116b8, 0x116b8,
 	0x11700, 0x1171a,
+	0x11740, 0x11746,
 	0x11800, 0x1182b,
 	0x118a0, 0x118df,
-	0x118ff, 0x118ff,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x1192f,
+	0x1193f, 0x1193f,
+	0x11941, 0x11941,
 	0x119a0, 0x119a7,
 	0x119aa, 0x119d0,
 	0x119e1, 0x119e1,
@@ -7856,7 +8310,7 @@ static const OnigCodePoint CR_L[] = {
 	0x11a50, 0x11a50,
 	0x11a5c, 0x11a89,
 	0x11a9d, 0x11a9d,
-	0x11ac0, 0x11af8,
+	0x11ab0, 0x11af8,
 	0x11c00, 0x11c08,
 	0x11c0a, 0x11c2e,
 	0x11c40, 0x11c40,
@@ -7870,12 +8324,19 @@ static const OnigCodePoint CR_L[] = {
 	0x11d6a, 0x11d89,
 	0x11d98, 0x11d98,
 	0x11ee0, 0x11ef2,
+	0x11f02, 0x11f02,
+	0x11f04, 0x11f10,
+	0x11f12, 0x11f33,
+	0x11fb0, 0x11fb0,
 	0x12000, 0x12399,
 	0x12480, 0x12543,
-	0x13000, 0x1342e,
+	0x12f90, 0x12ff0,
+	0x13000, 0x1342f,
+	0x13441, 0x13446,
 	0x14400, 0x14646,
 	0x16800, 0x16a38,
 	0x16a40, 0x16a5e,
+	0x16a70, 0x16abe,
 	0x16ad0, 0x16aed,
 	0x16b00, 0x16b2f,
 	0x16b40, 0x16b43,
@@ -7888,9 +8349,15 @@ static const OnigCodePoint CR_L[] = {
 	0x16fe0, 0x16fe1,
 	0x16fe3, 0x16fe3,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
-	0x1b000, 0x1b11e,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 	0x1b170, 0x1b2fb,
 	0x1bc00, 0x1bc6a,
@@ -7927,10 +8394,19 @@ static const OnigCodePoint CR_L[] = {
 	0x1d78a, 0x1d7a8,
 	0x1d7aa, 0x1d7c2,
 	0x1d7c4, 0x1d7cb,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
+	0x1e030, 0x1e06d,
 	0x1e100, 0x1e12c,
 	0x1e137, 0x1e13d,
 	0x1e14e, 0x1e14e,
+	0x1e290, 0x1e2ad,
 	0x1e2c0, 0x1e2eb,
+	0x1e4d0, 0x1e4eb,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 	0x1e800, 0x1e8c4,
 	0x1e900, 0x1e943,
 	0x1e94b, 0x1e94b,
@@ -7967,17 +8443,19 @@ static const OnigCodePoint CR_L[] = {
 	0x1eea1, 0x1eea3,
 	0x1eea5, 0x1eea9,
 	0x1eeab, 0x1eebb,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 }; /* CR_L */
 
 /* 'LC': General Category */
 static const OnigCodePoint CR_LC[] = {
-	131,
+	143,
 	0x0041, 0x005a,
 	0x0061, 0x007a,
 	0x00b5, 0x00b5,
@@ -8047,9 +8525,7 @@ static const OnigCodePoint CR_LC[] = {
 	0x2145, 0x2149,
 	0x214e, 0x214e,
 	0x2183, 0x2184,
-	0x2c00, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2c7b,
+	0x2c00, 0x2c7b,
 	0x2c7e, 0x2ce4,
 	0x2ceb, 0x2cee,
 	0x2cf2, 0x2cf3,
@@ -8061,11 +8537,14 @@ static const OnigCodePoint CR_LC[] = {
 	0xa722, 0xa76f,
 	0xa771, 0xa787,
 	0xa78b, 0xa78e,
-	0xa790, 0xa7bf,
-	0xa7c2, 0xa7c6,
+	0xa790, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f5, 0xa7f6,
 	0xa7fa, 0xa7fa,
 	0xab30, 0xab5a,
-	0xab60, 0xab67,
+	0xab60, 0xab68,
 	0xab70, 0xabbf,
 	0xfb00, 0xfb06,
 	0xfb13, 0xfb17,
@@ -8074,6 +8553,14 @@ static const OnigCodePoint CR_LC[] = {
 	0x10400, 0x1044f,
 	0x104b0, 0x104d3,
 	0x104d8, 0x104fb,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10c80, 0x10cb2,
 	0x10cc0, 0x10cf2,
 	0x118a0, 0x118df,
@@ -8108,12 +8595,15 @@ static const OnigCodePoint CR_LC[] = {
 	0x1d78a, 0x1d7a8,
 	0x1d7aa, 0x1d7c2,
 	0x1d7c4, 0x1d7cb,
+	0x1df00, 0x1df09,
+	0x1df0b, 0x1df1e,
+	0x1df25, 0x1df2a,
 	0x1e900, 0x1e943,
 }; /* CR_LC */
 
 /* 'Ll': General Category */
 static const OnigCodePoint CR_Ll[] = {
-	642,
+	658,
 	0x0061, 0x007a,
 	0x00b5, 0x00b5,
 	0x00df, 0x00f6,
@@ -8545,7 +9035,7 @@ static const OnigCodePoint CR_Ll[] = {
 	0x2146, 0x2149,
 	0x214e, 0x214e,
 	0x2184, 0x2184,
-	0x2c30, 0x2c5e,
+	0x2c30, 0x2c5f,
 	0x2c61, 0x2c61,
 	0x2c65, 0x2c66,
 	0x2c68, 0x2c68,
@@ -8714,16 +9204,29 @@ static const OnigCodePoint CR_Ll[] = {
 	0xa7bb, 0xa7bb,
 	0xa7bd, 0xa7bd,
 	0xa7bf, 0xa7bf,
+	0xa7c1, 0xa7c1,
 	0xa7c3, 0xa7c3,
+	0xa7c8, 0xa7c8,
+	0xa7ca, 0xa7ca,
+	0xa7d1, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d5,
+	0xa7d7, 0xa7d7,
+	0xa7d9, 0xa7d9,
+	0xa7f6, 0xa7f6,
 	0xa7fa, 0xa7fa,
 	0xab30, 0xab5a,
-	0xab60, 0xab67,
+	0xab60, 0xab68,
 	0xab70, 0xabbf,
 	0xfb00, 0xfb06,
 	0xfb13, 0xfb17,
 	0xff41, 0xff5a,
 	0x10428, 0x1044f,
 	0x104d8, 0x104fb,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10cc0, 0x10cf2,
 	0x118c0, 0x118df,
 	0x16e60, 0x16e7f,
@@ -8755,12 +9258,15 @@ static const OnigCodePoint CR_Ll[] = {
 	0x1d7aa, 0x1d7c2,
 	0x1d7c4, 0x1d7c9,
 	0x1d7cb, 0x1d7cb,
+	0x1df00, 0x1df09,
+	0x1df0b, 0x1df1e,
+	0x1df25, 0x1df2a,
 	0x1e922, 0x1e943,
 }; /* CR_Ll */
 
 /* 'Lm': General Category */
 static const OnigCodePoint CR_Lm[] = {
-	60,
+	71,
 	0x02b0, 0x02c1,
 	0x02c6, 0x02d1,
 	0x02e0, 0x02e4,
@@ -8776,6 +9282,7 @@ static const OnigCodePoint CR_Lm[] = {
 	0x081a, 0x081a,
 	0x0824, 0x0824,
 	0x0828, 0x0828,
+	0x08c9, 0x08c9,
 	0x0971, 0x0971,
 	0x0e46, 0x0e46,
 	0x0ec6, 0x0ec6,
@@ -8806,6 +9313,7 @@ static const OnigCodePoint CR_Lm[] = {
 	0xa717, 0xa71f,
 	0xa770, 0xa770,
 	0xa788, 0xa788,
+	0xa7f2, 0xa7f4,
 	0xa7f8, 0xa7f9,
 	0xa9cf, 0xa9cf,
 	0xa9e6, 0xa9e6,
@@ -8813,19 +9321,28 @@ static const OnigCodePoint CR_Lm[] = {
 	0xaadd, 0xaadd,
 	0xaaf3, 0xaaf4,
 	0xab5c, 0xab5f,
+	0xab69, 0xab69,
 	0xff70, 0xff70,
 	0xff9e, 0xff9f,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x16b40, 0x16b43,
 	0x16f93, 0x16f9f,
 	0x16fe0, 0x16fe1,
 	0x16fe3, 0x16fe3,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1e030, 0x1e06d,
 	0x1e137, 0x1e13d,
+	0x1e4eb, 0x1e4eb,
 	0x1e94b, 0x1e94b,
 }; /* CR_Lm */
 
 /* 'Lo': General Category */
 static const OnigCodePoint CR_Lo[] = {
-	476,
+	510,
 	0x00aa, 0x00aa,
 	0x00ba, 0x00ba,
 	0x01bb, 0x01bb,
@@ -8849,8 +9366,9 @@ static const OnigCodePoint CR_Lo[] = {
 	0x0800, 0x0815,
 	0x0840, 0x0858,
 	0x0860, 0x086a,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
+	0x0870, 0x0887,
+	0x0889, 0x088e,
+	0x08a0, 0x08c8,
 	0x0904, 0x0939,
 	0x093d, 0x093d,
 	0x0950, 0x0950,
@@ -8915,6 +9433,7 @@ static const OnigCodePoint CR_Lo[] = {
 	0x0c2a, 0x0c39,
 	0x0c3d, 0x0c3d,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c61,
 	0x0c80, 0x0c80,
 	0x0c85, 0x0c8c,
@@ -8923,10 +9442,10 @@ static const OnigCodePoint CR_Lo[] = {
 	0x0caa, 0x0cb3,
 	0x0cb5, 0x0cb9,
 	0x0cbd, 0x0cbd,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce1,
 	0x0cf1, 0x0cf2,
-	0x0d05, 0x0d0c,
+	0x0d04, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d3a,
 	0x0d3d, 0x0d3d,
@@ -8987,9 +9506,8 @@ static const OnigCodePoint CR_Lo[] = {
 	0x1681, 0x169a,
 	0x16a0, 0x16ea,
 	0x16f1, 0x16f8,
-	0x1700, 0x170c,
-	0x170e, 0x1711,
-	0x1720, 0x1731,
+	0x1700, 0x1711,
+	0x171f, 0x1731,
 	0x1740, 0x1751,
 	0x1760, 0x176c,
 	0x176e, 0x1770,
@@ -9009,7 +9527,7 @@ static const OnigCodePoint CR_Lo[] = {
 	0x1a00, 0x1a16,
 	0x1a20, 0x1a54,
 	0x1b05, 0x1b33,
-	0x1b45, 0x1b4b,
+	0x1b45, 0x1b4c,
 	0x1b83, 0x1ba0,
 	0x1bae, 0x1baf,
 	0x1bba, 0x1be5,
@@ -9039,11 +9557,10 @@ static const OnigCodePoint CR_Lo[] = {
 	0x30ff, 0x30ff,
 	0x3105, 0x312f,
 	0x3131, 0x318e,
-	0x31a0, 0x31ba,
+	0x31a0, 0x31bf,
 	0x31f0, 0x31ff,
-	0x3400, 0x4db5,
-	0x4e00, 0x9fef,
-	0xa000, 0xa014,
+	0x3400, 0x4dbf,
+	0x4e00, 0xa014,
 	0xa016, 0xa48c,
 	0xa4d0, 0xa4f7,
 	0xa500, 0xa60b,
@@ -9166,15 +9683,22 @@ static const OnigCodePoint CR_Lo[] = {
 	0x10b80, 0x10b91,
 	0x10c00, 0x10c48,
 	0x10d00, 0x10d23,
+	0x10e80, 0x10ea9,
+	0x10eb0, 0x10eb1,
 	0x10f00, 0x10f1c,
 	0x10f27, 0x10f27,
 	0x10f30, 0x10f45,
+	0x10f70, 0x10f81,
+	0x10fb0, 0x10fc4,
 	0x10fe0, 0x10ff6,
 	0x11003, 0x11037,
+	0x11071, 0x11072,
+	0x11075, 0x11075,
 	0x11083, 0x110af,
 	0x110d0, 0x110e8,
 	0x11103, 0x11126,
 	0x11144, 0x11144,
+	0x11147, 0x11147,
 	0x11150, 0x11172,
 	0x11176, 0x11176,
 	0x11183, 0x111b2,
@@ -9183,6 +9707,7 @@ static const OnigCodePoint CR_Lo[] = {
 	0x111dc, 0x111dc,
 	0x11200, 0x11211,
 	0x11213, 0x1122b,
+	0x1123f, 0x11240,
 	0x11280, 0x11286,
 	0x11288, 0x11288,
 	0x1128a, 0x1128d,
@@ -9200,7 +9725,7 @@ static const OnigCodePoint CR_Lo[] = {
 	0x1135d, 0x11361,
 	0x11400, 0x11434,
 	0x11447, 0x1144a,
-	0x1145f, 0x1145f,
+	0x1145f, 0x11461,
 	0x11480, 0x114af,
 	0x114c4, 0x114c5,
 	0x114c7, 0x114c7,
@@ -9211,8 +9736,15 @@ static const OnigCodePoint CR_Lo[] = {
 	0x11680, 0x116aa,
 	0x116b8, 0x116b8,
 	0x11700, 0x1171a,
+	0x11740, 0x11746,
 	0x11800, 0x1182b,
-	0x118ff, 0x118ff,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x1192f,
+	0x1193f, 0x1193f,
+	0x11941, 0x11941,
 	0x119a0, 0x119a7,
 	0x119aa, 0x119d0,
 	0x119e1, 0x119e1,
@@ -9223,7 +9755,7 @@ static const OnigCodePoint CR_Lo[] = {
 	0x11a50, 0x11a50,
 	0x11a5c, 0x11a89,
 	0x11a9d, 0x11a9d,
-	0x11ac0, 0x11af8,
+	0x11ab0, 0x11af8,
 	0x11c00, 0x11c08,
 	0x11c0a, 0x11c2e,
 	0x11c40, 0x11c40,
@@ -9237,12 +9769,19 @@ static const OnigCodePoint CR_Lo[] = {
 	0x11d6a, 0x11d89,
 	0x11d98, 0x11d98,
 	0x11ee0, 0x11ef2,
+	0x11f02, 0x11f02,
+	0x11f04, 0x11f10,
+	0x11f12, 0x11f33,
+	0x11fb0, 0x11fb0,
 	0x12000, 0x12399,
 	0x12480, 0x12543,
-	0x13000, 0x1342e,
+	0x12f90, 0x12ff0,
+	0x13000, 0x1342f,
+	0x13441, 0x13446,
 	0x14400, 0x14646,
 	0x16800, 0x16a38,
 	0x16a40, 0x16a5e,
+	0x16a70, 0x16abe,
 	0x16ad0, 0x16aed,
 	0x16b00, 0x16b2f,
 	0x16b63, 0x16b77,
@@ -9250,18 +9789,28 @@ static const OnigCodePoint CR_Lo[] = {
 	0x16f00, 0x16f4a,
 	0x16f50, 0x16f50,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
-	0x1b000, 0x1b11e,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 	0x1b170, 0x1b2fb,
 	0x1bc00, 0x1bc6a,
 	0x1bc70, 0x1bc7c,
 	0x1bc80, 0x1bc88,
 	0x1bc90, 0x1bc99,
+	0x1df0a, 0x1df0a,
 	0x1e100, 0x1e12c,
 	0x1e14e, 0x1e14e,
+	0x1e290, 0x1e2ad,
 	0x1e2c0, 0x1e2eb,
+	0x1e4d0, 0x1e4ea,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 	0x1e800, 0x1e8c4,
 	0x1ee00, 0x1ee03,
 	0x1ee05, 0x1ee1f,
@@ -9296,12 +9845,14 @@ static const OnigCodePoint CR_Lo[] = {
 	0x1eea1, 0x1eea3,
 	0x1eea5, 0x1eea9,
 	0x1eeab, 0x1eebb,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 }; /* CR_Lo */
 
 /* 'Lt': General Category */
@@ -9321,7 +9872,7 @@ static const OnigCodePoint CR_Lt[] = {
 
 /* 'Lu': General Category */
 static const OnigCodePoint CR_Lu[] = {
-	636,
+	646,
 	0x0041, 0x005a,
 	0x00c0, 0x00d6,
 	0x00d8, 0x00de,
@@ -9753,7 +10304,7 @@ static const OnigCodePoint CR_Lu[] = {
 	0x213e, 0x213f,
 	0x2145, 0x2145,
 	0x2183, 0x2183,
-	0x2c00, 0x2c2e,
+	0x2c00, 0x2c2f,
 	0x2c60, 0x2c60,
 	0x2c62, 0x2c64,
 	0x2c67, 0x2c67,
@@ -9918,11 +10469,21 @@ static const OnigCodePoint CR_Lu[] = {
 	0xa7ba, 0xa7ba,
 	0xa7bc, 0xa7bc,
 	0xa7be, 0xa7be,
+	0xa7c0, 0xa7c0,
 	0xa7c2, 0xa7c2,
-	0xa7c4, 0xa7c6,
+	0xa7c4, 0xa7c7,
+	0xa7c9, 0xa7c9,
+	0xa7d0, 0xa7d0,
+	0xa7d6, 0xa7d6,
+	0xa7d8, 0xa7d8,
+	0xa7f5, 0xa7f5,
 	0xff21, 0xff3a,
 	0x10400, 0x10427,
 	0x104b0, 0x104d3,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
 	0x10c80, 0x10cb2,
 	0x118a0, 0x118bf,
 	0x16e40, 0x16e5f,
@@ -9962,7 +10523,7 @@ static const OnigCodePoint CR_Lu[] = {
 
 /* 'M': Major Category */
 static const OnigCodePoint CR_M[] = {
-	280,
+	310,
 	0x0300, 0x036f,
 	0x0483, 0x0489,
 	0x0591, 0x05bd,
@@ -9987,7 +10548,8 @@ static const OnigCodePoint CR_M[] = {
 	0x0825, 0x0827,
 	0x0829, 0x082d,
 	0x0859, 0x085b,
-	0x08d3, 0x08e1,
+	0x0898, 0x089f,
+	0x08ca, 0x08e1,
 	0x08e3, 0x0903,
 	0x093a, 0x093c,
 	0x093e, 0x094f,
@@ -10021,7 +10583,7 @@ static const OnigCodePoint CR_M[] = {
 	0x0b3e, 0x0b44,
 	0x0b47, 0x0b48,
 	0x0b4b, 0x0b4d,
-	0x0b56, 0x0b57,
+	0x0b55, 0x0b57,
 	0x0b62, 0x0b63,
 	0x0b82, 0x0b82,
 	0x0bbe, 0x0bc2,
@@ -10029,6 +10591,7 @@ static const OnigCodePoint CR_M[] = {
 	0x0bca, 0x0bcd,
 	0x0bd7, 0x0bd7,
 	0x0c00, 0x0c04,
+	0x0c3c, 0x0c3c,
 	0x0c3e, 0x0c44,
 	0x0c46, 0x0c48,
 	0x0c4a, 0x0c4d,
@@ -10041,6 +10604,7 @@ static const OnigCodePoint CR_M[] = {
 	0x0cca, 0x0ccd,
 	0x0cd5, 0x0cd6,
 	0x0ce2, 0x0ce3,
+	0x0cf3, 0x0cf3,
 	0x0d00, 0x0d03,
 	0x0d3b, 0x0d3c,
 	0x0d3e, 0x0d44,
@@ -10048,7 +10612,7 @@ static const OnigCodePoint CR_M[] = {
 	0x0d4a, 0x0d4d,
 	0x0d57, 0x0d57,
 	0x0d62, 0x0d63,
-	0x0d82, 0x0d83,
+	0x0d81, 0x0d83,
 	0x0dca, 0x0dca,
 	0x0dcf, 0x0dd4,
 	0x0dd6, 0x0dd6,
@@ -10059,7 +10623,7 @@ static const OnigCodePoint CR_M[] = {
 	0x0e47, 0x0e4e,
 	0x0eb1, 0x0eb1,
 	0x0eb4, 0x0ebc,
-	0x0ec8, 0x0ecd,
+	0x0ec8, 0x0ece,
 	0x0f18, 0x0f19,
 	0x0f35, 0x0f35,
 	0x0f37, 0x0f37,
@@ -10080,13 +10644,14 @@ static const OnigCodePoint CR_M[] = {
 	0x108f, 0x108f,
 	0x109a, 0x109d,
 	0x135d, 0x135f,
-	0x1712, 0x1714,
+	0x1712, 0x1715,
 	0x1732, 0x1734,
 	0x1752, 0x1753,
 	0x1772, 0x1773,
 	0x17b4, 0x17d3,
 	0x17dd, 0x17dd,
 	0x180b, 0x180d,
+	0x180f, 0x180f,
 	0x1885, 0x1886,
 	0x18a9, 0x18a9,
 	0x1920, 0x192b,
@@ -10095,7 +10660,7 @@ static const OnigCodePoint CR_M[] = {
 	0x1a55, 0x1a5e,
 	0x1a60, 0x1a7c,
 	0x1a7f, 0x1a7f,
-	0x1ab0, 0x1abe,
+	0x1ab0, 0x1ace,
 	0x1b00, 0x1b04,
 	0x1b34, 0x1b44,
 	0x1b6b, 0x1b73,
@@ -10108,8 +10673,7 @@ static const OnigCodePoint CR_M[] = {
 	0x1ced, 0x1ced,
 	0x1cf4, 0x1cf4,
 	0x1cf7, 0x1cf9,
-	0x1dc0, 0x1df9,
-	0x1dfb, 0x1dff,
+	0x1dc0, 0x1dff,
 	0x20d0, 0x20f0,
 	0x2cef, 0x2cf1,
 	0x2d7f, 0x2d7f,
@@ -10124,6 +10688,7 @@ static const OnigCodePoint CR_M[] = {
 	0xa806, 0xa806,
 	0xa80b, 0xa80b,
 	0xa823, 0xa827,
+	0xa82c, 0xa82c,
 	0xa880, 0xa881,
 	0xa8b4, 0xa8c5,
 	0xa8e0, 0xa8f1,
@@ -10159,11 +10724,17 @@ static const OnigCodePoint CR_M[] = {
 	0x10a3f, 0x10a3f,
 	0x10ae5, 0x10ae6,
 	0x10d24, 0x10d27,
+	0x10eab, 0x10eac,
+	0x10efd, 0x10eff,
 	0x10f46, 0x10f50,
+	0x10f82, 0x10f85,
 	0x11000, 0x11002,
 	0x11038, 0x11046,
+	0x11070, 0x11070,
+	0x11073, 0x11074,
 	0x1107f, 0x11082,
 	0x110b0, 0x110ba,
+	0x110c2, 0x110c2,
 	0x11100, 0x11102,
 	0x11127, 0x11134,
 	0x11145, 0x11146,
@@ -10171,8 +10742,10 @@ static const OnigCodePoint CR_M[] = {
 	0x11180, 0x11182,
 	0x111b3, 0x111c0,
 	0x111c9, 0x111cc,
+	0x111ce, 0x111cf,
 	0x1122c, 0x11237,
 	0x1123e, 0x1123e,
+	0x11241, 0x11241,
 	0x112df, 0x112ea,
 	0x11300, 0x11303,
 	0x1133b, 0x1133c,
@@ -10193,6 +10766,11 @@ static const OnigCodePoint CR_M[] = {
 	0x116ab, 0x116b7,
 	0x1171d, 0x1172b,
 	0x1182c, 0x1183a,
+	0x11930, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x1193e,
+	0x11940, 0x11940,
+	0x11942, 0x11943,
 	0x119d1, 0x119d7,
 	0x119da, 0x119e0,
 	0x119e4, 0x119e4,
@@ -10215,12 +10793,22 @@ static const OnigCodePoint CR_M[] = {
 	0x11d90, 0x11d91,
 	0x11d93, 0x11d97,
 	0x11ef3, 0x11ef6,
+	0x11f00, 0x11f01,
+	0x11f03, 0x11f03,
+	0x11f34, 0x11f3a,
+	0x11f3e, 0x11f42,
+	0x13440, 0x13440,
+	0x13447, 0x13455,
 	0x16af0, 0x16af4,
 	0x16b30, 0x16b36,
 	0x16f4f, 0x16f4f,
 	0x16f51, 0x16f87,
 	0x16f8f, 0x16f92,
+	0x16fe4, 0x16fe4,
+	0x16ff0, 0x16ff1,
 	0x1bc9d, 0x1bc9e,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
 	0x1d165, 0x1d169,
 	0x1d16d, 0x1d172,
 	0x1d17b, 0x1d182,
@@ -10238,8 +10826,11 @@ static const OnigCodePoint CR_M[] = {
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e08f, 0x1e08f,
 	0x1e130, 0x1e136,
+	0x1e2ae, 0x1e2ae,
 	0x1e2ec, 0x1e2ef,
+	0x1e4ec, 0x1e4ef,
 	0x1e8d0, 0x1e8d6,
 	0x1e944, 0x1e94a,
 	0xe0100, 0xe01ef,
@@ -10247,7 +10838,7 @@ static const OnigCodePoint CR_M[] = {
 
 /* 'Mc': General Category */
 static const OnigCodePoint CR_Mc[] = {
-	168,
+	182,
 	0x0903, 0x0903,
 	0x093b, 0x093b,
 	0x093e, 0x0940,
@@ -10283,6 +10874,7 @@ static const OnigCodePoint CR_Mc[] = {
 	0x0cc7, 0x0cc8,
 	0x0cca, 0x0ccb,
 	0x0cd5, 0x0cd6,
+	0x0cf3, 0x0cf3,
 	0x0d02, 0x0d03,
 	0x0d3e, 0x0d40,
 	0x0d46, 0x0d48,
@@ -10305,6 +10897,8 @@ static const OnigCodePoint CR_Mc[] = {
 	0x1087, 0x108c,
 	0x108f, 0x108f,
 	0x109a, 0x109c,
+	0x1715, 0x1715,
+	0x1734, 0x1734,
 	0x17b6, 0x17b6,
 	0x17be, 0x17c5,
 	0x17c7, 0x17c8,
@@ -10367,6 +10961,7 @@ static const OnigCodePoint CR_Mc[] = {
 	0x11182, 0x11182,
 	0x111b3, 0x111b5,
 	0x111bf, 0x111c0,
+	0x111ce, 0x111ce,
 	0x1122c, 0x1122e,
 	0x11232, 0x11233,
 	0x11235, 0x11235,
@@ -10398,6 +10993,11 @@ static const OnigCodePoint CR_Mc[] = {
 	0x11726, 0x11726,
 	0x1182c, 0x1182e,
 	0x11838, 0x11838,
+	0x11930, 0x11935,
+	0x11937, 0x11938,
+	0x1193d, 0x1193d,
+	0x11940, 0x11940,
+	0x11942, 0x11942,
 	0x119d1, 0x119d3,
 	0x119dc, 0x119df,
 	0x119e4, 0x119e4,
@@ -10413,7 +11013,12 @@ static const OnigCodePoint CR_Mc[] = {
 	0x11d93, 0x11d94,
 	0x11d96, 0x11d96,
 	0x11ef5, 0x11ef6,
+	0x11f03, 0x11f03,
+	0x11f34, 0x11f35,
+	0x11f3e, 0x11f3f,
+	0x11f41, 0x11f41,
 	0x16f51, 0x16f87,
+	0x16ff0, 0x16ff1,
 	0x1d165, 0x1d166,
 	0x1d16d, 0x1d172,
 }; /* CR_Mc */
@@ -10430,7 +11035,7 @@ static const OnigCodePoint CR_Me[] = {
 
 /* 'Mn': General Category */
 static const OnigCodePoint CR_Mn[] = {
-	318,
+	346,
 	0x0300, 0x036f,
 	0x0483, 0x0487,
 	0x0591, 0x05bd,
@@ -10455,7 +11060,8 @@ static const OnigCodePoint CR_Mn[] = {
 	0x0825, 0x0827,
 	0x0829, 0x082d,
 	0x0859, 0x085b,
-	0x08d3, 0x08e1,
+	0x0898, 0x089f,
+	0x08ca, 0x08e1,
 	0x08e3, 0x0902,
 	0x093a, 0x093a,
 	0x093c, 0x093c,
@@ -10489,13 +11095,14 @@ static const OnigCodePoint CR_Mn[] = {
 	0x0b3f, 0x0b3f,
 	0x0b41, 0x0b44,
 	0x0b4d, 0x0b4d,
-	0x0b56, 0x0b56,
+	0x0b55, 0x0b56,
 	0x0b62, 0x0b63,
 	0x0b82, 0x0b82,
 	0x0bc0, 0x0bc0,
 	0x0bcd, 0x0bcd,
 	0x0c00, 0x0c00,
 	0x0c04, 0x0c04,
+	0x0c3c, 0x0c3c,
 	0x0c3e, 0x0c40,
 	0x0c46, 0x0c48,
 	0x0c4a, 0x0c4d,
@@ -10512,6 +11119,7 @@ static const OnigCodePoint CR_Mn[] = {
 	0x0d41, 0x0d44,
 	0x0d4d, 0x0d4d,
 	0x0d62, 0x0d63,
+	0x0d81, 0x0d81,
 	0x0dca, 0x0dca,
 	0x0dd2, 0x0dd4,
 	0x0dd6, 0x0dd6,
@@ -10520,7 +11128,7 @@ static const OnigCodePoint CR_Mn[] = {
 	0x0e47, 0x0e4e,
 	0x0eb1, 0x0eb1,
 	0x0eb4, 0x0ebc,
-	0x0ec8, 0x0ecd,
+	0x0ec8, 0x0ece,
 	0x0f18, 0x0f19,
 	0x0f35, 0x0f35,
 	0x0f37, 0x0f37,
@@ -10544,7 +11152,7 @@ static const OnigCodePoint CR_Mn[] = {
 	0x109d, 0x109d,
 	0x135d, 0x135f,
 	0x1712, 0x1714,
-	0x1732, 0x1734,
+	0x1732, 0x1733,
 	0x1752, 0x1753,
 	0x1772, 0x1773,
 	0x17b4, 0x17b5,
@@ -10553,6 +11161,7 @@ static const OnigCodePoint CR_Mn[] = {
 	0x17c9, 0x17d3,
 	0x17dd, 0x17dd,
 	0x180b, 0x180d,
+	0x180f, 0x180f,
 	0x1885, 0x1886,
 	0x18a9, 0x18a9,
 	0x1920, 0x1922,
@@ -10569,6 +11178,7 @@ static const OnigCodePoint CR_Mn[] = {
 	0x1a73, 0x1a7c,
 	0x1a7f, 0x1a7f,
 	0x1ab0, 0x1abd,
+	0x1abf, 0x1ace,
 	0x1b00, 0x1b03,
 	0x1b34, 0x1b34,
 	0x1b36, 0x1b3a,
@@ -10591,8 +11201,7 @@ static const OnigCodePoint CR_Mn[] = {
 	0x1ced, 0x1ced,
 	0x1cf4, 0x1cf4,
 	0x1cf8, 0x1cf9,
-	0x1dc0, 0x1df9,
-	0x1dfb, 0x1dff,
+	0x1dc0, 0x1dff,
 	0x20d0, 0x20dc,
 	0x20e1, 0x20e1,
 	0x20e5, 0x20f0,
@@ -10609,6 +11218,7 @@ static const OnigCodePoint CR_Mn[] = {
 	0xa806, 0xa806,
 	0xa80b, 0xa80b,
 	0xa825, 0xa826,
+	0xa82c, 0xa82c,
 	0xa8c4, 0xa8c5,
 	0xa8e0, 0xa8f1,
 	0xa8ff, 0xa8ff,
@@ -10648,12 +11258,18 @@ static const OnigCodePoint CR_Mn[] = {
 	0x10a3f, 0x10a3f,
 	0x10ae5, 0x10ae6,
 	0x10d24, 0x10d27,
+	0x10eab, 0x10eac,
+	0x10efd, 0x10eff,
 	0x10f46, 0x10f50,
+	0x10f82, 0x10f85,
 	0x11001, 0x11001,
 	0x11038, 0x11046,
+	0x11070, 0x11070,
+	0x11073, 0x11074,
 	0x1107f, 0x11081,
 	0x110b3, 0x110b6,
 	0x110b9, 0x110ba,
+	0x110c2, 0x110c2,
 	0x11100, 0x11102,
 	0x11127, 0x1112b,
 	0x1112d, 0x11134,
@@ -10661,10 +11277,12 @@ static const OnigCodePoint CR_Mn[] = {
 	0x11180, 0x11181,
 	0x111b6, 0x111be,
 	0x111c9, 0x111cc,
+	0x111cf, 0x111cf,
 	0x1122f, 0x11231,
 	0x11234, 0x11234,
 	0x11236, 0x11237,
 	0x1123e, 0x1123e,
+	0x11241, 0x11241,
 	0x112df, 0x112df,
 	0x112e3, 0x112ea,
 	0x11300, 0x11301,
@@ -10696,6 +11314,9 @@ static const OnigCodePoint CR_Mn[] = {
 	0x11727, 0x1172b,
 	0x1182f, 0x11837,
 	0x11839, 0x1183a,
+	0x1193b, 0x1193c,
+	0x1193e, 0x1193e,
+	0x11943, 0x11943,
 	0x119d4, 0x119d7,
 	0x119da, 0x119db,
 	0x119e0, 0x119e0,
@@ -10723,11 +11344,20 @@ static const OnigCodePoint CR_Mn[] = {
 	0x11d95, 0x11d95,
 	0x11d97, 0x11d97,
 	0x11ef3, 0x11ef4,
+	0x11f00, 0x11f01,
+	0x11f36, 0x11f3a,
+	0x11f40, 0x11f40,
+	0x11f42, 0x11f42,
+	0x13440, 0x13440,
+	0x13447, 0x13455,
 	0x16af0, 0x16af4,
 	0x16b30, 0x16b36,
 	0x16f4f, 0x16f4f,
 	0x16f8f, 0x16f92,
+	0x16fe4, 0x16fe4,
 	0x1bc9d, 0x1bc9e,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
 	0x1d167, 0x1d169,
 	0x1d17b, 0x1d182,
 	0x1d185, 0x1d18b,
@@ -10744,8 +11374,11 @@ static const OnigCodePoint CR_Mn[] = {
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e08f, 0x1e08f,
 	0x1e130, 0x1e136,
+	0x1e2ae, 0x1e2ae,
 	0x1e2ec, 0x1e2ef,
+	0x1e4ec, 0x1e4ef,
 	0x1e8d0, 0x1e8d6,
 	0x1e944, 0x1e94a,
 	0xe0100, 0xe01ef,
@@ -10753,7 +11386,7 @@ static const OnigCodePoint CR_Mn[] = {
 
 /* 'N': Major Category */
 static const OnigCodePoint CR_N[] = {
-	130,
+	137,
 	0x0030, 0x0039,
 	0x00b2, 0x00b3,
 	0x00b9, 0x00b9,
@@ -10850,6 +11483,7 @@ static const OnigCodePoint CR_N[] = {
 	0x10e60, 0x10e7e,
 	0x10f1d, 0x10f26,
 	0x10f51, 0x10f54,
+	0x10fc5, 0x10fcb,
 	0x11052, 0x1106f,
 	0x110f0, 0x110f9,
 	0x11136, 0x1113f,
@@ -10862,20 +11496,25 @@ static const OnigCodePoint CR_N[] = {
 	0x116c0, 0x116c9,
 	0x11730, 0x1173b,
 	0x118e0, 0x118f2,
+	0x11950, 0x11959,
 	0x11c50, 0x11c6c,
 	0x11d50, 0x11d59,
 	0x11da0, 0x11da9,
+	0x11f50, 0x11f59,
 	0x11fc0, 0x11fd4,
 	0x12400, 0x1246e,
 	0x16a60, 0x16a69,
+	0x16ac0, 0x16ac9,
 	0x16b50, 0x16b59,
 	0x16b5b, 0x16b61,
 	0x16e80, 0x16e96,
+	0x1d2c0, 0x1d2d3,
 	0x1d2e0, 0x1d2f3,
 	0x1d360, 0x1d378,
 	0x1d7ce, 0x1d7ff,
 	0x1e140, 0x1e149,
 	0x1e2f0, 0x1e2f9,
+	0x1e4f0, 0x1e4f9,
 	0x1e8c7, 0x1e8cf,
 	0x1e950, 0x1e959,
 	0x1ec71, 0x1ecab,
@@ -10884,6 +11523,7 @@ static const OnigCodePoint CR_N[] = {
 	0x1ed01, 0x1ed2d,
 	0x1ed2f, 0x1ed3d,
 	0x1f100, 0x1f10c,
+	0x1fbf0, 0x1fbf9,
 }; /* CR_N */
 
 /* 'Nd': General Category */
@@ -10908,7 +11548,7 @@ static const OnigCodePoint CR_Nl[] = {
 
 /* 'No': General Category */
 static const OnigCodePoint CR_No[] = {
-	70,
+	72,
 	0x00b2, 0x00b3,
 	0x00b9, 0x00b9,
 	0x00bc, 0x00be,
@@ -10962,6 +11602,7 @@ static const OnigCodePoint CR_No[] = {
 	0x10e60, 0x10e7e,
 	0x10f1d, 0x10f26,
 	0x10f51, 0x10f54,
+	0x10fc5, 0x10fcb,
 	0x11052, 0x11065,
 	0x111e1, 0x111f4,
 	0x1173a, 0x1173b,
@@ -10970,6 +11611,7 @@ static const OnigCodePoint CR_No[] = {
 	0x11fc0, 0x11fd4,
 	0x16b5b, 0x16b61,
 	0x16e80, 0x16e96,
+	0x1d2c0, 0x1d2d3,
 	0x1d2e0, 0x1d2f3,
 	0x1d360, 0x1d378,
 	0x1e8c7, 0x1e8cf,
@@ -10997,7 +11639,7 @@ static const OnigCodePoint CR_Pc[] = {
 
 /* 'Pd': General Category */
 static const OnigCodePoint CR_Pd[] = {
-	17,
+	19,
 	0x002d, 0x002d,
 	0x058a, 0x058a,
 	0x05be, 0x05be,
@@ -11008,6 +11650,7 @@ static const OnigCodePoint CR_Pd[] = {
 	0x2e1a, 0x2e1a,
 	0x2e3a, 0x2e3b,
 	0x2e40, 0x2e40,
+	0x2e5d, 0x2e5d,
 	0x301c, 0x301c,
 	0x3030, 0x3030,
 	0x30a0, 0x30a0,
@@ -11015,11 +11658,12 @@ static const OnigCodePoint CR_Pd[] = {
 	0xfe58, 0xfe58,
 	0xfe63, 0xfe63,
 	0xff0d, 0xff0d,
+	0x10ead, 0x10ead,
 }; /* CR_Pd */
 
 /* 'Pe': General Category */
 static const OnigCodePoint CR_Pe[] = {
-	72,
+	76,
 	0x0029, 0x0029,
 	0x005d, 0x005d,
 	0x007d, 0x007d,
@@ -11063,6 +11707,10 @@ static const OnigCodePoint CR_Pe[] = {
 	0x2e25, 0x2e25,
 	0x2e27, 0x2e27,
 	0x2e29, 0x2e29,
+	0x2e56, 0x2e56,
+	0x2e58, 0x2e58,
+	0x2e5a, 0x2e5a,
+	0x2e5c, 0x2e5c,
 	0x3009, 0x3009,
 	0x300b, 0x300b,
 	0x300d, 0x300d,
@@ -11127,7 +11775,7 @@ static const OnigCodePoint CR_Pi[] = {
 
 /* 'Po': General Category */
 static const OnigCodePoint CR_Po[] = {
-	179,
+	187,
 	0x0021, 0x0023,
 	0x0025, 0x0027,
 	0x002a, 0x002a,
@@ -11151,7 +11799,7 @@ static const OnigCodePoint CR_Po[] = {
 	0x0609, 0x060a,
 	0x060c, 0x060d,
 	0x061b, 0x061b,
-	0x061e, 0x061f,
+	0x061d, 0x061f,
 	0x066a, 0x066d,
 	0x06d4, 0x06d4,
 	0x0700, 0x070d,
@@ -11188,6 +11836,7 @@ static const OnigCodePoint CR_Po[] = {
 	0x1aa0, 0x1aa6,
 	0x1aa8, 0x1aad,
 	0x1b5a, 0x1b60,
+	0x1b7d, 0x1b7e,
 	0x1bfc, 0x1bff,
 	0x1c3b, 0x1c3f,
 	0x1c7e, 0x1c7f,
@@ -11216,6 +11865,7 @@ static const OnigCodePoint CR_Po[] = {
 	0x2e3c, 0x2e3f,
 	0x2e41, 0x2e41,
 	0x2e43, 0x2e4f,
+	0x2e52, 0x2e54,
 	0x3001, 0x3003,
 	0x303d, 0x303d,
 	0x30fb, 0x30fb,
@@ -11269,6 +11919,7 @@ static const OnigCodePoint CR_Po[] = {
 	0x10b39, 0x10b3f,
 	0x10b99, 0x10b9c,
 	0x10f55, 0x10f59,
+	0x10f86, 0x10f89,
 	0x11047, 0x1104d,
 	0x110bb, 0x110bc,
 	0x110be, 0x110c1,
@@ -11281,23 +11932,28 @@ static const OnigCodePoint CR_Po[] = {
 	0x11238, 0x1123d,
 	0x112a9, 0x112a9,
 	0x1144b, 0x1144f,
-	0x1145b, 0x1145b,
+	0x1145a, 0x1145b,
 	0x1145d, 0x1145d,
 	0x114c6, 0x114c6,
 	0x115c1, 0x115d7,
 	0x11641, 0x11643,
 	0x11660, 0x1166c,
+	0x116b9, 0x116b9,
 	0x1173c, 0x1173e,
 	0x1183b, 0x1183b,
+	0x11944, 0x11946,
 	0x119e2, 0x119e2,
 	0x11a3f, 0x11a46,
 	0x11a9a, 0x11a9c,
 	0x11a9e, 0x11aa2,
+	0x11b00, 0x11b09,
 	0x11c41, 0x11c45,
 	0x11c70, 0x11c71,
 	0x11ef7, 0x11ef8,
+	0x11f43, 0x11f4f,
 	0x11fff, 0x11fff,
 	0x12470, 0x12474,
+	0x12ff1, 0x12ff2,
 	0x16a6e, 0x16a6f,
 	0x16af5, 0x16af5,
 	0x16b37, 0x16b3b,
@@ -11311,7 +11967,7 @@ static const OnigCodePoint CR_Po[] = {
 
 /* 'Ps': General Category */
 static const OnigCodePoint CR_Ps[] = {
-	75,
+	79,
 	0x0028, 0x0028,
 	0x005b, 0x005b,
 	0x007b, 0x007b,
@@ -11358,6 +12014,10 @@ static const OnigCodePoint CR_Ps[] = {
 	0x2e26, 0x2e26,
 	0x2e28, 0x2e28,
 	0x2e42, 0x2e42,
+	0x2e55, 0x2e55,
+	0x2e57, 0x2e57,
+	0x2e59, 0x2e59,
+	0x2e5b, 0x2e5b,
 	0x3008, 0x3008,
 	0x300a, 0x300a,
 	0x300c, 0x300c,
@@ -11391,7 +12051,7 @@ static const OnigCodePoint CR_Ps[] = {
 
 /* 'S': Major Category */
 static const OnigCodePoint CR_S[] = {
-	226,
+	232,
 	0x0024, 0x0024,
 	0x002b, 0x002b,
 	0x003c, 0x003e,
@@ -11425,6 +12085,7 @@ static const OnigCodePoint CR_S[] = {
 	0x06fd, 0x06fe,
 	0x07f6, 0x07f6,
 	0x07fe, 0x07ff,
+	0x0888, 0x0888,
 	0x09f2, 0x09f3,
 	0x09fa, 0x09fb,
 	0x0af1, 0x0af1,
@@ -11463,7 +12124,7 @@ static const OnigCodePoint CR_S[] = {
 	0x2052, 0x2052,
 	0x207a, 0x207c,
 	0x208a, 0x208c,
-	0x20a0, 0x20bf,
+	0x20a0, 0x20c0,
 	0x2100, 0x2101,
 	0x2103, 0x2106,
 	0x2108, 0x2109,
@@ -11492,8 +12153,9 @@ static const OnigCodePoint CR_S[] = {
 	0x29dc, 0x29fb,
 	0x29fe, 0x2b73,
 	0x2b76, 0x2b95,
-	0x2b98, 0x2bff,
+	0x2b97, 0x2bff,
 	0x2ce5, 0x2cea,
+	0x2e50, 0x2e51,
 	0x2e80, 0x2e99,
 	0x2e9b, 0x2ef3,
 	0x2f00, 0x2fd5,
@@ -11522,9 +12184,12 @@ static const OnigCodePoint CR_S[] = {
 	0xa836, 0xa839,
 	0xaa77, 0xaa79,
 	0xab5b, 0xab5b,
+	0xab6a, 0xab6b,
 	0xfb29, 0xfb29,
-	0xfbb2, 0xfbc1,
-	0xfdfc, 0xfdfd,
+	0xfbb2, 0xfbc2,
+	0xfd40, 0xfd4f,
+	0xfdcf, 0xfdcf,
+	0xfdfc, 0xfdff,
 	0xfe62, 0xfe62,
 	0xfe64, 0xfe66,
 	0xfe69, 0xfe69,
@@ -11541,7 +12206,7 @@ static const OnigCodePoint CR_S[] = {
 	0x10137, 0x1013f,
 	0x10179, 0x10189,
 	0x1018c, 0x1018e,
-	0x10190, 0x1019b,
+	0x10190, 0x1019c,
 	0x101a0, 0x101a0,
 	0x101d0, 0x101fc,
 	0x10877, 0x10878,
@@ -11551,13 +12216,14 @@ static const OnigCodePoint CR_S[] = {
 	0x16b3c, 0x16b3f,
 	0x16b45, 0x16b45,
 	0x1bc9c, 0x1bc9c,
+	0x1cf50, 0x1cfc3,
 	0x1d000, 0x1d0f5,
 	0x1d100, 0x1d126,
 	0x1d129, 0x1d164,
 	0x1d16a, 0x1d16c,
 	0x1d183, 0x1d184,
 	0x1d18c, 0x1d1a9,
-	0x1d1ae, 0x1d1e8,
+	0x1d1ae, 0x1d1ea,
 	0x1d200, 0x1d241,
 	0x1d245, 0x1d245,
 	0x1d300, 0x1d356,
@@ -11588,36 +12254,36 @@ static const OnigCodePoint CR_S[] = {
 	0x1f0b1, 0x1f0bf,
 	0x1f0c1, 0x1f0cf,
 	0x1f0d1, 0x1f0f5,
-	0x1f110, 0x1f16c,
-	0x1f170, 0x1f1ac,
+	0x1f10d, 0x1f1ad,
 	0x1f1e6, 0x1f202,
 	0x1f210, 0x1f23b,
 	0x1f240, 0x1f248,
 	0x1f250, 0x1f251,
 	0x1f260, 0x1f265,
-	0x1f300, 0x1f6d5,
-	0x1f6e0, 0x1f6ec,
-	0x1f6f0, 0x1f6fa,
-	0x1f700, 0x1f773,
-	0x1f780, 0x1f7d8,
+	0x1f300, 0x1f6d7,
+	0x1f6dc, 0x1f6ec,
+	0x1f6f0, 0x1f6fc,
+	0x1f700, 0x1f776,
+	0x1f77b, 0x1f7d9,
 	0x1f7e0, 0x1f7eb,
+	0x1f7f0, 0x1f7f0,
 	0x1f800, 0x1f80b,
 	0x1f810, 0x1f847,
 	0x1f850, 0x1f859,
 	0x1f860, 0x1f887,
 	0x1f890, 0x1f8ad,
-	0x1f900, 0x1f90b,
-	0x1f90d, 0x1f971,
-	0x1f973, 0x1f976,
-	0x1f97a, 0x1f9a2,
-	0x1f9a5, 0x1f9aa,
-	0x1f9ae, 0x1f9ca,
-	0x1f9cd, 0x1fa53,
+	0x1f8b0, 0x1f8b1,
+	0x1f900, 0x1fa53,
 	0x1fa60, 0x1fa6d,
-	0x1fa70, 0x1fa73,
-	0x1fa78, 0x1fa7a,
-	0x1fa80, 0x1fa82,
-	0x1fa90, 0x1fa95,
+	0x1fa70, 0x1fa7c,
+	0x1fa80, 0x1fa88,
+	0x1fa90, 0x1fabd,
+	0x1fabf, 0x1fac5,
+	0x1face, 0x1fadb,
+	0x1fae0, 0x1fae8,
+	0x1faf0, 0x1faf8,
+	0x1fb00, 0x1fb92,
+	0x1fb94, 0x1fbca,
 }; /* CR_S */
 
 /* 'Sc': General Category */
@@ -11634,7 +12300,7 @@ static const OnigCodePoint CR_Sc[] = {
 	0x0bf9, 0x0bf9,
 	0x0e3f, 0x0e3f,
 	0x17db, 0x17db,
-	0x20a0, 0x20bf,
+	0x20a0, 0x20c0,
 	0xa838, 0xa838,
 	0xfdfc, 0xfdfc,
 	0xfe69, 0xfe69,
@@ -11648,7 +12314,7 @@ static const OnigCodePoint CR_Sc[] = {
 
 /* 'Sk': General Category */
 static const OnigCodePoint CR_Sk[] = {
-	29,
+	31,
 	0x005e, 0x005e,
 	0x0060, 0x0060,
 	0x00a8, 0x00a8,
@@ -11662,6 +12328,7 @@ static const OnigCodePoint CR_Sk[] = {
 	0x02ef, 0x02ff,
 	0x0375, 0x0375,
 	0x0384, 0x0385,
+	0x0888, 0x0888,
 	0x1fbd, 0x1fbd,
 	0x1fbf, 0x1fc1,
 	0x1fcd, 0x1fcf,
@@ -11673,7 +12340,8 @@ static const OnigCodePoint CR_Sk[] = {
 	0xa720, 0xa721,
 	0xa789, 0xa78a,
 	0xab5b, 0xab5b,
-	0xfbb2, 0xfbc1,
+	0xab6a, 0xab6b,
+	0xfbb2, 0xfbc2,
 	0xff3e, 0xff3e,
 	0xff40, 0xff40,
 	0xffe3, 0xffe3,
@@ -11751,7 +12419,7 @@ static const OnigCodePoint CR_Sm[] = {
 
 /* 'So': General Category */
 static const OnigCodePoint CR_So[] = {
-	180,
+	184,
 	0x00a6, 0x00a6,
 	0x00a9, 0x00a9,
 	0x00ae, 0x00ae,
@@ -11832,8 +12500,9 @@ static const OnigCodePoint CR_So[] = {
 	0x2b45, 0x2b46,
 	0x2b4d, 0x2b73,
 	0x2b76, 0x2b95,
-	0x2b98, 0x2bff,
+	0x2b97, 0x2bff,
 	0x2ce5, 0x2cea,
+	0x2e50, 0x2e51,
 	0x2e80, 0x2e99,
 	0x2e9b, 0x2ef3,
 	0x2f00, 0x2fd5,
@@ -11858,7 +12527,9 @@ static const OnigCodePoint CR_So[] = {
 	0xa836, 0xa837,
 	0xa839, 0xa839,
 	0xaa77, 0xaa79,
-	0xfdfd, 0xfdfd,
+	0xfd40, 0xfd4f,
+	0xfdcf, 0xfdcf,
+	0xfdfd, 0xfdff,
 	0xffe4, 0xffe4,
 	0xffe8, 0xffe8,
 	0xffed, 0xffee,
@@ -11866,7 +12537,7 @@ static const OnigCodePoint CR_So[] = {
 	0x10137, 0x1013f,
 	0x10179, 0x10189,
 	0x1018c, 0x1018e,
-	0x10190, 0x1019b,
+	0x10190, 0x1019c,
 	0x101a0, 0x101a0,
 	0x101d0, 0x101fc,
 	0x10877, 0x10878,
@@ -11877,13 +12548,14 @@ static const OnigCodePoint CR_So[] = {
 	0x16b3c, 0x16b3f,
 	0x16b45, 0x16b45,
 	0x1bc9c, 0x1bc9c,
+	0x1cf50, 0x1cfc3,
 	0x1d000, 0x1d0f5,
 	0x1d100, 0x1d126,
 	0x1d129, 0x1d164,
 	0x1d16a, 0x1d16c,
 	0x1d183, 0x1d184,
 	0x1d18c, 0x1d1a9,
-	0x1d1ae, 0x1d1e8,
+	0x1d1ae, 0x1d1ea,
 	0x1d200, 0x1d241,
 	0x1d245, 0x1d245,
 	0x1d300, 0x1d356,
@@ -11901,37 +12573,37 @@ static const OnigCodePoint CR_So[] = {
 	0x1f0b1, 0x1f0bf,
 	0x1f0c1, 0x1f0cf,
 	0x1f0d1, 0x1f0f5,
-	0x1f110, 0x1f16c,
-	0x1f170, 0x1f1ac,
+	0x1f10d, 0x1f1ad,
 	0x1f1e6, 0x1f202,
 	0x1f210, 0x1f23b,
 	0x1f240, 0x1f248,
 	0x1f250, 0x1f251,
 	0x1f260, 0x1f265,
 	0x1f300, 0x1f3fa,
-	0x1f400, 0x1f6d5,
-	0x1f6e0, 0x1f6ec,
-	0x1f6f0, 0x1f6fa,
-	0x1f700, 0x1f773,
-	0x1f780, 0x1f7d8,
+	0x1f400, 0x1f6d7,
+	0x1f6dc, 0x1f6ec,
+	0x1f6f0, 0x1f6fc,
+	0x1f700, 0x1f776,
+	0x1f77b, 0x1f7d9,
 	0x1f7e0, 0x1f7eb,
+	0x1f7f0, 0x1f7f0,
 	0x1f800, 0x1f80b,
 	0x1f810, 0x1f847,
 	0x1f850, 0x1f859,
 	0x1f860, 0x1f887,
 	0x1f890, 0x1f8ad,
-	0x1f900, 0x1f90b,
-	0x1f90d, 0x1f971,
-	0x1f973, 0x1f976,
-	0x1f97a, 0x1f9a2,
-	0x1f9a5, 0x1f9aa,
-	0x1f9ae, 0x1f9ca,
-	0x1f9cd, 0x1fa53,
+	0x1f8b0, 0x1f8b1,
+	0x1f900, 0x1fa53,
 	0x1fa60, 0x1fa6d,
-	0x1fa70, 0x1fa73,
-	0x1fa78, 0x1fa7a,
-	0x1fa80, 0x1fa82,
-	0x1fa90, 0x1fa95,
+	0x1fa70, 0x1fa7c,
+	0x1fa80, 0x1fa88,
+	0x1fa90, 0x1fabd,
+	0x1fabf, 0x1fac5,
+	0x1face, 0x1fadb,
+	0x1fae0, 0x1fae8,
+	0x1faf0, 0x1faf8,
+	0x1fb00, 0x1fb92,
+	0x1fb94, 0x1fbca,
 }; /* CR_So */
 
 /* 'Z': Major Category */
@@ -12125,7 +12797,7 @@ static const OnigCodePoint CR_Math[] = {
 
 /* 'Cased': Derived Property */
 static const OnigCodePoint CR_Cased[] = {
-	140,
+	157,
 	0x0041, 0x005a,
 	0x0061, 0x007a,
 	0x00aa, 0x00aa,
@@ -12157,7 +12829,7 @@ static const OnigCodePoint CR_Cased[] = {
 	0x10c7, 0x10c7,
 	0x10cd, 0x10cd,
 	0x10d0, 0x10fa,
-	0x10fd, 0x10ff,
+	0x10fc, 0x10ff,
 	0x13a0, 0x13f5,
 	0x13f8, 0x13fd,
 	0x1c80, 0x1c88,
@@ -12203,9 +12875,7 @@ static const OnigCodePoint CR_Cased[] = {
 	0x2160, 0x217f,
 	0x2183, 0x2184,
 	0x24b6, 0x24e9,
-	0x2c00, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2ce4,
+	0x2c00, 0x2ce4,
 	0x2ceb, 0x2cee,
 	0x2cf2, 0x2cf3,
 	0x2d00, 0x2d25,
@@ -12215,11 +12885,14 @@ static const OnigCodePoint CR_Cased[] = {
 	0xa680, 0xa69d,
 	0xa722, 0xa787,
 	0xa78b, 0xa78e,
-	0xa790, 0xa7bf,
-	0xa7c2, 0xa7c6,
+	0xa790, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa7f6,
 	0xa7f8, 0xa7fa,
 	0xab30, 0xab5a,
-	0xab5c, 0xab67,
+	0xab5c, 0xab69,
 	0xab70, 0xabbf,
 	0xfb00, 0xfb06,
 	0xfb13, 0xfb17,
@@ -12228,6 +12901,18 @@ static const OnigCodePoint CR_Cased[] = {
 	0x10400, 0x1044f,
 	0x104b0, 0x104d3,
 	0x104d8, 0x104fb,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
+	0x10780, 0x10780,
+	0x10783, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10c80, 0x10cb2,
 	0x10cc0, 0x10cf2,
 	0x118a0, 0x118df,
@@ -12262,6 +12947,10 @@ static const OnigCodePoint CR_Cased[] = {
 	0x1d78a, 0x1d7a8,
 	0x1d7aa, 0x1d7c2,
 	0x1d7c4, 0x1d7cb,
+	0x1df00, 0x1df09,
+	0x1df0b, 0x1df1e,
+	0x1df25, 0x1df2a,
+	0x1e030, 0x1e06d,
 	0x1e900, 0x1e943,
 	0x1f130, 0x1f149,
 	0x1f150, 0x1f169,
@@ -12270,7 +12959,7 @@ static const OnigCodePoint CR_Cased[] = {
 
 /* 'Case_Ignorable': Derived Property */
 static const OnigCodePoint CR_Case_Ignorable[] = {
-	401,
+	437,
 	0x0027, 0x0027,
 	0x002e, 0x002e,
 	0x003a, 0x003a,
@@ -12288,6 +12977,7 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x0387, 0x0387,
 	0x0483, 0x0489,
 	0x0559, 0x0559,
+	0x055f, 0x055f,
 	0x0591, 0x05bd,
 	0x05bf, 0x05bf,
 	0x05c1, 0x05c2,
@@ -12312,7 +13002,10 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x07fd, 0x07fd,
 	0x0816, 0x082d,
 	0x0859, 0x085b,
-	0x08d3, 0x0902,
+	0x0888, 0x0888,
+	0x0890, 0x0891,
+	0x0898, 0x089f,
+	0x08c9, 0x0902,
 	0x093a, 0x093a,
 	0x093c, 0x093c,
 	0x0941, 0x0948,
@@ -12346,13 +13039,14 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x0b3f, 0x0b3f,
 	0x0b41, 0x0b44,
 	0x0b4d, 0x0b4d,
-	0x0b56, 0x0b56,
+	0x0b55, 0x0b56,
 	0x0b62, 0x0b63,
 	0x0b82, 0x0b82,
 	0x0bc0, 0x0bc0,
 	0x0bcd, 0x0bcd,
 	0x0c00, 0x0c00,
 	0x0c04, 0x0c04,
+	0x0c3c, 0x0c3c,
 	0x0c3e, 0x0c40,
 	0x0c46, 0x0c48,
 	0x0c4a, 0x0c4d,
@@ -12369,6 +13063,7 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x0d41, 0x0d44,
 	0x0d4d, 0x0d4d,
 	0x0d62, 0x0d63,
+	0x0d81, 0x0d81,
 	0x0dca, 0x0dca,
 	0x0dd2, 0x0dd4,
 	0x0dd6, 0x0dd6,
@@ -12378,7 +13073,7 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x0eb1, 0x0eb1,
 	0x0eb4, 0x0ebc,
 	0x0ec6, 0x0ec6,
-	0x0ec8, 0x0ecd,
+	0x0ec8, 0x0ece,
 	0x0f18, 0x0f19,
 	0x0f35, 0x0f35,
 	0x0f37, 0x0f37,
@@ -12403,7 +13098,7 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x10fc, 0x10fc,
 	0x135d, 0x135f,
 	0x1712, 0x1714,
-	0x1732, 0x1734,
+	0x1732, 0x1733,
 	0x1752, 0x1753,
 	0x1772, 0x1773,
 	0x17b4, 0x17b5,
@@ -12412,7 +13107,7 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x17c9, 0x17d3,
 	0x17d7, 0x17d7,
 	0x17dd, 0x17dd,
-	0x180b, 0x180e,
+	0x180b, 0x180f,
 	0x1843, 0x1843,
 	0x1885, 0x1886,
 	0x18a9, 0x18a9,
@@ -12430,7 +13125,7 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x1a73, 0x1a7c,
 	0x1a7f, 0x1a7f,
 	0x1aa7, 0x1aa7,
-	0x1ab0, 0x1abe,
+	0x1ab0, 0x1ace,
 	0x1b00, 0x1b03,
 	0x1b34, 0x1b34,
 	0x1b36, 0x1b3a,
@@ -12456,8 +13151,7 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x1cf8, 0x1cf9,
 	0x1d2c, 0x1d6a,
 	0x1d78, 0x1d78,
-	0x1d9b, 0x1df9,
-	0x1dfb, 0x1dff,
+	0x1d9b, 0x1dff,
 	0x1fbd, 0x1fbd,
 	0x1fbf, 0x1fc1,
 	0x1fcd, 0x1fcf,
@@ -12498,11 +13192,13 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0xa700, 0xa721,
 	0xa770, 0xa770,
 	0xa788, 0xa78a,
+	0xa7f2, 0xa7f4,
 	0xa7f8, 0xa7f9,
 	0xa802, 0xa802,
 	0xa806, 0xa806,
 	0xa80b, 0xa80b,
 	0xa825, 0xa826,
+	0xa82c, 0xa82c,
 	0xa8c4, 0xa8c5,
 	0xa8e0, 0xa8f1,
 	0xa8ff, 0xa8ff,
@@ -12531,11 +13227,12 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0xaaf3, 0xaaf4,
 	0xaaf6, 0xaaf6,
 	0xab5b, 0xab5f,
+	0xab69, 0xab6b,
 	0xabe5, 0xabe5,
 	0xabe8, 0xabe8,
 	0xabed, 0xabed,
 	0xfb1e, 0xfb1e,
-	0xfbb2, 0xfbc1,
+	0xfbb2, 0xfbc2,
 	0xfe00, 0xfe0f,
 	0xfe13, 0xfe13,
 	0xfe20, 0xfe2f,
@@ -12554,6 +13251,9 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x101fd, 0x101fd,
 	0x102e0, 0x102e0,
 	0x10376, 0x1037a,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10a01, 0x10a03,
 	0x10a05, 0x10a06,
 	0x10a0c, 0x10a0f,
@@ -12561,13 +13261,19 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x10a3f, 0x10a3f,
 	0x10ae5, 0x10ae6,
 	0x10d24, 0x10d27,
+	0x10eab, 0x10eac,
+	0x10efd, 0x10eff,
 	0x10f46, 0x10f50,
+	0x10f82, 0x10f85,
 	0x11001, 0x11001,
 	0x11038, 0x11046,
+	0x11070, 0x11070,
+	0x11073, 0x11074,
 	0x1107f, 0x11081,
 	0x110b3, 0x110b6,
 	0x110b9, 0x110ba,
 	0x110bd, 0x110bd,
+	0x110c2, 0x110c2,
 	0x110cd, 0x110cd,
 	0x11100, 0x11102,
 	0x11127, 0x1112b,
@@ -12576,10 +13282,12 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x11180, 0x11181,
 	0x111b6, 0x111be,
 	0x111c9, 0x111cc,
+	0x111cf, 0x111cf,
 	0x1122f, 0x11231,
 	0x11234, 0x11234,
 	0x11236, 0x11237,
 	0x1123e, 0x1123e,
+	0x11241, 0x11241,
 	0x112df, 0x112df,
 	0x112e3, 0x112ea,
 	0x11300, 0x11301,
@@ -12611,6 +13319,9 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x11727, 0x1172b,
 	0x1182f, 0x11837,
 	0x11839, 0x1183a,
+	0x1193b, 0x1193c,
+	0x1193e, 0x1193e,
+	0x11943, 0x11943,
 	0x119d4, 0x119d7,
 	0x119da, 0x119db,
 	0x119e0, 0x119e0,
@@ -12638,16 +13349,26 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x11d95, 0x11d95,
 	0x11d97, 0x11d97,
 	0x11ef3, 0x11ef4,
-	0x13430, 0x13438,
+	0x11f00, 0x11f01,
+	0x11f36, 0x11f3a,
+	0x11f40, 0x11f40,
+	0x11f42, 0x11f42,
+	0x13430, 0x13440,
+	0x13447, 0x13455,
 	0x16af0, 0x16af4,
 	0x16b30, 0x16b36,
 	0x16b40, 0x16b43,
 	0x16f4f, 0x16f4f,
 	0x16f8f, 0x16f9f,
 	0x16fe0, 0x16fe1,
-	0x16fe3, 0x16fe3,
+	0x16fe3, 0x16fe4,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
 	0x1bc9d, 0x1bc9e,
 	0x1bca0, 0x1bca3,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
 	0x1d167, 0x1d169,
 	0x1d173, 0x1d182,
 	0x1d185, 0x1d18b,
@@ -12664,8 +13385,12 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e030, 0x1e06d,
+	0x1e08f, 0x1e08f,
 	0x1e130, 0x1e13d,
+	0x1e2ae, 0x1e2ae,
 	0x1e2ec, 0x1e2ef,
+	0x1e4eb, 0x1e4ef,
 	0x1e8d0, 0x1e8d6,
 	0x1e944, 0x1e94b,
 	0x1f3fb, 0x1f3ff,
@@ -12676,7 +13401,7 @@ static const OnigCodePoint CR_Case_Ignorable[] = {
 
 /* 'Changes_When_Lowercased': Derived Property */
 static const OnigCodePoint CR_Changes_When_Lowercased[] = {
-	599,
+	609,
 	0x0041, 0x005a,
 	0x00c0, 0x00d6,
 	0x00d8, 0x00de,
@@ -13102,7 +13827,7 @@ static const OnigCodePoint CR_Changes_When_Lowercased[] = {
 	0x2160, 0x216f,
 	0x2183, 0x2183,
 	0x24b6, 0x24cf,
-	0x2c00, 0x2c2e,
+	0x2c00, 0x2c2f,
 	0x2c60, 0x2c60,
 	0x2c62, 0x2c64,
 	0x2c67, 0x2c67,
@@ -13267,11 +13992,21 @@ static const OnigCodePoint CR_Changes_When_Lowercased[] = {
 	0xa7ba, 0xa7ba,
 	0xa7bc, 0xa7bc,
 	0xa7be, 0xa7be,
+	0xa7c0, 0xa7c0,
 	0xa7c2, 0xa7c2,
-	0xa7c4, 0xa7c6,
+	0xa7c4, 0xa7c7,
+	0xa7c9, 0xa7c9,
+	0xa7d0, 0xa7d0,
+	0xa7d6, 0xa7d6,
+	0xa7d8, 0xa7d8,
+	0xa7f5, 0xa7f5,
 	0xff21, 0xff3a,
 	0x10400, 0x10427,
 	0x104b0, 0x104d3,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
 	0x10c80, 0x10cb2,
 	0x118a0, 0x118bf,
 	0x16e40, 0x16e5f,
@@ -13280,7 +14015,7 @@ static const OnigCodePoint CR_Changes_When_Lowercased[] = {
 
 /* 'Changes_When_Uppercased': Derived Property */
 static const OnigCodePoint CR_Changes_When_Uppercased[] = {
-	616,
+	627,
 	0x0061, 0x007a,
 	0x00b5, 0x00b5,
 	0x00df, 0x00f6,
@@ -13720,7 +14455,7 @@ static const OnigCodePoint CR_Changes_When_Uppercased[] = {
 	0x2170, 0x217f,
 	0x2184, 0x2184,
 	0x24d0, 0x24e9,
-	0x2c30, 0x2c5e,
+	0x2c30, 0x2c5f,
 	0x2c61, 0x2c61,
 	0x2c65, 0x2c66,
 	0x2c68, 0x2c68,
@@ -13885,7 +14620,14 @@ static const OnigCodePoint CR_Changes_When_Uppercased[] = {
 	0xa7bb, 0xa7bb,
 	0xa7bd, 0xa7bd,
 	0xa7bf, 0xa7bf,
+	0xa7c1, 0xa7c1,
 	0xa7c3, 0xa7c3,
+	0xa7c8, 0xa7c8,
+	0xa7ca, 0xa7ca,
+	0xa7d1, 0xa7d1,
+	0xa7d7, 0xa7d7,
+	0xa7d9, 0xa7d9,
+	0xa7f6, 0xa7f6,
 	0xab53, 0xab53,
 	0xab70, 0xabbf,
 	0xfb00, 0xfb06,
@@ -13893,6 +14635,10 @@ static const OnigCodePoint CR_Changes_When_Uppercased[] = {
 	0xff41, 0xff5a,
 	0x10428, 0x1044f,
 	0x104d8, 0x104fb,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10cc0, 0x10cf2,
 	0x118c0, 0x118df,
 	0x16e60, 0x16e7f,
@@ -13901,7 +14647,7 @@ static const OnigCodePoint CR_Changes_When_Uppercased[] = {
 
 /* 'Changes_When_Titlecased': Derived Property */
 static const OnigCodePoint CR_Changes_When_Titlecased[] = {
-	615,
+	626,
 	0x0061, 0x007a,
 	0x00b5, 0x00b5,
 	0x00df, 0x00f6,
@@ -14340,7 +15086,7 @@ static const OnigCodePoint CR_Changes_When_Titlecased[] = {
 	0x2170, 0x217f,
 	0x2184, 0x2184,
 	0x24d0, 0x24e9,
-	0x2c30, 0x2c5e,
+	0x2c30, 0x2c5f,
 	0x2c61, 0x2c61,
 	0x2c65, 0x2c66,
 	0x2c68, 0x2c68,
@@ -14505,7 +15251,14 @@ static const OnigCodePoint CR_Changes_When_Titlecased[] = {
 	0xa7bb, 0xa7bb,
 	0xa7bd, 0xa7bd,
 	0xa7bf, 0xa7bf,
+	0xa7c1, 0xa7c1,
 	0xa7c3, 0xa7c3,
+	0xa7c8, 0xa7c8,
+	0xa7ca, 0xa7ca,
+	0xa7d1, 0xa7d1,
+	0xa7d7, 0xa7d7,
+	0xa7d9, 0xa7d9,
+	0xa7f6, 0xa7f6,
 	0xab53, 0xab53,
 	0xab70, 0xabbf,
 	0xfb00, 0xfb06,
@@ -14513,6 +15266,10 @@ static const OnigCodePoint CR_Changes_When_Titlecased[] = {
 	0xff41, 0xff5a,
 	0x10428, 0x1044f,
 	0x104d8, 0x104fb,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10cc0, 0x10cf2,
 	0x118c0, 0x118df,
 	0x16e60, 0x16e7f,
@@ -14521,7 +15278,7 @@ static const OnigCodePoint CR_Changes_When_Titlecased[] = {
 
 /* 'Changes_When_Casefolded': Derived Property */
 static const OnigCodePoint CR_Changes_When_Casefolded[] = {
-	612,
+	622,
 	0x0041, 0x005a,
 	0x00b5, 0x00b5,
 	0x00c0, 0x00d6,
@@ -14957,7 +15714,7 @@ static const OnigCodePoint CR_Changes_When_Casefolded[] = {
 	0x2160, 0x216f,
 	0x2183, 0x2183,
 	0x24b6, 0x24cf,
-	0x2c00, 0x2c2e,
+	0x2c00, 0x2c2f,
 	0x2c60, 0x2c60,
 	0x2c62, 0x2c64,
 	0x2c67, 0x2c67,
@@ -15122,14 +15879,24 @@ static const OnigCodePoint CR_Changes_When_Casefolded[] = {
 	0xa7ba, 0xa7ba,
 	0xa7bc, 0xa7bc,
 	0xa7be, 0xa7be,
+	0xa7c0, 0xa7c0,
 	0xa7c2, 0xa7c2,
-	0xa7c4, 0xa7c6,
+	0xa7c4, 0xa7c7,
+	0xa7c9, 0xa7c9,
+	0xa7d0, 0xa7d0,
+	0xa7d6, 0xa7d6,
+	0xa7d8, 0xa7d8,
+	0xa7f5, 0xa7f5,
 	0xab70, 0xabbf,
 	0xfb00, 0xfb06,
 	0xfb13, 0xfb17,
 	0xff21, 0xff3a,
 	0x10400, 0x10427,
 	0x104b0, 0x104d3,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
 	0x10c80, 0x10cb2,
 	0x118a0, 0x118bf,
 	0x16e40, 0x16e5f,
@@ -15138,7 +15905,7 @@ static const OnigCodePoint CR_Changes_When_Casefolded[] = {
 
 /* 'Changes_When_Casemapped': Derived Property */
 static const OnigCodePoint CR_Changes_When_Casemapped[] = {
-	123,
+	131,
 	0x0041, 0x005a,
 	0x0061, 0x007a,
 	0x00b5, 0x00b5,
@@ -15227,9 +15994,7 @@ static const OnigCodePoint CR_Changes_When_Casemapped[] = {
 	0x2160, 0x217f,
 	0x2183, 0x2184,
 	0x24b6, 0x24e9,
-	0x2c00, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2c70,
+	0x2c00, 0x2c70,
 	0x2c72, 0x2c73,
 	0x2c75, 0x2c76,
 	0x2c7e, 0x2ce3,
@@ -15246,8 +16011,10 @@ static const OnigCodePoint CR_Changes_When_Casemapped[] = {
 	0xa78b, 0xa78d,
 	0xa790, 0xa794,
 	0xa796, 0xa7ae,
-	0xa7b0, 0xa7bf,
-	0xa7c2, 0xa7c6,
+	0xa7b0, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d6, 0xa7d9,
+	0xa7f5, 0xa7f6,
 	0xab53, 0xab53,
 	0xab70, 0xabbf,
 	0xfb00, 0xfb06,
@@ -15257,6 +16024,14 @@ static const OnigCodePoint CR_Changes_When_Casemapped[] = {
 	0x10400, 0x1044f,
 	0x104b0, 0x104d3,
 	0x104d8, 0x104fb,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10c80, 0x10cb2,
 	0x10cc0, 0x10cf2,
 	0x118a0, 0x118df,
@@ -15266,7 +16041,7 @@ static const OnigCodePoint CR_Changes_When_Casemapped[] = {
 
 /* 'ID_Start': Derived Property */
 static const OnigCodePoint CR_ID_Start[] = {
-	609,
+	659,
 	0x0041, 0x005a,
 	0x0061, 0x007a,
 	0x00aa, 0x00aa,
@@ -15316,8 +16091,9 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x0828, 0x0828,
 	0x0840, 0x0858,
 	0x0860, 0x086a,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
+	0x0870, 0x0887,
+	0x0889, 0x088e,
+	0x08a0, 0x08c9,
 	0x0904, 0x0939,
 	0x093d, 0x093d,
 	0x0950, 0x0950,
@@ -15382,6 +16158,7 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x0c2a, 0x0c39,
 	0x0c3d, 0x0c3d,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c61,
 	0x0c80, 0x0c80,
 	0x0c85, 0x0c8c,
@@ -15390,10 +16167,10 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x0caa, 0x0cb3,
 	0x0cb5, 0x0cb9,
 	0x0cbd, 0x0cbd,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce1,
 	0x0cf1, 0x0cf2,
-	0x0d05, 0x0d0c,
+	0x0d04, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d3a,
 	0x0d3d, 0x0d3d,
@@ -15461,9 +16238,8 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x1681, 0x169a,
 	0x16a0, 0x16ea,
 	0x16ee, 0x16f8,
-	0x1700, 0x170c,
-	0x170e, 0x1711,
-	0x1720, 0x1731,
+	0x1700, 0x1711,
+	0x171f, 0x1731,
 	0x1740, 0x1751,
 	0x1760, 0x176c,
 	0x176e, 0x1770,
@@ -15483,7 +16259,7 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x1a20, 0x1a54,
 	0x1aa7, 0x1aa7,
 	0x1b05, 0x1b33,
-	0x1b45, 0x1b4b,
+	0x1b45, 0x1b4c,
 	0x1b83, 0x1ba0,
 	0x1bae, 0x1baf,
 	0x1bba, 0x1be5,
@@ -15533,9 +16309,7 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x2145, 0x2149,
 	0x214e, 0x214e,
 	0x2160, 0x2188,
-	0x2c00, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2ce4,
+	0x2c00, 0x2ce4,
 	0x2ceb, 0x2cee,
 	0x2cf2, 0x2cf3,
 	0x2d00, 0x2d25,
@@ -15562,11 +16336,10 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x30fc, 0x30ff,
 	0x3105, 0x312f,
 	0x3131, 0x318e,
-	0x31a0, 0x31ba,
+	0x31a0, 0x31bf,
 	0x31f0, 0x31ff,
-	0x3400, 0x4db5,
-	0x4e00, 0x9fef,
-	0xa000, 0xa48c,
+	0x3400, 0x4dbf,
+	0x4e00, 0xa48c,
 	0xa4d0, 0xa4fd,
 	0xa500, 0xa60c,
 	0xa610, 0xa61f,
@@ -15576,9 +16349,11 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0xa6a0, 0xa6ef,
 	0xa717, 0xa71f,
 	0xa722, 0xa788,
-	0xa78b, 0xa7bf,
-	0xa7c2, 0xa7c6,
-	0xa7f7, 0xa801,
+	0xa78b, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa801,
 	0xa803, 0xa805,
 	0xa807, 0xa80a,
 	0xa80c, 0xa822,
@@ -15615,7 +16390,7 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0xab20, 0xab26,
 	0xab28, 0xab2e,
 	0xab30, 0xab5a,
-	0xab5c, 0xab67,
+	0xab5c, 0xab69,
 	0xab70, 0xabe2,
 	0xac00, 0xd7a3,
 	0xd7b0, 0xd7c6,
@@ -15667,9 +16442,20 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x104d8, 0x104fb,
 	0x10500, 0x10527,
 	0x10530, 0x10563,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10600, 0x10736,
 	0x10740, 0x10755,
 	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10800, 0x10805,
 	0x10808, 0x10808,
 	0x1080a, 0x10835,
@@ -15700,15 +16486,22 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x10c80, 0x10cb2,
 	0x10cc0, 0x10cf2,
 	0x10d00, 0x10d23,
+	0x10e80, 0x10ea9,
+	0x10eb0, 0x10eb1,
 	0x10f00, 0x10f1c,
 	0x10f27, 0x10f27,
 	0x10f30, 0x10f45,
+	0x10f70, 0x10f81,
+	0x10fb0, 0x10fc4,
 	0x10fe0, 0x10ff6,
 	0x11003, 0x11037,
+	0x11071, 0x11072,
+	0x11075, 0x11075,
 	0x11083, 0x110af,
 	0x110d0, 0x110e8,
 	0x11103, 0x11126,
 	0x11144, 0x11144,
+	0x11147, 0x11147,
 	0x11150, 0x11172,
 	0x11176, 0x11176,
 	0x11183, 0x111b2,
@@ -15717,6 +16510,7 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x111dc, 0x111dc,
 	0x11200, 0x11211,
 	0x11213, 0x1122b,
+	0x1123f, 0x11240,
 	0x11280, 0x11286,
 	0x11288, 0x11288,
 	0x1128a, 0x1128d,
@@ -15734,7 +16528,7 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x1135d, 0x11361,
 	0x11400, 0x11434,
 	0x11447, 0x1144a,
-	0x1145f, 0x1145f,
+	0x1145f, 0x11461,
 	0x11480, 0x114af,
 	0x114c4, 0x114c5,
 	0x114c7, 0x114c7,
@@ -15745,9 +16539,16 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x11680, 0x116aa,
 	0x116b8, 0x116b8,
 	0x11700, 0x1171a,
+	0x11740, 0x11746,
 	0x11800, 0x1182b,
 	0x118a0, 0x118df,
-	0x118ff, 0x118ff,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x1192f,
+	0x1193f, 0x1193f,
+	0x11941, 0x11941,
 	0x119a0, 0x119a7,
 	0x119aa, 0x119d0,
 	0x119e1, 0x119e1,
@@ -15758,7 +16559,7 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x11a50, 0x11a50,
 	0x11a5c, 0x11a89,
 	0x11a9d, 0x11a9d,
-	0x11ac0, 0x11af8,
+	0x11ab0, 0x11af8,
 	0x11c00, 0x11c08,
 	0x11c0a, 0x11c2e,
 	0x11c40, 0x11c40,
@@ -15772,13 +16573,20 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x11d6a, 0x11d89,
 	0x11d98, 0x11d98,
 	0x11ee0, 0x11ef2,
+	0x11f02, 0x11f02,
+	0x11f04, 0x11f10,
+	0x11f12, 0x11f33,
+	0x11fb0, 0x11fb0,
 	0x12000, 0x12399,
 	0x12400, 0x1246e,
 	0x12480, 0x12543,
-	0x13000, 0x1342e,
+	0x12f90, 0x12ff0,
+	0x13000, 0x1342f,
+	0x13441, 0x13446,
 	0x14400, 0x14646,
 	0x16800, 0x16a38,
 	0x16a40, 0x16a5e,
+	0x16a70, 0x16abe,
 	0x16ad0, 0x16aed,
 	0x16b00, 0x16b2f,
 	0x16b40, 0x16b43,
@@ -15791,9 +16599,15 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x16fe0, 0x16fe1,
 	0x16fe3, 0x16fe3,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
-	0x1b000, 0x1b11e,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 	0x1b170, 0x1b2fb,
 	0x1bc00, 0x1bc6a,
@@ -15830,10 +16644,19 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x1d78a, 0x1d7a8,
 	0x1d7aa, 0x1d7c2,
 	0x1d7c4, 0x1d7cb,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
+	0x1e030, 0x1e06d,
 	0x1e100, 0x1e12c,
 	0x1e137, 0x1e13d,
 	0x1e14e, 0x1e14e,
+	0x1e290, 0x1e2ad,
 	0x1e2c0, 0x1e2eb,
+	0x1e4d0, 0x1e4eb,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 	0x1e800, 0x1e8c4,
 	0x1e900, 0x1e943,
 	0x1e94b, 0x1e94b,
@@ -15870,17 +16693,19 @@ static const OnigCodePoint CR_ID_Start[] = {
 	0x1eea1, 0x1eea3,
 	0x1eea5, 0x1eea9,
 	0x1eeab, 0x1eebb,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 }; /* CR_ID_Start */
 
 /* 'ID_Continue': Derived Property */
 static const OnigCodePoint CR_ID_Continue[] = {
-	713,
+	768,
 	0x0030, 0x0039,
 	0x0041, 0x005a,
 	0x005f, 0x005f,
@@ -15932,9 +16757,9 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x0800, 0x082d,
 	0x0840, 0x085b,
 	0x0860, 0x086a,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
-	0x08d3, 0x08e1,
+	0x0870, 0x0887,
+	0x0889, 0x088e,
+	0x0898, 0x08e1,
 	0x08e3, 0x0963,
 	0x0966, 0x096f,
 	0x0971, 0x0983,
@@ -15993,7 +16818,7 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x0b3c, 0x0b44,
 	0x0b47, 0x0b48,
 	0x0b4b, 0x0b4d,
-	0x0b56, 0x0b57,
+	0x0b55, 0x0b57,
 	0x0b5c, 0x0b5d,
 	0x0b5f, 0x0b63,
 	0x0b66, 0x0b6f,
@@ -16018,11 +16843,12 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x0c0e, 0x0c10,
 	0x0c12, 0x0c28,
 	0x0c2a, 0x0c39,
-	0x0c3d, 0x0c44,
+	0x0c3c, 0x0c44,
 	0x0c46, 0x0c48,
 	0x0c4a, 0x0c4d,
 	0x0c55, 0x0c56,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c63,
 	0x0c66, 0x0c6f,
 	0x0c80, 0x0c83,
@@ -16035,12 +16861,11 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x0cc6, 0x0cc8,
 	0x0cca, 0x0ccd,
 	0x0cd5, 0x0cd6,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce3,
 	0x0ce6, 0x0cef,
-	0x0cf1, 0x0cf2,
-	0x0d00, 0x0d03,
-	0x0d05, 0x0d0c,
+	0x0cf1, 0x0cf3,
+	0x0d00, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d44,
 	0x0d46, 0x0d48,
@@ -16049,7 +16874,7 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x0d5f, 0x0d63,
 	0x0d66, 0x0d6f,
 	0x0d7a, 0x0d7f,
-	0x0d82, 0x0d83,
+	0x0d81, 0x0d83,
 	0x0d85, 0x0d96,
 	0x0d9a, 0x0db1,
 	0x0db3, 0x0dbb,
@@ -16072,7 +16897,7 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x0ea7, 0x0ebd,
 	0x0ec0, 0x0ec4,
 	0x0ec6, 0x0ec6,
-	0x0ec8, 0x0ecd,
+	0x0ec8, 0x0ece,
 	0x0ed0, 0x0ed9,
 	0x0edc, 0x0edf,
 	0x0f00, 0x0f00,
@@ -16119,9 +16944,8 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x1681, 0x169a,
 	0x16a0, 0x16ea,
 	0x16ee, 0x16f8,
-	0x1700, 0x170c,
-	0x170e, 0x1714,
-	0x1720, 0x1734,
+	0x1700, 0x1715,
+	0x171f, 0x1734,
 	0x1740, 0x1753,
 	0x1760, 0x176c,
 	0x176e, 0x1770,
@@ -16131,7 +16955,7 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x17dc, 0x17dd,
 	0x17e0, 0x17e9,
 	0x180b, 0x180d,
-	0x1810, 0x1819,
+	0x180f, 0x1819,
 	0x1820, 0x1878,
 	0x1880, 0x18aa,
 	0x18b0, 0x18f5,
@@ -16150,7 +16974,8 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x1a90, 0x1a99,
 	0x1aa7, 0x1aa7,
 	0x1ab0, 0x1abd,
-	0x1b00, 0x1b4b,
+	0x1abf, 0x1ace,
+	0x1b00, 0x1b4c,
 	0x1b50, 0x1b59,
 	0x1b6b, 0x1b73,
 	0x1b80, 0x1bf3,
@@ -16162,8 +16987,7 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x1cbd, 0x1cbf,
 	0x1cd0, 0x1cd2,
 	0x1cd4, 0x1cfa,
-	0x1d00, 0x1df9,
-	0x1dfb, 0x1f15,
+	0x1d00, 0x1f15,
 	0x1f18, 0x1f1d,
 	0x1f20, 0x1f45,
 	0x1f48, 0x1f4d,
@@ -16203,9 +17027,7 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x2145, 0x2149,
 	0x214e, 0x214e,
 	0x2160, 0x2188,
-	0x2c00, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2ce4,
+	0x2c00, 0x2ce4,
 	0x2ceb, 0x2cf3,
 	0x2d00, 0x2d25,
 	0x2d27, 0x2d27,
@@ -16232,11 +17054,10 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x30fc, 0x30ff,
 	0x3105, 0x312f,
 	0x3131, 0x318e,
-	0x31a0, 0x31ba,
+	0x31a0, 0x31bf,
 	0x31f0, 0x31ff,
-	0x3400, 0x4db5,
-	0x4e00, 0x9fef,
-	0xa000, 0xa48c,
+	0x3400, 0x4dbf,
+	0x4e00, 0xa48c,
 	0xa4d0, 0xa4fd,
 	0xa500, 0xa60c,
 	0xa610, 0xa62b,
@@ -16245,9 +17066,12 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0xa67f, 0xa6f1,
 	0xa717, 0xa71f,
 	0xa722, 0xa788,
-	0xa78b, 0xa7bf,
-	0xa7c2, 0xa7c6,
-	0xa7f7, 0xa827,
+	0xa78b, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa827,
+	0xa82c, 0xa82c,
 	0xa840, 0xa873,
 	0xa880, 0xa8c5,
 	0xa8d0, 0xa8d9,
@@ -16273,7 +17097,7 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0xab20, 0xab26,
 	0xab28, 0xab2e,
 	0xab30, 0xab5a,
-	0xab5c, 0xab67,
+	0xab5c, 0xab69,
 	0xab70, 0xabea,
 	0xabec, 0xabed,
 	0xabf0, 0xabf9,
@@ -16335,9 +17159,20 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x104d8, 0x104fb,
 	0x10500, 0x10527,
 	0x10530, 0x10563,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10600, 0x10736,
 	0x10740, 0x10755,
 	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10800, 0x10805,
 	0x10808, 0x10808,
 	0x1080a, 0x10835,
@@ -16372,27 +17207,33 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x10cc0, 0x10cf2,
 	0x10d00, 0x10d27,
 	0x10d30, 0x10d39,
-	0x10f00, 0x10f1c,
+	0x10e80, 0x10ea9,
+	0x10eab, 0x10eac,
+	0x10eb0, 0x10eb1,
+	0x10efd, 0x10f1c,
 	0x10f27, 0x10f27,
 	0x10f30, 0x10f50,
+	0x10f70, 0x10f85,
+	0x10fb0, 0x10fc4,
 	0x10fe0, 0x10ff6,
 	0x11000, 0x11046,
-	0x11066, 0x1106f,
+	0x11066, 0x11075,
 	0x1107f, 0x110ba,
+	0x110c2, 0x110c2,
 	0x110d0, 0x110e8,
 	0x110f0, 0x110f9,
 	0x11100, 0x11134,
 	0x11136, 0x1113f,
-	0x11144, 0x11146,
+	0x11144, 0x11147,
 	0x11150, 0x11173,
 	0x11176, 0x11176,
 	0x11180, 0x111c4,
 	0x111c9, 0x111cc,
-	0x111d0, 0x111da,
+	0x111ce, 0x111da,
 	0x111dc, 0x111dc,
 	0x11200, 0x11211,
 	0x11213, 0x11237,
-	0x1123e, 0x1123e,
+	0x1123e, 0x11241,
 	0x11280, 0x11286,
 	0x11288, 0x11288,
 	0x1128a, 0x1128d,
@@ -16417,7 +17258,7 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x11370, 0x11374,
 	0x11400, 0x1144a,
 	0x11450, 0x11459,
-	0x1145e, 0x1145f,
+	0x1145e, 0x11461,
 	0x11480, 0x114c5,
 	0x114c7, 0x114c7,
 	0x114d0, 0x114d9,
@@ -16432,9 +17273,17 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x11700, 0x1171a,
 	0x1171d, 0x1172b,
 	0x11730, 0x11739,
+	0x11740, 0x11746,
 	0x11800, 0x1183a,
 	0x118a0, 0x118e9,
-	0x118ff, 0x118ff,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x11943,
+	0x11950, 0x11959,
 	0x119a0, 0x119a7,
 	0x119aa, 0x119d7,
 	0x119da, 0x119e1,
@@ -16443,7 +17292,7 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x11a47, 0x11a47,
 	0x11a50, 0x11a99,
 	0x11a9d, 0x11a9d,
-	0x11ac0, 0x11af8,
+	0x11ab0, 0x11af8,
 	0x11c00, 0x11c08,
 	0x11c0a, 0x11c36,
 	0x11c38, 0x11c40,
@@ -16465,14 +17314,23 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x11d93, 0x11d98,
 	0x11da0, 0x11da9,
 	0x11ee0, 0x11ef6,
+	0x11f00, 0x11f10,
+	0x11f12, 0x11f3a,
+	0x11f3e, 0x11f42,
+	0x11f50, 0x11f59,
+	0x11fb0, 0x11fb0,
 	0x12000, 0x12399,
 	0x12400, 0x1246e,
 	0x12480, 0x12543,
-	0x13000, 0x1342e,
+	0x12f90, 0x12ff0,
+	0x13000, 0x1342f,
+	0x13440, 0x13455,
 	0x14400, 0x14646,
 	0x16800, 0x16a38,
 	0x16a40, 0x16a5e,
 	0x16a60, 0x16a69,
+	0x16a70, 0x16abe,
+	0x16ac0, 0x16ac9,
 	0x16ad0, 0x16aed,
 	0x16af0, 0x16af4,
 	0x16b00, 0x16b36,
@@ -16485,11 +17343,18 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x16f4f, 0x16f87,
 	0x16f8f, 0x16f9f,
 	0x16fe0, 0x16fe1,
-	0x16fe3, 0x16fe3,
+	0x16fe3, 0x16fe4,
+	0x16ff0, 0x16ff1,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
-	0x1b000, 0x1b11e,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 	0x1b170, 0x1b2fb,
 	0x1bc00, 0x1bc6a,
@@ -16497,6 +17362,8 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x1bc80, 0x1bc88,
 	0x1bc90, 0x1bc99,
 	0x1bc9d, 0x1bc9e,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
 	0x1d165, 0x1d169,
 	0x1d16d, 0x1d172,
 	0x1d17b, 0x1d182,
@@ -16540,16 +17407,26 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x1da84, 0x1da84,
 	0x1da9b, 0x1da9f,
 	0x1daa1, 0x1daaf,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
 	0x1e000, 0x1e006,
 	0x1e008, 0x1e018,
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e030, 0x1e06d,
+	0x1e08f, 0x1e08f,
 	0x1e100, 0x1e12c,
 	0x1e130, 0x1e13d,
 	0x1e140, 0x1e149,
 	0x1e14e, 0x1e14e,
+	0x1e290, 0x1e2ae,
 	0x1e2c0, 0x1e2f9,
+	0x1e4d0, 0x1e4f9,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 	0x1e800, 0x1e8c4,
 	0x1e8d0, 0x1e8d6,
 	0x1e900, 0x1e94b,
@@ -16587,18 +17464,21 @@ static const OnigCodePoint CR_ID_Continue[] = {
 	0x1eea1, 0x1eea3,
 	0x1eea5, 0x1eea9,
 	0x1eeab, 0x1eebb,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x1fbf0, 0x1fbf9,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 	0xe0100, 0xe01ef,
 }; /* CR_ID_Continue */
 
 /* 'XID_Start': Derived Property */
 static const OnigCodePoint CR_XID_Start[] = {
-	616,
+	666,
 	0x0041, 0x005a,
 	0x0061, 0x007a,
 	0x00aa, 0x00aa,
@@ -16648,8 +17528,9 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x0828, 0x0828,
 	0x0840, 0x0858,
 	0x0860, 0x086a,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
+	0x0870, 0x0887,
+	0x0889, 0x088e,
+	0x08a0, 0x08c9,
 	0x0904, 0x0939,
 	0x093d, 0x093d,
 	0x0950, 0x0950,
@@ -16714,6 +17595,7 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x0c2a, 0x0c39,
 	0x0c3d, 0x0c3d,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c61,
 	0x0c80, 0x0c80,
 	0x0c85, 0x0c8c,
@@ -16722,10 +17604,10 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x0caa, 0x0cb3,
 	0x0cb5, 0x0cb9,
 	0x0cbd, 0x0cbd,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce1,
 	0x0cf1, 0x0cf2,
-	0x0d05, 0x0d0c,
+	0x0d04, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d3a,
 	0x0d3d, 0x0d3d,
@@ -16793,9 +17675,8 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x1681, 0x169a,
 	0x16a0, 0x16ea,
 	0x16ee, 0x16f8,
-	0x1700, 0x170c,
-	0x170e, 0x1711,
-	0x1720, 0x1731,
+	0x1700, 0x1711,
+	0x171f, 0x1731,
 	0x1740, 0x1751,
 	0x1760, 0x176c,
 	0x176e, 0x1770,
@@ -16815,7 +17696,7 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x1a20, 0x1a54,
 	0x1aa7, 0x1aa7,
 	0x1b05, 0x1b33,
-	0x1b45, 0x1b4b,
+	0x1b45, 0x1b4c,
 	0x1b83, 0x1ba0,
 	0x1bae, 0x1baf,
 	0x1bba, 0x1be5,
@@ -16865,9 +17746,7 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x2145, 0x2149,
 	0x214e, 0x214e,
 	0x2160, 0x2188,
-	0x2c00, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2ce4,
+	0x2c00, 0x2ce4,
 	0x2ceb, 0x2cee,
 	0x2cf2, 0x2cf3,
 	0x2d00, 0x2d25,
@@ -16894,11 +17773,10 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x30fc, 0x30ff,
 	0x3105, 0x312f,
 	0x3131, 0x318e,
-	0x31a0, 0x31ba,
+	0x31a0, 0x31bf,
 	0x31f0, 0x31ff,
-	0x3400, 0x4db5,
-	0x4e00, 0x9fef,
-	0xa000, 0xa48c,
+	0x3400, 0x4dbf,
+	0x4e00, 0xa48c,
 	0xa4d0, 0xa4fd,
 	0xa500, 0xa60c,
 	0xa610, 0xa61f,
@@ -16908,9 +17786,11 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0xa6a0, 0xa6ef,
 	0xa717, 0xa71f,
 	0xa722, 0xa788,
-	0xa78b, 0xa7bf,
-	0xa7c2, 0xa7c6,
-	0xa7f7, 0xa801,
+	0xa78b, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa801,
 	0xa803, 0xa805,
 	0xa807, 0xa80a,
 	0xa80c, 0xa822,
@@ -16947,7 +17827,7 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0xab20, 0xab26,
 	0xab28, 0xab2e,
 	0xab30, 0xab5a,
-	0xab5c, 0xab67,
+	0xab5c, 0xab69,
 	0xab70, 0xabe2,
 	0xac00, 0xd7a3,
 	0xd7b0, 0xd7c6,
@@ -17006,9 +17886,20 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x104d8, 0x104fb,
 	0x10500, 0x10527,
 	0x10530, 0x10563,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10600, 0x10736,
 	0x10740, 0x10755,
 	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10800, 0x10805,
 	0x10808, 0x10808,
 	0x1080a, 0x10835,
@@ -17039,15 +17930,22 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x10c80, 0x10cb2,
 	0x10cc0, 0x10cf2,
 	0x10d00, 0x10d23,
+	0x10e80, 0x10ea9,
+	0x10eb0, 0x10eb1,
 	0x10f00, 0x10f1c,
 	0x10f27, 0x10f27,
 	0x10f30, 0x10f45,
+	0x10f70, 0x10f81,
+	0x10fb0, 0x10fc4,
 	0x10fe0, 0x10ff6,
 	0x11003, 0x11037,
+	0x11071, 0x11072,
+	0x11075, 0x11075,
 	0x11083, 0x110af,
 	0x110d0, 0x110e8,
 	0x11103, 0x11126,
 	0x11144, 0x11144,
+	0x11147, 0x11147,
 	0x11150, 0x11172,
 	0x11176, 0x11176,
 	0x11183, 0x111b2,
@@ -17056,6 +17954,7 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x111dc, 0x111dc,
 	0x11200, 0x11211,
 	0x11213, 0x1122b,
+	0x1123f, 0x11240,
 	0x11280, 0x11286,
 	0x11288, 0x11288,
 	0x1128a, 0x1128d,
@@ -17073,7 +17972,7 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x1135d, 0x11361,
 	0x11400, 0x11434,
 	0x11447, 0x1144a,
-	0x1145f, 0x1145f,
+	0x1145f, 0x11461,
 	0x11480, 0x114af,
 	0x114c4, 0x114c5,
 	0x114c7, 0x114c7,
@@ -17084,9 +17983,16 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x11680, 0x116aa,
 	0x116b8, 0x116b8,
 	0x11700, 0x1171a,
+	0x11740, 0x11746,
 	0x11800, 0x1182b,
 	0x118a0, 0x118df,
-	0x118ff, 0x118ff,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x1192f,
+	0x1193f, 0x1193f,
+	0x11941, 0x11941,
 	0x119a0, 0x119a7,
 	0x119aa, 0x119d0,
 	0x119e1, 0x119e1,
@@ -17097,7 +18003,7 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x11a50, 0x11a50,
 	0x11a5c, 0x11a89,
 	0x11a9d, 0x11a9d,
-	0x11ac0, 0x11af8,
+	0x11ab0, 0x11af8,
 	0x11c00, 0x11c08,
 	0x11c0a, 0x11c2e,
 	0x11c40, 0x11c40,
@@ -17111,13 +18017,20 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x11d6a, 0x11d89,
 	0x11d98, 0x11d98,
 	0x11ee0, 0x11ef2,
+	0x11f02, 0x11f02,
+	0x11f04, 0x11f10,
+	0x11f12, 0x11f33,
+	0x11fb0, 0x11fb0,
 	0x12000, 0x12399,
 	0x12400, 0x1246e,
 	0x12480, 0x12543,
-	0x13000, 0x1342e,
+	0x12f90, 0x12ff0,
+	0x13000, 0x1342f,
+	0x13441, 0x13446,
 	0x14400, 0x14646,
 	0x16800, 0x16a38,
 	0x16a40, 0x16a5e,
+	0x16a70, 0x16abe,
 	0x16ad0, 0x16aed,
 	0x16b00, 0x16b2f,
 	0x16b40, 0x16b43,
@@ -17130,9 +18043,15 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x16fe0, 0x16fe1,
 	0x16fe3, 0x16fe3,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
-	0x1b000, 0x1b11e,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 	0x1b170, 0x1b2fb,
 	0x1bc00, 0x1bc6a,
@@ -17169,10 +18088,19 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x1d78a, 0x1d7a8,
 	0x1d7aa, 0x1d7c2,
 	0x1d7c4, 0x1d7cb,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
+	0x1e030, 0x1e06d,
 	0x1e100, 0x1e12c,
 	0x1e137, 0x1e13d,
 	0x1e14e, 0x1e14e,
+	0x1e290, 0x1e2ad,
 	0x1e2c0, 0x1e2eb,
+	0x1e4d0, 0x1e4eb,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 	0x1e800, 0x1e8c4,
 	0x1e900, 0x1e943,
 	0x1e94b, 0x1e94b,
@@ -17209,17 +18137,19 @@ static const OnigCodePoint CR_XID_Start[] = {
 	0x1eea1, 0x1eea3,
 	0x1eea5, 0x1eea9,
 	0x1eeab, 0x1eebb,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 }; /* CR_XID_Start */
 
 /* 'XID_Continue': Derived Property */
 static const OnigCodePoint CR_XID_Continue[] = {
-	720,
+	775,
 	0x0030, 0x0039,
 	0x0041, 0x005a,
 	0x005f, 0x005f,
@@ -17271,9 +18201,9 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x0800, 0x082d,
 	0x0840, 0x085b,
 	0x0860, 0x086a,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
-	0x08d3, 0x08e1,
+	0x0870, 0x0887,
+	0x0889, 0x088e,
+	0x0898, 0x08e1,
 	0x08e3, 0x0963,
 	0x0966, 0x096f,
 	0x0971, 0x0983,
@@ -17332,7 +18262,7 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x0b3c, 0x0b44,
 	0x0b47, 0x0b48,
 	0x0b4b, 0x0b4d,
-	0x0b56, 0x0b57,
+	0x0b55, 0x0b57,
 	0x0b5c, 0x0b5d,
 	0x0b5f, 0x0b63,
 	0x0b66, 0x0b6f,
@@ -17357,11 +18287,12 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x0c0e, 0x0c10,
 	0x0c12, 0x0c28,
 	0x0c2a, 0x0c39,
-	0x0c3d, 0x0c44,
+	0x0c3c, 0x0c44,
 	0x0c46, 0x0c48,
 	0x0c4a, 0x0c4d,
 	0x0c55, 0x0c56,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c63,
 	0x0c66, 0x0c6f,
 	0x0c80, 0x0c83,
@@ -17374,12 +18305,11 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x0cc6, 0x0cc8,
 	0x0cca, 0x0ccd,
 	0x0cd5, 0x0cd6,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce3,
 	0x0ce6, 0x0cef,
-	0x0cf1, 0x0cf2,
-	0x0d00, 0x0d03,
-	0x0d05, 0x0d0c,
+	0x0cf1, 0x0cf3,
+	0x0d00, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d44,
 	0x0d46, 0x0d48,
@@ -17388,7 +18318,7 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x0d5f, 0x0d63,
 	0x0d66, 0x0d6f,
 	0x0d7a, 0x0d7f,
-	0x0d82, 0x0d83,
+	0x0d81, 0x0d83,
 	0x0d85, 0x0d96,
 	0x0d9a, 0x0db1,
 	0x0db3, 0x0dbb,
@@ -17411,7 +18341,7 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x0ea7, 0x0ebd,
 	0x0ec0, 0x0ec4,
 	0x0ec6, 0x0ec6,
-	0x0ec8, 0x0ecd,
+	0x0ec8, 0x0ece,
 	0x0ed0, 0x0ed9,
 	0x0edc, 0x0edf,
 	0x0f00, 0x0f00,
@@ -17458,9 +18388,8 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x1681, 0x169a,
 	0x16a0, 0x16ea,
 	0x16ee, 0x16f8,
-	0x1700, 0x170c,
-	0x170e, 0x1714,
-	0x1720, 0x1734,
+	0x1700, 0x1715,
+	0x171f, 0x1734,
 	0x1740, 0x1753,
 	0x1760, 0x176c,
 	0x176e, 0x1770,
@@ -17470,7 +18399,7 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x17dc, 0x17dd,
 	0x17e0, 0x17e9,
 	0x180b, 0x180d,
-	0x1810, 0x1819,
+	0x180f, 0x1819,
 	0x1820, 0x1878,
 	0x1880, 0x18aa,
 	0x18b0, 0x18f5,
@@ -17489,7 +18418,8 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x1a90, 0x1a99,
 	0x1aa7, 0x1aa7,
 	0x1ab0, 0x1abd,
-	0x1b00, 0x1b4b,
+	0x1abf, 0x1ace,
+	0x1b00, 0x1b4c,
 	0x1b50, 0x1b59,
 	0x1b6b, 0x1b73,
 	0x1b80, 0x1bf3,
@@ -17501,8 +18431,7 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x1cbd, 0x1cbf,
 	0x1cd0, 0x1cd2,
 	0x1cd4, 0x1cfa,
-	0x1d00, 0x1df9,
-	0x1dfb, 0x1f15,
+	0x1d00, 0x1f15,
 	0x1f18, 0x1f1d,
 	0x1f20, 0x1f45,
 	0x1f48, 0x1f4d,
@@ -17542,9 +18471,7 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x2145, 0x2149,
 	0x214e, 0x214e,
 	0x2160, 0x2188,
-	0x2c00, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2ce4,
+	0x2c00, 0x2ce4,
 	0x2ceb, 0x2cf3,
 	0x2d00, 0x2d25,
 	0x2d27, 0x2d27,
@@ -17572,11 +18499,10 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x30fc, 0x30ff,
 	0x3105, 0x312f,
 	0x3131, 0x318e,
-	0x31a0, 0x31ba,
+	0x31a0, 0x31bf,
 	0x31f0, 0x31ff,
-	0x3400, 0x4db5,
-	0x4e00, 0x9fef,
-	0xa000, 0xa48c,
+	0x3400, 0x4dbf,
+	0x4e00, 0xa48c,
 	0xa4d0, 0xa4fd,
 	0xa500, 0xa60c,
 	0xa610, 0xa62b,
@@ -17585,9 +18511,12 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0xa67f, 0xa6f1,
 	0xa717, 0xa71f,
 	0xa722, 0xa788,
-	0xa78b, 0xa7bf,
-	0xa7c2, 0xa7c6,
-	0xa7f7, 0xa827,
+	0xa78b, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa827,
+	0xa82c, 0xa82c,
 	0xa840, 0xa873,
 	0xa880, 0xa8c5,
 	0xa8d0, 0xa8d9,
@@ -17613,7 +18542,7 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0xab20, 0xab26,
 	0xab28, 0xab2e,
 	0xab30, 0xab5a,
-	0xab5c, 0xab67,
+	0xab5c, 0xab69,
 	0xab70, 0xabea,
 	0xabec, 0xabed,
 	0xabf0, 0xabf9,
@@ -17681,9 +18610,20 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x104d8, 0x104fb,
 	0x10500, 0x10527,
 	0x10530, 0x10563,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10600, 0x10736,
 	0x10740, 0x10755,
 	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10800, 0x10805,
 	0x10808, 0x10808,
 	0x1080a, 0x10835,
@@ -17718,27 +18658,33 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x10cc0, 0x10cf2,
 	0x10d00, 0x10d27,
 	0x10d30, 0x10d39,
-	0x10f00, 0x10f1c,
+	0x10e80, 0x10ea9,
+	0x10eab, 0x10eac,
+	0x10eb0, 0x10eb1,
+	0x10efd, 0x10f1c,
 	0x10f27, 0x10f27,
 	0x10f30, 0x10f50,
+	0x10f70, 0x10f85,
+	0x10fb0, 0x10fc4,
 	0x10fe0, 0x10ff6,
 	0x11000, 0x11046,
-	0x11066, 0x1106f,
+	0x11066, 0x11075,
 	0x1107f, 0x110ba,
+	0x110c2, 0x110c2,
 	0x110d0, 0x110e8,
 	0x110f0, 0x110f9,
 	0x11100, 0x11134,
 	0x11136, 0x1113f,
-	0x11144, 0x11146,
+	0x11144, 0x11147,
 	0x11150, 0x11173,
 	0x11176, 0x11176,
 	0x11180, 0x111c4,
 	0x111c9, 0x111cc,
-	0x111d0, 0x111da,
+	0x111ce, 0x111da,
 	0x111dc, 0x111dc,
 	0x11200, 0x11211,
 	0x11213, 0x11237,
-	0x1123e, 0x1123e,
+	0x1123e, 0x11241,
 	0x11280, 0x11286,
 	0x11288, 0x11288,
 	0x1128a, 0x1128d,
@@ -17763,7 +18709,7 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x11370, 0x11374,
 	0x11400, 0x1144a,
 	0x11450, 0x11459,
-	0x1145e, 0x1145f,
+	0x1145e, 0x11461,
 	0x11480, 0x114c5,
 	0x114c7, 0x114c7,
 	0x114d0, 0x114d9,
@@ -17778,9 +18724,17 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x11700, 0x1171a,
 	0x1171d, 0x1172b,
 	0x11730, 0x11739,
+	0x11740, 0x11746,
 	0x11800, 0x1183a,
 	0x118a0, 0x118e9,
-	0x118ff, 0x118ff,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x11943,
+	0x11950, 0x11959,
 	0x119a0, 0x119a7,
 	0x119aa, 0x119d7,
 	0x119da, 0x119e1,
@@ -17789,7 +18743,7 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x11a47, 0x11a47,
 	0x11a50, 0x11a99,
 	0x11a9d, 0x11a9d,
-	0x11ac0, 0x11af8,
+	0x11ab0, 0x11af8,
 	0x11c00, 0x11c08,
 	0x11c0a, 0x11c36,
 	0x11c38, 0x11c40,
@@ -17811,14 +18765,23 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x11d93, 0x11d98,
 	0x11da0, 0x11da9,
 	0x11ee0, 0x11ef6,
+	0x11f00, 0x11f10,
+	0x11f12, 0x11f3a,
+	0x11f3e, 0x11f42,
+	0x11f50, 0x11f59,
+	0x11fb0, 0x11fb0,
 	0x12000, 0x12399,
 	0x12400, 0x1246e,
 	0x12480, 0x12543,
-	0x13000, 0x1342e,
+	0x12f90, 0x12ff0,
+	0x13000, 0x1342f,
+	0x13440, 0x13455,
 	0x14400, 0x14646,
 	0x16800, 0x16a38,
 	0x16a40, 0x16a5e,
 	0x16a60, 0x16a69,
+	0x16a70, 0x16abe,
+	0x16ac0, 0x16ac9,
 	0x16ad0, 0x16aed,
 	0x16af0, 0x16af4,
 	0x16b00, 0x16b36,
@@ -17831,11 +18794,18 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x16f4f, 0x16f87,
 	0x16f8f, 0x16f9f,
 	0x16fe0, 0x16fe1,
-	0x16fe3, 0x16fe3,
+	0x16fe3, 0x16fe4,
+	0x16ff0, 0x16ff1,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
-	0x1b000, 0x1b11e,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 	0x1b170, 0x1b2fb,
 	0x1bc00, 0x1bc6a,
@@ -17843,6 +18813,8 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x1bc80, 0x1bc88,
 	0x1bc90, 0x1bc99,
 	0x1bc9d, 0x1bc9e,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
 	0x1d165, 0x1d169,
 	0x1d16d, 0x1d172,
 	0x1d17b, 0x1d182,
@@ -17886,16 +18858,26 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x1da84, 0x1da84,
 	0x1da9b, 0x1da9f,
 	0x1daa1, 0x1daaf,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
 	0x1e000, 0x1e006,
 	0x1e008, 0x1e018,
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e030, 0x1e06d,
+	0x1e08f, 0x1e08f,
 	0x1e100, 0x1e12c,
 	0x1e130, 0x1e13d,
 	0x1e140, 0x1e149,
 	0x1e14e, 0x1e14e,
+	0x1e290, 0x1e2ae,
 	0x1e2c0, 0x1e2f9,
+	0x1e4d0, 0x1e4f9,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 	0x1e800, 0x1e8c4,
 	0x1e8d0, 0x1e8d6,
 	0x1e900, 0x1e94b,
@@ -17933,12 +18915,15 @@ static const OnigCodePoint CR_XID_Continue[] = {
 	0x1eea1, 0x1eea3,
 	0x1eea5, 0x1eea9,
 	0x1eeab, 0x1eebb,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x1fbf0, 0x1fbf9,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 	0xe0100, 0xe01ef,
 }; /* CR_XID_Continue */
 
@@ -17950,7 +18935,7 @@ static const OnigCodePoint CR_Default_Ignorable_Code_Point[] = {
 	0x061c, 0x061c,
 	0x115f, 0x1160,
 	0x17b4, 0x17b5,
-	0x180b, 0x180e,
+	0x180b, 0x180f,
 	0x200b, 0x200f,
 	0x202a, 0x202e,
 	0x2060, 0x206f,
@@ -17966,7 +18951,7 @@ static const OnigCodePoint CR_Default_Ignorable_Code_Point[] = {
 
 /* 'Grapheme_Extend': Derived Property */
 static const OnigCodePoint CR_Grapheme_Extend[] = {
-	335,
+	363,
 	0x0300, 0x036f,
 	0x0483, 0x0489,
 	0x0591, 0x05bd,
@@ -17991,7 +18976,8 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x0825, 0x0827,
 	0x0829, 0x082d,
 	0x0859, 0x085b,
-	0x08d3, 0x08e1,
+	0x0898, 0x089f,
+	0x08ca, 0x08e1,
 	0x08e3, 0x0902,
 	0x093a, 0x093a,
 	0x093c, 0x093c,
@@ -18027,7 +19013,7 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x0b3e, 0x0b3f,
 	0x0b41, 0x0b44,
 	0x0b4d, 0x0b4d,
-	0x0b56, 0x0b57,
+	0x0b55, 0x0b57,
 	0x0b62, 0x0b63,
 	0x0b82, 0x0b82,
 	0x0bbe, 0x0bbe,
@@ -18036,6 +19022,7 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x0bd7, 0x0bd7,
 	0x0c00, 0x0c00,
 	0x0c04, 0x0c04,
+	0x0c3c, 0x0c3c,
 	0x0c3e, 0x0c40,
 	0x0c46, 0x0c48,
 	0x0c4a, 0x0c4d,
@@ -18056,6 +19043,7 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x0d4d, 0x0d4d,
 	0x0d57, 0x0d57,
 	0x0d62, 0x0d63,
+	0x0d81, 0x0d81,
 	0x0dca, 0x0dca,
 	0x0dcf, 0x0dcf,
 	0x0dd2, 0x0dd4,
@@ -18066,7 +19054,7 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x0e47, 0x0e4e,
 	0x0eb1, 0x0eb1,
 	0x0eb4, 0x0ebc,
-	0x0ec8, 0x0ecd,
+	0x0ec8, 0x0ece,
 	0x0f18, 0x0f19,
 	0x0f35, 0x0f35,
 	0x0f37, 0x0f37,
@@ -18090,7 +19078,7 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x109d, 0x109d,
 	0x135d, 0x135f,
 	0x1712, 0x1714,
-	0x1732, 0x1734,
+	0x1732, 0x1733,
 	0x1752, 0x1753,
 	0x1772, 0x1773,
 	0x17b4, 0x17b5,
@@ -18099,6 +19087,7 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x17c9, 0x17d3,
 	0x17dd, 0x17dd,
 	0x180b, 0x180d,
+	0x180f, 0x180f,
 	0x1885, 0x1886,
 	0x18a9, 0x18a9,
 	0x1920, 0x1922,
@@ -18114,7 +19103,7 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x1a65, 0x1a6c,
 	0x1a73, 0x1a7c,
 	0x1a7f, 0x1a7f,
-	0x1ab0, 0x1abe,
+	0x1ab0, 0x1ace,
 	0x1b00, 0x1b03,
 	0x1b34, 0x1b3a,
 	0x1b3c, 0x1b3c,
@@ -18136,8 +19125,7 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x1ced, 0x1ced,
 	0x1cf4, 0x1cf4,
 	0x1cf8, 0x1cf9,
-	0x1dc0, 0x1df9,
-	0x1dfb, 0x1dff,
+	0x1dc0, 0x1dff,
 	0x200c, 0x200c,
 	0x20d0, 0x20f0,
 	0x2cef, 0x2cf1,
@@ -18153,6 +19141,7 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0xa806, 0xa806,
 	0xa80b, 0xa80b,
 	0xa825, 0xa826,
+	0xa82c, 0xa82c,
 	0xa8c4, 0xa8c5,
 	0xa8e0, 0xa8f1,
 	0xa8ff, 0xa8ff,
@@ -18193,12 +19182,18 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x10a3f, 0x10a3f,
 	0x10ae5, 0x10ae6,
 	0x10d24, 0x10d27,
+	0x10eab, 0x10eac,
+	0x10efd, 0x10eff,
 	0x10f46, 0x10f50,
+	0x10f82, 0x10f85,
 	0x11001, 0x11001,
 	0x11038, 0x11046,
+	0x11070, 0x11070,
+	0x11073, 0x11074,
 	0x1107f, 0x11081,
 	0x110b3, 0x110b6,
 	0x110b9, 0x110ba,
+	0x110c2, 0x110c2,
 	0x11100, 0x11102,
 	0x11127, 0x1112b,
 	0x1112d, 0x11134,
@@ -18206,10 +19201,12 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x11180, 0x11181,
 	0x111b6, 0x111be,
 	0x111c9, 0x111cc,
+	0x111cf, 0x111cf,
 	0x1122f, 0x11231,
 	0x11234, 0x11234,
 	0x11236, 0x11237,
 	0x1123e, 0x1123e,
+	0x11241, 0x11241,
 	0x112df, 0x112df,
 	0x112e3, 0x112ea,
 	0x11300, 0x11301,
@@ -18246,6 +19243,10 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x11727, 0x1172b,
 	0x1182f, 0x11837,
 	0x11839, 0x1183a,
+	0x11930, 0x11930,
+	0x1193b, 0x1193c,
+	0x1193e, 0x1193e,
+	0x11943, 0x11943,
 	0x119d4, 0x119d7,
 	0x119da, 0x119db,
 	0x119e0, 0x119e0,
@@ -18273,11 +19274,20 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x11d95, 0x11d95,
 	0x11d97, 0x11d97,
 	0x11ef3, 0x11ef4,
+	0x11f00, 0x11f01,
+	0x11f36, 0x11f3a,
+	0x11f40, 0x11f40,
+	0x11f42, 0x11f42,
+	0x13440, 0x13440,
+	0x13447, 0x13455,
 	0x16af0, 0x16af4,
 	0x16b30, 0x16b36,
 	0x16f4f, 0x16f4f,
 	0x16f8f, 0x16f92,
+	0x16fe4, 0x16fe4,
 	0x1bc9d, 0x1bc9e,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
 	0x1d165, 0x1d165,
 	0x1d167, 0x1d169,
 	0x1d16e, 0x1d172,
@@ -18296,8 +19306,11 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e08f, 0x1e08f,
 	0x1e130, 0x1e136,
+	0x1e2ae, 0x1e2ae,
 	0x1e2ec, 0x1e2ef,
+	0x1e4ec, 0x1e4ef,
 	0x1e8d0, 0x1e8d6,
 	0x1e944, 0x1e94a,
 	0xe0020, 0xe007f,
@@ -18306,7 +19319,7 @@ static const OnigCodePoint CR_Grapheme_Extend[] = {
 
 /* 'Grapheme_Base': Derived Property */
 static const OnigCodePoint CR_Grapheme_Base[] = {
-	819,
+	875,
 	0x0020, 0x007e,
 	0x00a0, 0x00ac,
 	0x00ae, 0x02ff,
@@ -18328,7 +19341,7 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x05ef, 0x05f4,
 	0x0606, 0x060f,
 	0x061b, 0x061b,
-	0x061e, 0x064a,
+	0x061d, 0x064a,
 	0x0660, 0x066f,
 	0x0671, 0x06d5,
 	0x06de, 0x06de,
@@ -18349,8 +19362,8 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x0840, 0x0858,
 	0x085e, 0x085e,
 	0x0860, 0x086a,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
+	0x0870, 0x088e,
+	0x08a0, 0x08c9,
 	0x0903, 0x0939,
 	0x093b, 0x093b,
 	0x093d, 0x0940,
@@ -18439,6 +19452,7 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x0c3d, 0x0c3d,
 	0x0c41, 0x0c44,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c61,
 	0x0c66, 0x0c6f,
 	0x0c77, 0x0c80,
@@ -18452,12 +19466,11 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x0cc3, 0x0cc4,
 	0x0cc7, 0x0cc8,
 	0x0cca, 0x0ccb,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce1,
 	0x0ce6, 0x0cef,
-	0x0cf1, 0x0cf2,
-	0x0d02, 0x0d03,
-	0x0d05, 0x0d0c,
+	0x0cf1, 0x0cf3,
+	0x0d02, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d3a,
 	0x0d3d, 0x0d3d,
@@ -18542,10 +19555,10 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x13f8, 0x13fd,
 	0x1400, 0x169c,
 	0x16a0, 0x16f8,
-	0x1700, 0x170c,
-	0x170e, 0x1711,
-	0x1720, 0x1731,
-	0x1735, 0x1736,
+	0x1700, 0x1711,
+	0x1715, 0x1715,
+	0x171f, 0x1731,
+	0x1734, 0x1736,
 	0x1740, 0x1751,
 	0x1760, 0x176c,
 	0x176e, 0x1770,
@@ -18587,9 +19600,9 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x1b04, 0x1b33,
 	0x1b3b, 0x1b3b,
 	0x1b3d, 0x1b41,
-	0x1b43, 0x1b4b,
+	0x1b43, 0x1b4c,
 	0x1b50, 0x1b6a,
-	0x1b74, 0x1b7c,
+	0x1b74, 0x1b7e,
 	0x1b82, 0x1ba1,
 	0x1ba6, 0x1ba7,
 	0x1baa, 0x1baa,
@@ -18633,15 +19646,13 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x2070, 0x2071,
 	0x2074, 0x208e,
 	0x2090, 0x209c,
-	0x20a0, 0x20bf,
+	0x20a0, 0x20c0,
 	0x2100, 0x218b,
 	0x2190, 0x2426,
 	0x2440, 0x244a,
 	0x2460, 0x2b73,
 	0x2b76, 0x2b95,
-	0x2b98, 0x2c2e,
-	0x2c30, 0x2c5e,
-	0x2c60, 0x2cee,
+	0x2b97, 0x2cee,
 	0x2cf2, 0x2cf3,
 	0x2cf9, 0x2d25,
 	0x2d27, 0x2d27,
@@ -18657,7 +19668,7 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x2dc8, 0x2dce,
 	0x2dd0, 0x2dd6,
 	0x2dd8, 0x2dde,
-	0x2e00, 0x2e4f,
+	0x2e00, 0x2e5d,
 	0x2e80, 0x2e99,
 	0x2e9b, 0x2ef3,
 	0x2f00, 0x2fd5,
@@ -18668,12 +19679,9 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x309b, 0x30ff,
 	0x3105, 0x312f,
 	0x3131, 0x318e,
-	0x3190, 0x31ba,
-	0x31c0, 0x31e3,
+	0x3190, 0x31e3,
 	0x31f0, 0x321e,
-	0x3220, 0x4db5,
-	0x4dc0, 0x9fef,
-	0xa000, 0xa48c,
+	0x3220, 0xa48c,
 	0xa490, 0xa4c6,
 	0xa4d0, 0xa62b,
 	0xa640, 0xa66e,
@@ -18681,9 +19689,11 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0xa67e, 0xa69d,
 	0xa6a0, 0xa6ef,
 	0xa6f2, 0xa6f7,
-	0xa700, 0xa7bf,
-	0xa7c2, 0xa7c6,
-	0xa7f7, 0xa801,
+	0xa700, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa801,
 	0xa803, 0xa805,
 	0xa807, 0xa80a,
 	0xa80c, 0xa824,
@@ -18725,7 +19735,7 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0xab11, 0xab16,
 	0xab20, 0xab26,
 	0xab28, 0xab2e,
-	0xab30, 0xab67,
+	0xab30, 0xab6b,
 	0xab70, 0xabe4,
 	0xabe6, 0xabe7,
 	0xabe9, 0xabec,
@@ -18743,11 +19753,11 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0xfb3e, 0xfb3e,
 	0xfb40, 0xfb41,
 	0xfb43, 0xfb44,
-	0xfb46, 0xfbc1,
-	0xfbd3, 0xfd3f,
-	0xfd50, 0xfd8f,
+	0xfb46, 0xfbc2,
+	0xfbd3, 0xfd8f,
 	0xfd92, 0xfdc7,
-	0xfdf0, 0xfdfd,
+	0xfdcf, 0xfdcf,
+	0xfdf0, 0xfdff,
 	0xfe10, 0xfe19,
 	0xfe30, 0xfe52,
 	0xfe54, 0xfe66,
@@ -18773,7 +19783,7 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x10100, 0x10102,
 	0x10107, 0x10133,
 	0x10137, 0x1018e,
-	0x10190, 0x1019b,
+	0x10190, 0x1019c,
 	0x101a0, 0x101a0,
 	0x101d0, 0x101fc,
 	0x10280, 0x1029c,
@@ -18791,10 +19801,20 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x104d8, 0x104fb,
 	0x10500, 0x10527,
 	0x10530, 0x10563,
-	0x1056f, 0x1056f,
+	0x1056f, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
 	0x10600, 0x10736,
 	0x10740, 0x10755,
 	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10800, 0x10805,
 	0x10808, 0x10808,
 	0x1080a, 0x10835,
@@ -18831,14 +19851,22 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x10cfa, 0x10d23,
 	0x10d30, 0x10d39,
 	0x10e60, 0x10e7e,
+	0x10e80, 0x10ea9,
+	0x10ead, 0x10ead,
+	0x10eb0, 0x10eb1,
 	0x10f00, 0x10f27,
 	0x10f30, 0x10f45,
 	0x10f51, 0x10f59,
+	0x10f70, 0x10f81,
+	0x10f86, 0x10f89,
+	0x10fb0, 0x10fcb,
 	0x10fe0, 0x10ff6,
 	0x11000, 0x11000,
 	0x11002, 0x11037,
 	0x11047, 0x1104d,
 	0x11052, 0x1106f,
+	0x11071, 0x11072,
+	0x11075, 0x11075,
 	0x11082, 0x110b2,
 	0x110b7, 0x110b8,
 	0x110bb, 0x110bc,
@@ -18847,12 +19875,12 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x110f0, 0x110f9,
 	0x11103, 0x11126,
 	0x1112c, 0x1112c,
-	0x11136, 0x11146,
+	0x11136, 0x11147,
 	0x11150, 0x11172,
 	0x11174, 0x11176,
 	0x11182, 0x111b5,
 	0x111bf, 0x111c8,
-	0x111cd, 0x111cd,
+	0x111cd, 0x111ce,
 	0x111d0, 0x111df,
 	0x111e1, 0x111f4,
 	0x11200, 0x11211,
@@ -18860,6 +19888,7 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x11232, 0x11233,
 	0x11235, 0x11235,
 	0x11238, 0x1123d,
+	0x1123f, 0x11240,
 	0x11280, 0x11286,
 	0x11288, 0x11288,
 	0x1128a, 0x1128d,
@@ -18885,10 +19914,9 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x11400, 0x11437,
 	0x11440, 0x11441,
 	0x11445, 0x11445,
-	0x11447, 0x11459,
-	0x1145b, 0x1145b,
+	0x11447, 0x1145b,
 	0x1145d, 0x1145d,
-	0x1145f, 0x1145f,
+	0x1145f, 0x11461,
 	0x11480, 0x114af,
 	0x114b1, 0x114b2,
 	0x114b9, 0x114b9,
@@ -18912,17 +19940,27 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x116ac, 0x116ac,
 	0x116ae, 0x116af,
 	0x116b6, 0x116b6,
-	0x116b8, 0x116b8,
+	0x116b8, 0x116b9,
 	0x116c0, 0x116c9,
 	0x11700, 0x1171a,
 	0x11720, 0x11721,
 	0x11726, 0x11726,
-	0x11730, 0x1173f,
+	0x11730, 0x11746,
 	0x11800, 0x1182e,
 	0x11838, 0x11838,
 	0x1183b, 0x1183b,
 	0x118a0, 0x118f2,
-	0x118ff, 0x118ff,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x1192f,
+	0x11931, 0x11935,
+	0x11937, 0x11938,
+	0x1193d, 0x1193d,
+	0x1193f, 0x11942,
+	0x11944, 0x11946,
+	0x11950, 0x11959,
 	0x119a0, 0x119a7,
 	0x119aa, 0x119d3,
 	0x119dc, 0x119df,
@@ -18936,7 +19974,8 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x11a5c, 0x11a89,
 	0x11a97, 0x11a97,
 	0x11a9a, 0x11aa2,
-	0x11ac0, 0x11af8,
+	0x11ab0, 0x11af8,
+	0x11b00, 0x11b09,
 	0x11c00, 0x11c08,
 	0x11c0a, 0x11c2f,
 	0x11c3e, 0x11c3e,
@@ -18960,17 +19999,26 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x11da0, 0x11da9,
 	0x11ee0, 0x11ef2,
 	0x11ef5, 0x11ef8,
+	0x11f02, 0x11f10,
+	0x11f12, 0x11f35,
+	0x11f3e, 0x11f3f,
+	0x11f41, 0x11f41,
+	0x11f43, 0x11f59,
+	0x11fb0, 0x11fb0,
 	0x11fc0, 0x11ff1,
 	0x11fff, 0x12399,
 	0x12400, 0x1246e,
 	0x12470, 0x12474,
 	0x12480, 0x12543,
-	0x13000, 0x1342e,
+	0x12f90, 0x12ff2,
+	0x13000, 0x1342f,
+	0x13441, 0x13446,
 	0x14400, 0x14646,
 	0x16800, 0x16a38,
 	0x16a40, 0x16a5e,
 	0x16a60, 0x16a69,
-	0x16a6e, 0x16a6f,
+	0x16a6e, 0x16abe,
+	0x16ac0, 0x16ac9,
 	0x16ad0, 0x16aed,
 	0x16af5, 0x16af5,
 	0x16b00, 0x16b2f,
@@ -18984,10 +20032,17 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x16f50, 0x16f87,
 	0x16f93, 0x16f9f,
 	0x16fe0, 0x16fe3,
+	0x16ff0, 0x16ff1,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
-	0x1b000, 0x1b11e,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 	0x1b170, 0x1b2fb,
 	0x1bc00, 0x1bc6a,
@@ -18996,6 +20051,7 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x1bc90, 0x1bc99,
 	0x1bc9c, 0x1bc9c,
 	0x1bc9f, 0x1bc9f,
+	0x1cf50, 0x1cfc3,
 	0x1d000, 0x1d0f5,
 	0x1d100, 0x1d126,
 	0x1d129, 0x1d164,
@@ -19003,9 +20059,10 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x1d16a, 0x1d16d,
 	0x1d183, 0x1d184,
 	0x1d18c, 0x1d1a9,
-	0x1d1ae, 0x1d1e8,
+	0x1d1ae, 0x1d1ea,
 	0x1d200, 0x1d241,
 	0x1d245, 0x1d245,
+	0x1d2c0, 0x1d2d3,
 	0x1d2e0, 0x1d2f3,
 	0x1d300, 0x1d356,
 	0x1d360, 0x1d378,
@@ -19034,13 +20091,23 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x1da6d, 0x1da74,
 	0x1da76, 0x1da83,
 	0x1da85, 0x1da8b,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
+	0x1e030, 0x1e06d,
 	0x1e100, 0x1e12c,
 	0x1e137, 0x1e13d,
 	0x1e140, 0x1e149,
 	0x1e14e, 0x1e14f,
+	0x1e290, 0x1e2ad,
 	0x1e2c0, 0x1e2eb,
 	0x1e2f0, 0x1e2f9,
 	0x1e2ff, 0x1e2ff,
+	0x1e4d0, 0x1e4eb,
+	0x1e4f0, 0x1e4f9,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 	0x1e800, 0x1e8c4,
 	0x1e8c7, 0x1e8cf,
 	0x1e900, 0x1e943,
@@ -19089,48 +20156,50 @@ static const OnigCodePoint CR_Grapheme_Base[] = {
 	0x1f0b1, 0x1f0bf,
 	0x1f0c1, 0x1f0cf,
 	0x1f0d1, 0x1f0f5,
-	0x1f100, 0x1f10c,
-	0x1f110, 0x1f16c,
-	0x1f170, 0x1f1ac,
+	0x1f100, 0x1f1ad,
 	0x1f1e6, 0x1f202,
 	0x1f210, 0x1f23b,
 	0x1f240, 0x1f248,
 	0x1f250, 0x1f251,
 	0x1f260, 0x1f265,
-	0x1f300, 0x1f6d5,
-	0x1f6e0, 0x1f6ec,
-	0x1f6f0, 0x1f6fa,
-	0x1f700, 0x1f773,
-	0x1f780, 0x1f7d8,
+	0x1f300, 0x1f6d7,
+	0x1f6dc, 0x1f6ec,
+	0x1f6f0, 0x1f6fc,
+	0x1f700, 0x1f776,
+	0x1f77b, 0x1f7d9,
 	0x1f7e0, 0x1f7eb,
+	0x1f7f0, 0x1f7f0,
 	0x1f800, 0x1f80b,
 	0x1f810, 0x1f847,
 	0x1f850, 0x1f859,
 	0x1f860, 0x1f887,
 	0x1f890, 0x1f8ad,
-	0x1f900, 0x1f90b,
-	0x1f90d, 0x1f971,
-	0x1f973, 0x1f976,
-	0x1f97a, 0x1f9a2,
-	0x1f9a5, 0x1f9aa,
-	0x1f9ae, 0x1f9ca,
-	0x1f9cd, 0x1fa53,
+	0x1f8b0, 0x1f8b1,
+	0x1f900, 0x1fa53,
 	0x1fa60, 0x1fa6d,
-	0x1fa70, 0x1fa73,
-	0x1fa78, 0x1fa7a,
-	0x1fa80, 0x1fa82,
-	0x1fa90, 0x1fa95,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x1fa70, 0x1fa7c,
+	0x1fa80, 0x1fa88,
+	0x1fa90, 0x1fabd,
+	0x1fabf, 0x1fac5,
+	0x1face, 0x1fadb,
+	0x1fae0, 0x1fae8,
+	0x1faf0, 0x1faf8,
+	0x1fb00, 0x1fb92,
+	0x1fb94, 0x1fbca,
+	0x1fbf0, 0x1fbf9,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 }; /* CR_Grapheme_Base */
 
 /* 'Grapheme_Link': Derived Property */
 static const OnigCodePoint CR_Grapheme_Link[] = {
-	52,
+	56,
 	0x094d, 0x094d,
 	0x09cd, 0x09cd,
 	0x0a4d, 0x0a4d,
@@ -19146,7 +20215,7 @@ static const OnigCodePoint CR_Grapheme_Link[] = {
 	0x0eba, 0x0eba,
 	0x0f84, 0x0f84,
 	0x1039, 0x103a,
-	0x1714, 0x1714,
+	0x1714, 0x1715,
 	0x1734, 0x1734,
 	0x17d2, 0x17d2,
 	0x1a60, 0x1a60,
@@ -19155,6 +20224,7 @@ static const OnigCodePoint CR_Grapheme_Link[] = {
 	0x1bf2, 0x1bf3,
 	0x2d7f, 0x2d7f,
 	0xa806, 0xa806,
+	0xa82c, 0xa82c,
 	0xa8c4, 0xa8c4,
 	0xa953, 0xa953,
 	0xa9c0, 0xa9c0,
@@ -19162,6 +20232,7 @@ static const OnigCodePoint CR_Grapheme_Link[] = {
 	0xabed, 0xabed,
 	0x10a3f, 0x10a3f,
 	0x11046, 0x11046,
+	0x11070, 0x11070,
 	0x1107f, 0x1107f,
 	0x110b9, 0x110b9,
 	0x11133, 0x11134,
@@ -19176,6 +20247,7 @@ static const OnigCodePoint CR_Grapheme_Link[] = {
 	0x116b6, 0x116b6,
 	0x1172b, 0x1172b,
 	0x11839, 0x11839,
+	0x1193d, 0x1193e,
 	0x119e0, 0x119e0,
 	0x11a34, 0x11a34,
 	0x11a47, 0x11a47,
@@ -19183,11 +20255,12 @@ static const OnigCodePoint CR_Grapheme_Link[] = {
 	0x11c3f, 0x11c3f,
 	0x11d44, 0x11d45,
 	0x11d97, 0x11d97,
+	0x11f41, 0x11f42,
 }; /* CR_Grapheme_Link */
 
 /* 'Common': Script */
 static const OnigCodePoint CR_Common[] = {
-	172,
+	173,
 	0x0000, 0x0040,
 	0x005b, 0x0060,
 	0x007b, 0x00a9,
@@ -19202,7 +20275,6 @@ static const OnigCodePoint CR_Common[] = {
 	0x037e, 0x037e,
 	0x0385, 0x0385,
 	0x0387, 0x0387,
-	0x0589, 0x0589,
 	0x0605, 0x0605,
 	0x060c, 0x060c,
 	0x061b, 0x061b,
@@ -19229,7 +20301,7 @@ static const OnigCodePoint CR_Common[] = {
 	0x2066, 0x2070,
 	0x2074, 0x207e,
 	0x2080, 0x208e,
-	0x20a0, 0x20bf,
+	0x20a0, 0x20c0,
 	0x2100, 0x2125,
 	0x2127, 0x2129,
 	0x212c, 0x2131,
@@ -19241,8 +20313,8 @@ static const OnigCodePoint CR_Common[] = {
 	0x2460, 0x27ff,
 	0x2900, 0x2b73,
 	0x2b76, 0x2b95,
-	0x2b98, 0x2bff,
-	0x2e00, 0x2e4f,
+	0x2b97, 0x2bff,
+	0x2e00, 0x2e5d,
 	0x2ff0, 0x2ffb,
 	0x3000, 0x3004,
 	0x3006, 0x3006,
@@ -19265,6 +20337,7 @@ static const OnigCodePoint CR_Common[] = {
 	0xa92e, 0xa92e,
 	0xa9cf, 0xa9cf,
 	0xab5b, 0xab5b,
+	0xab6a, 0xab6b,
 	0xfd3e, 0xfd3f,
 	0xfe10, 0xfe19,
 	0xfe30, 0xfe52,
@@ -19282,18 +20355,19 @@ static const OnigCodePoint CR_Common[] = {
 	0x10100, 0x10102,
 	0x10107, 0x10133,
 	0x10137, 0x1013f,
-	0x10190, 0x1019b,
+	0x10190, 0x1019c,
 	0x101d0, 0x101fc,
 	0x102e1, 0x102fb,
-	0x16fe2, 0x16fe3,
 	0x1bca0, 0x1bca3,
+	0x1cf50, 0x1cfc3,
 	0x1d000, 0x1d0f5,
 	0x1d100, 0x1d126,
 	0x1d129, 0x1d166,
 	0x1d16a, 0x1d17a,
 	0x1d183, 0x1d184,
 	0x1d18c, 0x1d1a9,
-	0x1d1ae, 0x1d1e8,
+	0x1d1ae, 0x1d1ea,
+	0x1d2c0, 0x1d2d3,
 	0x1d2e0, 0x1d2f3,
 	0x1d300, 0x1d356,
 	0x1d360, 0x1d378,
@@ -19326,45 +20400,45 @@ static const OnigCodePoint CR_Common[] = {
 	0x1f0b1, 0x1f0bf,
 	0x1f0c1, 0x1f0cf,
 	0x1f0d1, 0x1f0f5,
-	0x1f100, 0x1f10c,
-	0x1f110, 0x1f16c,
-	0x1f170, 0x1f1ac,
+	0x1f100, 0x1f1ad,
 	0x1f1e6, 0x1f1ff,
 	0x1f201, 0x1f202,
 	0x1f210, 0x1f23b,
 	0x1f240, 0x1f248,
 	0x1f250, 0x1f251,
 	0x1f260, 0x1f265,
-	0x1f300, 0x1f6d5,
-	0x1f6e0, 0x1f6ec,
-	0x1f6f0, 0x1f6fa,
-	0x1f700, 0x1f773,
-	0x1f780, 0x1f7d8,
+	0x1f300, 0x1f6d7,
+	0x1f6dc, 0x1f6ec,
+	0x1f6f0, 0x1f6fc,
+	0x1f700, 0x1f776,
+	0x1f77b, 0x1f7d9,
 	0x1f7e0, 0x1f7eb,
+	0x1f7f0, 0x1f7f0,
 	0x1f800, 0x1f80b,
 	0x1f810, 0x1f847,
 	0x1f850, 0x1f859,
 	0x1f860, 0x1f887,
 	0x1f890, 0x1f8ad,
-	0x1f900, 0x1f90b,
-	0x1f90d, 0x1f971,
-	0x1f973, 0x1f976,
-	0x1f97a, 0x1f9a2,
-	0x1f9a5, 0x1f9aa,
-	0x1f9ae, 0x1f9ca,
-	0x1f9cd, 0x1fa53,
+	0x1f8b0, 0x1f8b1,
+	0x1f900, 0x1fa53,
 	0x1fa60, 0x1fa6d,
-	0x1fa70, 0x1fa73,
-	0x1fa78, 0x1fa7a,
-	0x1fa80, 0x1fa82,
-	0x1fa90, 0x1fa95,
+	0x1fa70, 0x1fa7c,
+	0x1fa80, 0x1fa88,
+	0x1fa90, 0x1fabd,
+	0x1fabf, 0x1fac5,
+	0x1face, 0x1fadb,
+	0x1fae0, 0x1fae8,
+	0x1faf0, 0x1faf8,
+	0x1fb00, 0x1fb92,
+	0x1fb94, 0x1fbca,
+	0x1fbf0, 0x1fbf9,
 	0xe0001, 0xe0001,
 	0xe0020, 0xe007f,
 }; /* CR_Common */
 
 /* 'Latin': Script */
 static const OnigCodePoint CR_Latin[] = {
-	32,
+	39,
 	0x0041, 0x005a,
 	0x0061, 0x007a,
 	0x00aa, 0x00aa,
@@ -19388,15 +20462,22 @@ static const OnigCodePoint CR_Latin[] = {
 	0x2160, 0x2188,
 	0x2c60, 0x2c7f,
 	0xa722, 0xa787,
-	0xa78b, 0xa7bf,
-	0xa7c2, 0xa7c6,
-	0xa7f7, 0xa7ff,
+	0xa78b, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa7ff,
 	0xab30, 0xab5a,
 	0xab5c, 0xab64,
-	0xab66, 0xab67,
+	0xab66, 0xab69,
 	0xfb00, 0xfb06,
 	0xff21, 0xff3a,
 	0xff41, 0xff5a,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
 }; /* CR_Latin */
 
 /* 'Greek': Script */
@@ -19442,7 +20523,7 @@ static const OnigCodePoint CR_Greek[] = {
 
 /* 'Cyrillic': Script */
 static const OnigCodePoint CR_Cyrillic[] = {
-	8,
+	10,
 	0x0400, 0x0484,
 	0x0487, 0x052f,
 	0x1c80, 0x1c88,
@@ -19451,14 +20532,15 @@ static const OnigCodePoint CR_Cyrillic[] = {
 	0x2de0, 0x2dff,
 	0xa640, 0xa69f,
 	0xfe2e, 0xfe2f,
+	0x1e030, 0x1e06d,
+	0x1e08f, 0x1e08f,
 }; /* CR_Cyrillic */
 
 /* 'Armenian': Script */
 static const OnigCodePoint CR_Armenian[] = {
-	5,
+	4,
 	0x0531, 0x0556,
-	0x0559, 0x0588,
-	0x058a, 0x058a,
+	0x0559, 0x058a,
 	0x058d, 0x058f,
 	0xfb13, 0xfb17,
 }; /* CR_Armenian */
@@ -19479,30 +20561,31 @@ static const OnigCodePoint CR_Hebrew[] = {
 
 /* 'Arabic': Script */
 static const OnigCodePoint CR_Arabic[] = {
-	57,
+	58,
 	0x0600, 0x0604,
 	0x0606, 0x060b,
 	0x060d, 0x061a,
-	0x061c, 0x061c,
-	0x061e, 0x061e,
+	0x061c, 0x061e,
 	0x0620, 0x063f,
 	0x0641, 0x064a,
 	0x0656, 0x066f,
 	0x0671, 0x06dc,
 	0x06de, 0x06ff,
 	0x0750, 0x077f,
-	0x08a0, 0x08b4,
-	0x08b6, 0x08bd,
-	0x08d3, 0x08e1,
+	0x0870, 0x088e,
+	0x0890, 0x0891,
+	0x0898, 0x08e1,
 	0x08e3, 0x08ff,
-	0xfb50, 0xfbc1,
+	0xfb50, 0xfbc2,
 	0xfbd3, 0xfd3d,
-	0xfd50, 0xfd8f,
+	0xfd40, 0xfd8f,
 	0xfd92, 0xfdc7,
-	0xfdf0, 0xfdfd,
+	0xfdcf, 0xfdcf,
+	0xfdf0, 0xfdff,
 	0xfe70, 0xfe74,
 	0xfe76, 0xfefc,
 	0x10e60, 0x10e7e,
+	0x10efd, 0x10eff,
 	0x1ee00, 0x1ee03,
 	0x1ee05, 0x1ee1f,
 	0x1ee21, 0x1ee22,
@@ -19556,11 +20639,12 @@ static const OnigCodePoint CR_Thaana[] = {
 
 /* 'Devanagari': Script */
 static const OnigCodePoint CR_Devanagari[] = {
-	4,
+	5,
 	0x0900, 0x0950,
 	0x0955, 0x0963,
 	0x0966, 0x097f,
 	0xa8e0, 0xa8ff,
+	0x11b00, 0x11b09,
 }; /* CR_Devanagari */
 
 /* 'Bengali': Script */
@@ -19635,7 +20719,7 @@ static const OnigCodePoint CR_Oriya[] = {
 	0x0b3c, 0x0b44,
 	0x0b47, 0x0b48,
 	0x0b4b, 0x0b4d,
-	0x0b56, 0x0b57,
+	0x0b55, 0x0b57,
 	0x0b5c, 0x0b5d,
 	0x0b5f, 0x0b63,
 	0x0b66, 0x0b77,
@@ -19666,16 +20750,17 @@ static const OnigCodePoint CR_Tamil[] = {
 
 /* 'Telugu': Script */
 static const OnigCodePoint CR_Telugu[] = {
-	12,
+	13,
 	0x0c00, 0x0c0c,
 	0x0c0e, 0x0c10,
 	0x0c12, 0x0c28,
 	0x0c2a, 0x0c39,
-	0x0c3d, 0x0c44,
+	0x0c3c, 0x0c44,
 	0x0c46, 0x0c48,
 	0x0c4a, 0x0c4d,
 	0x0c55, 0x0c56,
 	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
 	0x0c60, 0x0c63,
 	0x0c66, 0x0c6f,
 	0x0c77, 0x0c7f,
@@ -19693,17 +20778,16 @@ static const OnigCodePoint CR_Kannada[] = {
 	0x0cc6, 0x0cc8,
 	0x0cca, 0x0ccd,
 	0x0cd5, 0x0cd6,
-	0x0cde, 0x0cde,
+	0x0cdd, 0x0cde,
 	0x0ce0, 0x0ce3,
 	0x0ce6, 0x0cef,
-	0x0cf1, 0x0cf2,
+	0x0cf1, 0x0cf3,
 }; /* CR_Kannada */
 
 /* 'Malayalam': Script */
 static const OnigCodePoint CR_Malayalam[] = {
-	8,
-	0x0d00, 0x0d03,
-	0x0d05, 0x0d0c,
+	7,
+	0x0d00, 0x0d0c,
 	0x0d0e, 0x0d10,
 	0x0d12, 0x0d44,
 	0x0d46, 0x0d48,
@@ -19715,7 +20799,7 @@ static const OnigCodePoint CR_Malayalam[] = {
 /* 'Sinhala': Script */
 static const OnigCodePoint CR_Sinhala[] = {
 	13,
-	0x0d82, 0x0d83,
+	0x0d81, 0x0d83,
 	0x0d85, 0x0d96,
 	0x0d9a, 0x0db1,
 	0x0db3, 0x0dbb,
@@ -19748,7 +20832,7 @@ static const OnigCodePoint CR_Lao[] = {
 	0x0ea7, 0x0ebd,
 	0x0ec0, 0x0ec4,
 	0x0ec6, 0x0ec6,
-	0x0ec8, 0x0ecd,
+	0x0ec8, 0x0ece,
 	0x0ed0, 0x0ed9,
 	0x0edc, 0x0edf,
 }; /* CR_Lao */
@@ -19809,7 +20893,7 @@ static const OnigCodePoint CR_Hangul[] = {
 
 /* 'Ethiopic': Script */
 static const OnigCodePoint CR_Ethiopic[] = {
-	32,
+	36,
 	0x1200, 0x1248,
 	0x124a, 0x124d,
 	0x1250, 0x1256,
@@ -19842,6 +20926,10 @@ static const OnigCodePoint CR_Ethiopic[] = {
 	0xab11, 0xab16,
 	0xab20, 0xab26,
 	0xab28, 0xab2e,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
 }; /* CR_Ethiopic */
 
 /* 'Cherokee': Script */
@@ -19854,9 +20942,10 @@ static const OnigCodePoint CR_Cherokee[] = {
 
 /* 'Canadian_Aboriginal': Script */
 static const OnigCodePoint CR_Canadian_Aboriginal[] = {
-	2,
+	3,
 	0x1400, 0x167f,
 	0x18b0, 0x18f5,
+	0x11ab0, 0x11abf,
 }; /* CR_Canadian_Aboriginal */
 
 /* 'Ogham': Script */
@@ -19883,11 +20972,10 @@ static const OnigCodePoint CR_Khmer[] = {
 
 /* 'Mongolian': Script */
 static const OnigCodePoint CR_Mongolian[] = {
-	7,
+	6,
 	0x1800, 0x1801,
 	0x1804, 0x1804,
-	0x1806, 0x180e,
-	0x1810, 0x1819,
+	0x1806, 0x1819,
 	0x1820, 0x1878,
 	0x1880, 0x18aa,
 	0x11660, 0x1166c,
@@ -19895,17 +20983,18 @@ static const OnigCodePoint CR_Mongolian[] = {
 
 /* 'Hiragana': Script */
 static const OnigCodePoint CR_Hiragana[] = {
-	5,
+	6,
 	0x3041, 0x3096,
 	0x309d, 0x309f,
-	0x1b001, 0x1b11e,
+	0x1b001, 0x1b11f,
+	0x1b132, 0x1b132,
 	0x1b150, 0x1b152,
 	0x1f200, 0x1f200,
 }; /* CR_Hiragana */
 
 /* 'Katakana': Script */
 static const OnigCodePoint CR_Katakana[] = {
-	9,
+	14,
 	0x30a1, 0x30fa,
 	0x30fd, 0x30ff,
 	0x31f0, 0x31ff,
@@ -19913,7 +21002,12 @@ static const OnigCodePoint CR_Katakana[] = {
 	0x3300, 0x3357,
 	0xff66, 0xff6f,
 	0xff71, 0xff9d,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
 	0x1b000, 0x1b000,
+	0x1b120, 0x1b122,
+	0x1b155, 0x1b155,
 	0x1b164, 0x1b167,
 }; /* CR_Katakana */
 
@@ -19922,12 +21016,12 @@ static const OnigCodePoint CR_Bopomofo[] = {
 	3,
 	0x02ea, 0x02eb,
 	0x3105, 0x312f,
-	0x31a0, 0x31ba,
+	0x31a0, 0x31bf,
 }; /* CR_Bopomofo */
 
 /* 'Han': Script */
 static const OnigCodePoint CR_Han[] = {
-	17,
+	21,
 	0x2e80, 0x2e99,
 	0x2e9b, 0x2ef3,
 	0x2f00, 0x2fd5,
@@ -19935,16 +21029,20 @@ static const OnigCodePoint CR_Han[] = {
 	0x3007, 0x3007,
 	0x3021, 0x3029,
 	0x3038, 0x303b,
-	0x3400, 0x4db5,
-	0x4e00, 0x9fef,
+	0x3400, 0x4dbf,
+	0x4e00, 0x9fff,
 	0xf900, 0xfa6d,
 	0xfa70, 0xfad9,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x16fe2, 0x16fe3,
+	0x16ff0, 0x16ff1,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 }; /* CR_Han */
 
 /* 'Yi': Script */
@@ -19975,21 +21073,20 @@ static const OnigCodePoint CR_Deseret[] = {
 
 /* 'Inherited': Script */
 static const OnigCodePoint CR_Inherited[] = {
-	28,
+	29,
 	0x0300, 0x036f,
 	0x0485, 0x0486,
 	0x064b, 0x0655,
 	0x0670, 0x0670,
 	0x0951, 0x0954,
-	0x1ab0, 0x1abe,
+	0x1ab0, 0x1ace,
 	0x1cd0, 0x1cd2,
 	0x1cd4, 0x1ce0,
 	0x1ce2, 0x1ce8,
 	0x1ced, 0x1ced,
 	0x1cf4, 0x1cf4,
 	0x1cf8, 0x1cf9,
-	0x1dc0, 0x1df9,
-	0x1dfb, 0x1dff,
+	0x1dc0, 0x1dff,
 	0x200c, 0x200d,
 	0x20d0, 0x20f0,
 	0x302a, 0x302d,
@@ -19999,6 +21096,8 @@ static const OnigCodePoint CR_Inherited[] = {
 	0x101fd, 0x101fd,
 	0x102e0, 0x102e0,
 	0x1133b, 0x1133b,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
 	0x1d167, 0x1d169,
 	0x1d17b, 0x1d182,
 	0x1d185, 0x1d18b,
@@ -20009,8 +21108,8 @@ static const OnigCodePoint CR_Inherited[] = {
 /* 'Tagalog': Script */
 static const OnigCodePoint CR_Tagalog[] = {
 	2,
-	0x1700, 0x170c,
-	0x170e, 0x1714,
+	0x1700, 0x1715,
+	0x171f, 0x171f,
 }; /* CR_Tagalog */
 
 /* 'Hanunoo': Script */
@@ -20125,9 +21224,8 @@ static const OnigCodePoint CR_New_Tai_Lue[] = {
 
 /* 'Glagolitic': Script */
 static const OnigCodePoint CR_Glagolitic[] = {
-	7,
-	0x2c00, 0x2c2e,
-	0x2c30, 0x2c5e,
+	6,
+	0x2c00, 0x2c5f,
 	0x1e000, 0x1e006,
 	0x1e008, 0x1e018,
 	0x1e01b, 0x1e021,
@@ -20146,7 +21244,7 @@ static const OnigCodePoint CR_Tifinagh[] = {
 /* 'Syloti_Nagri': Script */
 static const OnigCodePoint CR_Syloti_Nagri[] = {
 	1,
-	0xa800, 0xa82b,
+	0xa800, 0xa82c,
 }; /* CR_Syloti_Nagri */
 
 /* 'Old_Persian': Script */
@@ -20172,8 +21270,8 @@ static const OnigCodePoint CR_Kharoshthi[] = {
 /* 'Balinese': Script */
 static const OnigCodePoint CR_Balinese[] = {
 	2,
-	0x1b00, 0x1b4b,
-	0x1b50, 0x1b7c,
+	0x1b00, 0x1b4c,
+	0x1b50, 0x1b7e,
 }; /* CR_Balinese */
 
 /* 'Cuneiform': Script */
@@ -20307,9 +21405,8 @@ static const OnigCodePoint CR_Avestan[] = {
 
 /* 'Egyptian_Hieroglyphs': Script */
 static const OnigCodePoint CR_Egyptian_Hieroglyphs[] = {
-	2,
-	0x13000, 0x1342e,
-	0x13430, 0x13438,
+	1,
+	0x13000, 0x13455,
 }; /* CR_Egyptian_Hieroglyphs */
 
 /* 'Samaritan': Script */
@@ -20321,8 +21418,9 @@ static const OnigCodePoint CR_Samaritan[] = {
 
 /* 'Lisu': Script */
 static const OnigCodePoint CR_Lisu[] = {
-	1,
+	2,
 	0xa4d0, 0xa4ff,
+	0x11fb0, 0x11fb0,
 }; /* CR_Lisu */
 
 /* 'Bamum': Script */
@@ -20384,7 +21482,7 @@ static const OnigCodePoint CR_Old_Turkic[] = {
 /* 'Kaithi': Script */
 static const OnigCodePoint CR_Kaithi[] = {
 	2,
-	0x11080, 0x110c1,
+	0x11080, 0x110c2,
 	0x110cd, 0x110cd,
 }; /* CR_Kaithi */
 
@@ -20399,7 +21497,7 @@ static const OnigCodePoint CR_Batak[] = {
 static const OnigCodePoint CR_Brahmi[] = {
 	3,
 	0x11000, 0x1104d,
-	0x11052, 0x1106f,
+	0x11052, 0x11075,
 	0x1107f, 0x1107f,
 }; /* CR_Brahmi */
 
@@ -20414,7 +21512,7 @@ static const OnigCodePoint CR_Mandaic[] = {
 static const OnigCodePoint CR_Chakma[] = {
 	2,
 	0x11100, 0x11134,
-	0x11136, 0x11146,
+	0x11136, 0x11147,
 }; /* CR_Chakma */
 
 /* 'Meroitic_Cursive': Script */
@@ -20441,9 +21539,8 @@ static const OnigCodePoint CR_Miao[] = {
 
 /* 'Sharada': Script */
 static const OnigCodePoint CR_Sharada[] = {
-	2,
-	0x11180, 0x111cd,
-	0x111d0, 0x111df,
+	1,
+	0x11180, 0x111df,
 }; /* CR_Sharada */
 
 /* 'Sora_Sompeng': Script */
@@ -20456,7 +21553,7 @@ static const OnigCodePoint CR_Sora_Sompeng[] = {
 /* 'Takri': Script */
 static const OnigCodePoint CR_Takri[] = {
 	2,
-	0x11680, 0x116b8,
+	0x11680, 0x116b9,
 	0x116c0, 0x116c9,
 }; /* CR_Takri */
 
@@ -20524,7 +21621,7 @@ static const OnigCodePoint CR_Pahawh_Hmong[] = {
 static const OnigCodePoint CR_Khojki[] = {
 	2,
 	0x11200, 0x11211,
-	0x11213, 0x1123e,
+	0x11213, 0x11241,
 }; /* CR_Khojki */
 
 /* 'Linear_A': Script */
@@ -20642,7 +21739,7 @@ static const OnigCodePoint CR_Ahom[] = {
 	3,
 	0x11700, 0x1171a,
 	0x1171d, 0x1172b,
-	0x11730, 0x1173f,
+	0x11730, 0x11746,
 }; /* CR_Ahom */
 
 /* 'Anatolian_Hieroglyphs': Script */
@@ -20712,10 +21809,9 @@ static const OnigCodePoint CR_Marchen[] = {
 
 /* 'Newa': Script */
 static const OnigCodePoint CR_Newa[] = {
-	3,
-	0x11400, 0x11459,
-	0x1145b, 0x1145b,
-	0x1145d, 0x1145f,
+	2,
+	0x11400, 0x1145b,
+	0x1145d, 0x11461,
 }; /* CR_Newa */
 
 /* 'Osage': Script */
@@ -20727,10 +21823,11 @@ static const OnigCodePoint CR_Osage[] = {
 
 /* 'Tangut': Script */
 static const OnigCodePoint CR_Tangut[] = {
-	3,
+	4,
 	0x16fe0, 0x16fe0,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
+	0x18800, 0x18aff,
+	0x18d00, 0x18d08,
 }; /* CR_Tangut */
 
 /* 'Masaram_Gondi': Script */
@@ -20842,6 +21939,92 @@ static const OnigCodePoint CR_Wancho[] = {
 	0x1e2ff, 0x1e2ff,
 }; /* CR_Wancho */
 
+/* 'Chorasmian': Script */
+static const OnigCodePoint CR_Chorasmian[] = {
+	1,
+	0x10fb0, 0x10fcb,
+}; /* CR_Chorasmian */
+
+/* 'Dives_Akuru': Script */
+static const OnigCodePoint CR_Dives_Akuru[] = {
+	8,
+	0x11900, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x11946,
+	0x11950, 0x11959,
+}; /* CR_Dives_Akuru */
+
+/* 'Khitan_Small_Script': Script */
+static const OnigCodePoint CR_Khitan_Small_Script[] = {
+	2,
+	0x16fe4, 0x16fe4,
+	0x18b00, 0x18cd5,
+}; /* CR_Khitan_Small_Script */
+
+/* 'Yezidi': Script */
+static const OnigCodePoint CR_Yezidi[] = {
+	3,
+	0x10e80, 0x10ea9,
+	0x10eab, 0x10ead,
+	0x10eb0, 0x10eb1,
+}; /* CR_Yezidi */
+
+/* 'Cypro_Minoan': Script */
+static const OnigCodePoint CR_Cypro_Minoan[] = {
+	1,
+	0x12f90, 0x12ff2,
+}; /* CR_Cypro_Minoan */
+
+/* 'Old_Uyghur': Script */
+static const OnigCodePoint CR_Old_Uyghur[] = {
+	1,
+	0x10f70, 0x10f89,
+}; /* CR_Old_Uyghur */
+
+/* 'Tangsa': Script */
+static const OnigCodePoint CR_Tangsa[] = {
+	2,
+	0x16a70, 0x16abe,
+	0x16ac0, 0x16ac9,
+}; /* CR_Tangsa */
+
+/* 'Toto': Script */
+static const OnigCodePoint CR_Toto[] = {
+	1,
+	0x1e290, 0x1e2ae,
+}; /* CR_Toto */
+
+/* 'Vithkuqi': Script */
+static const OnigCodePoint CR_Vithkuqi[] = {
+	8,
+	0x10570, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
+}; /* CR_Vithkuqi */
+
+/* 'Kawi': Script */
+static const OnigCodePoint CR_Kawi[] = {
+	3,
+	0x11f00, 0x11f10,
+	0x11f12, 0x11f3a,
+	0x11f3e, 0x11f59,
+}; /* CR_Kawi */
+
+/* 'Nag_Mundari': Script */
+static const OnigCodePoint CR_Nag_Mundari[] = {
+	1,
+	0x1e4d0, 0x1e4f9,
+}; /* CR_Nag_Mundari */
+
 /* 'White_Space': Binary Property */
 #define CR_White_Space CR_Space
 
@@ -20862,7 +22045,7 @@ static const OnigCodePoint CR_Join_Control[] = {
 
 /* 'Dash': Binary Property */
 static const OnigCodePoint CR_Dash[] = {
-	21,
+	23,
 	0x002d, 0x002d,
 	0x058a, 0x058a,
 	0x05be, 0x05be,
@@ -20877,6 +22060,7 @@ static const OnigCodePoint CR_Dash[] = {
 	0x2e1a, 0x2e1a,
 	0x2e3a, 0x2e3b,
 	0x2e40, 0x2e40,
+	0x2e5d, 0x2e5d,
 	0x301c, 0x301c,
 	0x3030, 0x3030,
 	0x30a0, 0x30a0,
@@ -20884,6 +22068,7 @@ static const OnigCodePoint CR_Dash[] = {
 	0xfe58, 0xfe58,
 	0xfe63, 0xfe63,
 	0xff0d, 0xff0d,
+	0x10ead, 0x10ead,
 }; /* CR_Dash */
 
 /* 'Hyphen': Binary Property */
@@ -20921,7 +22106,7 @@ static const OnigCodePoint CR_Quotation_Mark[] = {
 
 /* 'Terminal_Punctuation': Binary Property */
 static const OnigCodePoint CR_Terminal_Punctuation[] = {
-	102,
+	108,
 	0x0021, 0x0021,
 	0x002c, 0x002c,
 	0x002e, 0x002e,
@@ -20933,7 +22118,7 @@ static const OnigCodePoint CR_Terminal_Punctuation[] = {
 	0x05c3, 0x05c3,
 	0x060c, 0x060c,
 	0x061b, 0x061b,
-	0x061e, 0x061f,
+	0x061d, 0x061f,
 	0x06d4, 0x06d4,
 	0x0700, 0x070a,
 	0x070c, 0x070c,
@@ -20957,6 +22142,7 @@ static const OnigCodePoint CR_Terminal_Punctuation[] = {
 	0x1aa8, 0x1aab,
 	0x1b5a, 0x1b5b,
 	0x1b5d, 0x1b5f,
+	0x1b7d, 0x1b7e,
 	0x1c3b, 0x1c3f,
 	0x1c7e, 0x1c7f,
 	0x203c, 0x203d,
@@ -20966,6 +22152,7 @@ static const OnigCodePoint CR_Terminal_Punctuation[] = {
 	0x2e41, 0x2e41,
 	0x2e4c, 0x2e4c,
 	0x2e4e, 0x2e4f,
+	0x2e53, 0x2e54,
 	0x3001, 0x3002,
 	0xa4fe, 0xa4ff,
 	0xa60d, 0xa60f,
@@ -20996,6 +22183,7 @@ static const OnigCodePoint CR_Terminal_Punctuation[] = {
 	0x10b3a, 0x10b3f,
 	0x10b99, 0x10b9c,
 	0x10f55, 0x10f59,
+	0x10f86, 0x10f89,
 	0x11047, 0x1104d,
 	0x110be, 0x110c1,
 	0x11141, 0x11143,
@@ -21005,17 +22193,20 @@ static const OnigCodePoint CR_Terminal_Punctuation[] = {
 	0x11238, 0x1123c,
 	0x112a9, 0x112a9,
 	0x1144b, 0x1144d,
-	0x1145b, 0x1145b,
+	0x1145a, 0x1145b,
 	0x115c2, 0x115c5,
 	0x115c9, 0x115d7,
 	0x11641, 0x11642,
 	0x1173c, 0x1173e,
+	0x11944, 0x11944,
+	0x11946, 0x11946,
 	0x11a42, 0x11a43,
 	0x11a9b, 0x11a9c,
 	0x11aa1, 0x11aa2,
 	0x11c41, 0x11c43,
 	0x11c71, 0x11c71,
 	0x11ef7, 0x11ef8,
+	0x11f43, 0x11f44,
 	0x12470, 0x12474,
 	0x16a6e, 0x16a6f,
 	0x16af5, 0x16af5,
@@ -21181,7 +22372,7 @@ static const OnigCodePoint CR_Hex_Digit[] = {
 
 /* 'Other_Alphabetic': Binary Property */
 static const OnigCodePoint CR_Other_Alphabetic[] = {
-	221,
+	240,
 	0x0345, 0x0345,
 	0x05b0, 0x05bd,
 	0x05bf, 0x05bf,
@@ -21241,7 +22432,7 @@ static const OnigCodePoint CR_Other_Alphabetic[] = {
 	0x0bc6, 0x0bc8,
 	0x0bca, 0x0bcc,
 	0x0bd7, 0x0bd7,
-	0x0c00, 0x0c03,
+	0x0c00, 0x0c04,
 	0x0c3e, 0x0c44,
 	0x0c46, 0x0c48,
 	0x0c4a, 0x0c4c,
@@ -21253,13 +22444,14 @@ static const OnigCodePoint CR_Other_Alphabetic[] = {
 	0x0cca, 0x0ccc,
 	0x0cd5, 0x0cd6,
 	0x0ce2, 0x0ce3,
+	0x0cf3, 0x0cf3,
 	0x0d00, 0x0d03,
 	0x0d3e, 0x0d44,
 	0x0d46, 0x0d48,
 	0x0d4a, 0x0d4c,
 	0x0d57, 0x0d57,
 	0x0d62, 0x0d63,
-	0x0d82, 0x0d83,
+	0x0d81, 0x0d83,
 	0x0dcf, 0x0dd4,
 	0x0dd6, 0x0dd6,
 	0x0dd8, 0x0ddf,
@@ -21271,7 +22463,7 @@ static const OnigCodePoint CR_Other_Alphabetic[] = {
 	0x0eb4, 0x0eb9,
 	0x0ebb, 0x0ebc,
 	0x0ecd, 0x0ecd,
-	0x0f71, 0x0f81,
+	0x0f71, 0x0f83,
 	0x0f8d, 0x0f97,
 	0x0f99, 0x0fbc,
 	0x102b, 0x1036,
@@ -21297,6 +22489,8 @@ static const OnigCodePoint CR_Other_Alphabetic[] = {
 	0x1a17, 0x1a1b,
 	0x1a55, 0x1a5e,
 	0x1a61, 0x1a74,
+	0x1abf, 0x1ac0,
+	0x1acc, 0x1ace,
 	0x1b00, 0x1b04,
 	0x1b35, 0x1b43,
 	0x1b80, 0x1b82,
@@ -21338,18 +22532,23 @@ static const OnigCodePoint CR_Other_Alphabetic[] = {
 	0x10a05, 0x10a06,
 	0x10a0c, 0x10a0f,
 	0x10d24, 0x10d27,
+	0x10eab, 0x10eac,
 	0x11000, 0x11002,
 	0x11038, 0x11045,
-	0x11082, 0x11082,
+	0x11073, 0x11074,
+	0x11080, 0x11082,
 	0x110b0, 0x110b8,
+	0x110c2, 0x110c2,
 	0x11100, 0x11102,
 	0x11127, 0x11132,
 	0x11145, 0x11146,
 	0x11180, 0x11182,
 	0x111b3, 0x111bf,
+	0x111ce, 0x111cf,
 	0x1122c, 0x11234,
 	0x11237, 0x11237,
 	0x1123e, 0x1123e,
+	0x11241, 0x11241,
 	0x112df, 0x112e8,
 	0x11300, 0x11303,
 	0x1133e, 0x11344,
@@ -21368,6 +22567,11 @@ static const OnigCodePoint CR_Other_Alphabetic[] = {
 	0x116ab, 0x116b5,
 	0x1171d, 0x1172a,
 	0x1182c, 0x11838,
+	0x11930, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x1193c,
+	0x11940, 0x11940,
+	0x11942, 0x11942,
 	0x119d1, 0x119d7,
 	0x119da, 0x119df,
 	0x119e4, 0x119e4,
@@ -21390,15 +22594,21 @@ static const OnigCodePoint CR_Other_Alphabetic[] = {
 	0x11d90, 0x11d91,
 	0x11d93, 0x11d96,
 	0x11ef3, 0x11ef6,
+	0x11f00, 0x11f01,
+	0x11f03, 0x11f03,
+	0x11f34, 0x11f3a,
+	0x11f3e, 0x11f40,
 	0x16f4f, 0x16f4f,
 	0x16f51, 0x16f87,
 	0x16f8f, 0x16f92,
+	0x16ff0, 0x16ff1,
 	0x1bc9e, 0x1bc9e,
 	0x1e000, 0x1e006,
 	0x1e008, 0x1e018,
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e08f, 0x1e08f,
 	0x1e947, 0x1e947,
 	0x1f130, 0x1f149,
 	0x1f150, 0x1f169,
@@ -21407,28 +22617,32 @@ static const OnigCodePoint CR_Other_Alphabetic[] = {
 
 /* 'Ideographic': Binary Property */
 static const OnigCodePoint CR_Ideographic[] = {
-	16,
+	20,
 	0x3006, 0x3007,
 	0x3021, 0x3029,
 	0x3038, 0x303a,
-	0x3400, 0x4db5,
-	0x4e00, 0x9fef,
+	0x3400, 0x4dbf,
+	0x4e00, 0x9fff,
 	0xf900, 0xfa6d,
 	0xfa70, 0xfad9,
+	0x16fe4, 0x16fe4,
 	0x17000, 0x187f7,
-	0x18800, 0x18af2,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
 	0x1b170, 0x1b2fb,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
 	0x2f800, 0x2fa1d,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 }; /* CR_Ideographic */
 
 /* 'Diacritic': Binary Property */
 static const OnigCodePoint CR_Diacritic[] = {
-	171,
+	195,
 	0x005e, 0x005e,
 	0x0060, 0x0060,
 	0x00a8, 0x00a8,
@@ -21457,6 +22671,8 @@ static const OnigCodePoint CR_Diacritic[] = {
 	0x07a6, 0x07b0,
 	0x07eb, 0x07f5,
 	0x0818, 0x0819,
+	0x0898, 0x089f,
+	0x08c9, 0x08d2,
 	0x08e3, 0x08fe,
 	0x093c, 0x093c,
 	0x094d, 0x094d,
@@ -21471,7 +22687,9 @@ static const OnigCodePoint CR_Diacritic[] = {
 	0x0afd, 0x0aff,
 	0x0b3c, 0x0b3c,
 	0x0b4d, 0x0b4d,
+	0x0b55, 0x0b55,
 	0x0bcd, 0x0bcd,
+	0x0c3c, 0x0c3c,
 	0x0c4d, 0x0c4d,
 	0x0cbc, 0x0cbc,
 	0x0ccd, 0x0ccd,
@@ -21498,12 +22716,14 @@ static const OnigCodePoint CR_Diacritic[] = {
 	0x108f, 0x108f,
 	0x109a, 0x109b,
 	0x135d, 0x135f,
+	0x1714, 0x1715,
 	0x17c9, 0x17d3,
 	0x17dd, 0x17dd,
 	0x1939, 0x193b,
 	0x1a75, 0x1a7c,
 	0x1a7f, 0x1a7f,
-	0x1ab0, 0x1abd,
+	0x1ab0, 0x1abe,
+	0x1ac1, 0x1acb,
 	0x1b34, 0x1b34,
 	0x1b44, 0x1b44,
 	0x1b6b, 0x1b73,
@@ -21516,8 +22736,7 @@ static const OnigCodePoint CR_Diacritic[] = {
 	0x1cf7, 0x1cf9,
 	0x1d2c, 0x1d6a,
 	0x1dc4, 0x1dcf,
-	0x1df5, 0x1df9,
-	0x1dfd, 0x1dff,
+	0x1df5, 0x1dff,
 	0x1fbd, 0x1fbd,
 	0x1fbf, 0x1fc1,
 	0x1fcd, 0x1fcf,
@@ -21548,6 +22767,7 @@ static const OnigCodePoint CR_Diacritic[] = {
 	0xaabf, 0xaac2,
 	0xaaf6, 0xaaf6,
 	0xab5b, 0xab5f,
+	0xab69, 0xab6b,
 	0xabec, 0xabed,
 	0xfb1e, 0xfb1e,
 	0xfe20, 0xfe2f,
@@ -21557,9 +22777,16 @@ static const OnigCodePoint CR_Diacritic[] = {
 	0xff9e, 0xff9f,
 	0xffe3, 0xffe3,
 	0x102e0, 0x102e0,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
 	0x10ae5, 0x10ae6,
 	0x10d22, 0x10d27,
+	0x10efd, 0x10eff,
 	0x10f46, 0x10f50,
+	0x10f82, 0x10f85,
+	0x11046, 0x11046,
+	0x11070, 0x11070,
 	0x110b9, 0x110ba,
 	0x11133, 0x11134,
 	0x11173, 0x11173,
@@ -21579,6 +22806,8 @@ static const OnigCodePoint CR_Diacritic[] = {
 	0x116b6, 0x116b7,
 	0x1172b, 0x1172b,
 	0x11839, 0x1183a,
+	0x1193d, 0x1193e,
+	0x11943, 0x11943,
 	0x119e0, 0x119e0,
 	0x11a34, 0x11a34,
 	0x11a47, 0x11a47,
@@ -21587,15 +22816,24 @@ static const OnigCodePoint CR_Diacritic[] = {
 	0x11d42, 0x11d42,
 	0x11d44, 0x11d45,
 	0x11d97, 0x11d97,
+	0x13447, 0x13455,
 	0x16af0, 0x16af4,
 	0x16b30, 0x16b36,
 	0x16f8f, 0x16f9f,
+	0x16ff0, 0x16ff1,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
 	0x1d167, 0x1d169,
 	0x1d16d, 0x1d172,
 	0x1d17b, 0x1d182,
 	0x1d185, 0x1d18b,
 	0x1d1aa, 0x1d1ad,
+	0x1e030, 0x1e06d,
 	0x1e130, 0x1e136,
+	0x1e2ae, 0x1e2ae,
 	0x1e2ec, 0x1e2ef,
 	0x1e8d0, 0x1e8d6,
 	0x1e944, 0x1e946,
@@ -21604,11 +22842,12 @@ static const OnigCodePoint CR_Diacritic[] = {
 
 /* 'Extender': Binary Property */
 static const OnigCodePoint CR_Extender[] = {
-	31,
+	33,
 	0x00b7, 0x00b7,
 	0x02d0, 0x02d1,
 	0x0640, 0x0640,
 	0x07fa, 0x07fa,
+	0x0b55, 0x0b55,
 	0x0e46, 0x0e46,
 	0x0ec6, 0x0ec6,
 	0x180a, 0x180a,
@@ -21628,6 +22867,7 @@ static const OnigCodePoint CR_Extender[] = {
 	0xaadd, 0xaadd,
 	0xaaf3, 0xaaf4,
 	0xff70, 0xff70,
+	0x10781, 0x10782,
 	0x1135d, 0x1135d,
 	0x115c6, 0x115c8,
 	0x11a98, 0x11a98,
@@ -21640,7 +22880,7 @@ static const OnigCodePoint CR_Extender[] = {
 
 /* 'Other_Lowercase': Binary Property */
 static const OnigCodePoint CR_Other_Lowercase[] = {
-	20,
+	28,
 	0x00aa, 0x00aa,
 	0x00ba, 0x00ba,
 	0x02b0, 0x02b8,
@@ -21648,6 +22888,7 @@ static const OnigCodePoint CR_Other_Lowercase[] = {
 	0x02e0, 0x02e4,
 	0x0345, 0x0345,
 	0x037a, 0x037a,
+	0x10fc, 0x10fc,
 	0x1d2c, 0x1d6a,
 	0x1d78, 0x1d78,
 	0x1d9b, 0x1dbf,
@@ -21659,8 +22900,15 @@ static const OnigCodePoint CR_Other_Lowercase[] = {
 	0x2c7c, 0x2c7d,
 	0xa69c, 0xa69d,
 	0xa770, 0xa770,
+	0xa7f2, 0xa7f4,
 	0xa7f8, 0xa7f9,
 	0xab5c, 0xab5f,
+	0xab69, 0xab69,
+	0x10780, 0x10780,
+	0x10783, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
+	0x1e030, 0x1e06d,
 }; /* CR_Other_Lowercase */
 
 /* 'Other_Uppercase': Binary Property */
@@ -21698,7 +22946,7 @@ static const OnigCodePoint CR_Noncharacter_Code_Point[] = {
 
 /* 'Other_Grapheme_Extend': Binary Property */
 static const OnigCodePoint CR_Other_Grapheme_Extend[] = {
-	24,
+	25,
 	0x09be, 0x09be,
 	0x09d7, 0x09d7,
 	0x0b3e, 0x0b3e,
@@ -21720,6 +22968,7 @@ static const OnigCodePoint CR_Other_Grapheme_Extend[] = {
 	0x114b0, 0x114b0,
 	0x114bd, 0x114bd,
 	0x115af, 0x115af,
+	0x11930, 0x11930,
 	0x1d165, 0x1d165,
 	0x1d16e, 0x1d172,
 	0xe0020, 0xe007f,
@@ -21748,9 +22997,9 @@ static const OnigCodePoint CR_Radical[] = {
 
 /* 'Unified_Ideograph': Binary Property */
 static const OnigCodePoint CR_Unified_Ideograph[] = {
-	14,
-	0x3400, 0x4db5,
-	0x4e00, 0x9fef,
+	16,
+	0x3400, 0x4dbf,
+	0x4e00, 0x9fff,
 	0xfa0e, 0xfa0f,
 	0xfa11, 0xfa11,
 	0xfa13, 0xfa14,
@@ -21758,11 +23007,13 @@ static const OnigCodePoint CR_Unified_Ideograph[] = {
 	0xfa21, 0xfa21,
 	0xfa23, 0xfa24,
 	0xfa27, 0xfa29,
-	0x20000, 0x2a6d6,
-	0x2a700, 0x2b734,
+	0x20000, 0x2a6df,
+	0x2a700, 0x2b739,
 	0x2b740, 0x2b81d,
 	0x2b820, 0x2cea1,
 	0x2ceb0, 0x2ebe0,
+	0x30000, 0x3134a,
+	0x31350, 0x323af,
 }; /* CR_Unified_Ideograph */
 
 /* 'Other_Default_Ignorable_Code_Point': Binary Property */
@@ -21796,7 +23047,7 @@ static const OnigCodePoint CR_Deprecated[] = {
 
 /* 'Soft_Dotted': Binary Property */
 static const OnigCodePoint CR_Soft_Dotted[] = {
-	31,
+	34,
 	0x0069, 0x006a,
 	0x012f, 0x012f,
 	0x0249, 0x0249,
@@ -21828,6 +23079,9 @@ static const OnigCodePoint CR_Soft_Dotted[] = {
 	0x1d62a, 0x1d62b,
 	0x1d65e, 0x1d65f,
 	0x1d692, 0x1d693,
+	0x1df1a, 0x1df1a,
+	0x1e04c, 0x1e04d,
+	0x1e068, 0x1e068,
 }; /* CR_Soft_Dotted */
 
 /* 'Logical_Order_Exception': Binary Property */
@@ -21862,12 +23116,12 @@ static const OnigCodePoint CR_Other_ID_Continue[] = {
 
 /* 'Sentence_Terminal': Binary Property */
 static const OnigCodePoint CR_Sentence_Terminal[] = {
-	74,
+	80,
 	0x0021, 0x0021,
 	0x002e, 0x002e,
 	0x003f, 0x003f,
 	0x0589, 0x0589,
-	0x061e, 0x061f,
+	0x061d, 0x061f,
 	0x06d4, 0x06d4,
 	0x0700, 0x0702,
 	0x07f9, 0x07f9,
@@ -21886,12 +23140,14 @@ static const OnigCodePoint CR_Sentence_Terminal[] = {
 	0x1aa8, 0x1aab,
 	0x1b5a, 0x1b5b,
 	0x1b5e, 0x1b5f,
+	0x1b7d, 0x1b7e,
 	0x1c3b, 0x1c3c,
 	0x1c7e, 0x1c7f,
 	0x203c, 0x203d,
 	0x2047, 0x2049,
 	0x2e2e, 0x2e2e,
 	0x2e3c, 0x2e3c,
+	0x2e53, 0x2e54,
 	0x3002, 0x3002,
 	0xa4ff, 0xa4ff,
 	0xa60e, 0xa60f,
@@ -21912,6 +23168,7 @@ static const OnigCodePoint CR_Sentence_Terminal[] = {
 	0xff61, 0xff61,
 	0x10a56, 0x10a57,
 	0x10f55, 0x10f59,
+	0x10f86, 0x10f89,
 	0x11047, 0x11048,
 	0x110be, 0x110c1,
 	0x11141, 0x11143,
@@ -21926,10 +23183,13 @@ static const OnigCodePoint CR_Sentence_Terminal[] = {
 	0x115c9, 0x115d7,
 	0x11641, 0x11642,
 	0x1173c, 0x1173e,
+	0x11944, 0x11944,
+	0x11946, 0x11946,
 	0x11a42, 0x11a43,
 	0x11a9b, 0x11a9c,
 	0x11c41, 0x11c42,
 	0x11ef7, 0x11ef8,
+	0x11f43, 0x11f44,
 	0x16a6e, 0x16a6f,
 	0x16af5, 0x16af5,
 	0x16b37, 0x16b38,
@@ -21941,8 +23201,9 @@ static const OnigCodePoint CR_Sentence_Terminal[] = {
 
 /* 'Variation_Selector': Binary Property */
 static const OnigCodePoint CR_Variation_Selector[] = {
-	3,
+	4,
 	0x180b, 0x180d,
+	0x180f, 0x180f,
 	0xfe00, 0xfe0f,
 	0xe0100, 0xe01ef,
 }; /* CR_Variation_Selector */
@@ -21992,10 +23253,11 @@ static const OnigCodePoint CR_Pattern_Syntax[] = {
 
 /* 'Prepended_Concatenation_Mark': Binary Property */
 static const OnigCodePoint CR_Prepended_Concatenation_Mark[] = {
-	6,
+	7,
 	0x0600, 0x0605,
 	0x06dd, 0x06dd,
 	0x070f, 0x070f,
+	0x0890, 0x0891,
 	0x08e2, 0x08e2,
 	0x110bd, 0x110bd,
 	0x110cd, 0x110cd,
@@ -22056,6 +23318,7 @@ static const OnigCodePoint CR_Emoji[] = {
 	0x2699, 0x2699,
 	0x269b, 0x269c,
 	0x26a0, 0x26a1,
+	0x26a7, 0x26a7,
 	0x26aa, 0x26ab,
 	0x26b0, 0x26b1,
 	0x26bd, 0x26be,
@@ -22142,25 +23405,24 @@ static const OnigCodePoint CR_Emoji[] = {
 	0x1f5fa, 0x1f64f,
 	0x1f680, 0x1f6c5,
 	0x1f6cb, 0x1f6d2,
-	0x1f6d5, 0x1f6d5,
-	0x1f6e0, 0x1f6e5,
+	0x1f6d5, 0x1f6d7,
+	0x1f6dc, 0x1f6e5,
 	0x1f6e9, 0x1f6e9,
 	0x1f6eb, 0x1f6ec,
 	0x1f6f0, 0x1f6f0,
-	0x1f6f3, 0x1f6fa,
+	0x1f6f3, 0x1f6fc,
 	0x1f7e0, 0x1f7eb,
-	0x1f90d, 0x1f93a,
+	0x1f7f0, 0x1f7f0,
+	0x1f90c, 0x1f93a,
 	0x1f93c, 0x1f945,
-	0x1f947, 0x1f971,
-	0x1f973, 0x1f976,
-	0x1f97a, 0x1f9a2,
-	0x1f9a5, 0x1f9aa,
-	0x1f9ae, 0x1f9ca,
-	0x1f9cd, 0x1f9ff,
-	0x1fa70, 0x1fa73,
-	0x1fa78, 0x1fa7a,
-	0x1fa80, 0x1fa82,
-	0x1fa90, 0x1fa95,
+	0x1f947, 0x1f9ff,
+	0x1fa70, 0x1fa7c,
+	0x1fa80, 0x1fa88,
+	0x1fa90, 0x1fabd,
+	0x1fabf, 0x1fac5,
+	0x1face, 0x1fadb,
+	0x1fae0, 0x1fae8,
+	0x1faf0, 0x1faf8,
 }; /* CR_Emoji */
 
 /* 'Emoji_Presentation': Emoji */
@@ -22231,22 +23493,22 @@ static const OnigCodePoint CR_Emoji_Presentation[] = {
 	0x1f680, 0x1f6c5,
 	0x1f6cc, 0x1f6cc,
 	0x1f6d0, 0x1f6d2,
-	0x1f6d5, 0x1f6d5,
+	0x1f6d5, 0x1f6d7,
+	0x1f6dc, 0x1f6df,
 	0x1f6eb, 0x1f6ec,
-	0x1f6f4, 0x1f6fa,
+	0x1f6f4, 0x1f6fc,
 	0x1f7e0, 0x1f7eb,
-	0x1f90d, 0x1f93a,
+	0x1f7f0, 0x1f7f0,
+	0x1f90c, 0x1f93a,
 	0x1f93c, 0x1f945,
-	0x1f947, 0x1f971,
-	0x1f973, 0x1f976,
-	0x1f97a, 0x1f9a2,
-	0x1f9a5, 0x1f9aa,
-	0x1f9ae, 0x1f9ca,
-	0x1f9cd, 0x1f9ff,
-	0x1fa70, 0x1fa73,
-	0x1fa78, 0x1fa7a,
-	0x1fa80, 0x1fa82,
-	0x1fa90, 0x1fa95,
+	0x1f947, 0x1f9ff,
+	0x1fa70, 0x1fa7c,
+	0x1fa80, 0x1fa88,
+	0x1fa90, 0x1fabd,
+	0x1fabf, 0x1fac5,
+	0x1face, 0x1fadb,
+	0x1fae0, 0x1fae8,
+	0x1faf0, 0x1faf8,
 }; /* CR_Emoji_Presentation */
 
 /* 'Emoji_Modifier': Emoji */
@@ -22257,7 +23519,7 @@ static const OnigCodePoint CR_Emoji_Modifier[] = {
 
 /* 'Emoji_Modifier_Base': Emoji */
 static const OnigCodePoint CR_Emoji_Modifier_Base[] = {
-	36,
+	40,
 	0x261d, 0x261d,
 	0x26f9, 0x26f9,
 	0x270a, 0x270d,
@@ -22284,16 +23546,20 @@ static const OnigCodePoint CR_Emoji_Modifier_Base[] = {
 	0x1f6b4, 0x1f6b6,
 	0x1f6c0, 0x1f6c0,
 	0x1f6cc, 0x1f6cc,
+	0x1f90c, 0x1f90c,
 	0x1f90f, 0x1f90f,
 	0x1f918, 0x1f91f,
 	0x1f926, 0x1f926,
 	0x1f930, 0x1f939,
 	0x1f93c, 0x1f93e,
+	0x1f977, 0x1f977,
 	0x1f9b5, 0x1f9b6,
 	0x1f9b8, 0x1f9b9,
 	0x1f9bb, 0x1f9bb,
 	0x1f9cd, 0x1f9cf,
 	0x1f9d1, 0x1f9dd,
+	0x1fac3, 0x1fac5,
+	0x1faf0, 0x1faf8,
 }; /* CR_Emoji_Modifier_Base */
 
 /* 'Emoji_Component': Emoji */
@@ -22313,7 +23579,7 @@ static const OnigCodePoint CR_Emoji_Component[] = {
 
 /* 'Extended_Pictographic': Emoji */
 static const OnigCodePoint CR_Extended_Pictographic[] = {
-	77,
+	78,
 	0x00a9, 0x00a9,
 	0x00ae, 0x00ae,
 	0x203c, 0x203c,
@@ -22390,12 +23656,13 @@ static const OnigCodePoint CR_Extended_Pictographic[] = {
 	0x1f8ae, 0x1f8ff,
 	0x1f90c, 0x1f93a,
 	0x1f93c, 0x1f945,
-	0x1f947, 0x1fffd,
+	0x1f947, 0x1faff,
+	0x1fc00, 0x1fffd,
 }; /* CR_Extended_Pictographic */
 
 /* 'Unknown': Script */
 static const OnigCodePoint CR_Unknown[] = {
-	664,
+	705,
 	0x0378, 0x0379,
 	0x0380, 0x0383,
 	0x038b, 0x038b,
@@ -22408,7 +23675,6 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x05c8, 0x05cf,
 	0x05eb, 0x05ee,
 	0x05f5, 0x05ff,
-	0x061d, 0x061d,
 	0x070e, 0x070e,
 	0x074b, 0x074c,
 	0x07b2, 0x07bf,
@@ -22417,9 +23683,9 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x083f, 0x083f,
 	0x085c, 0x085d,
 	0x085f, 0x085f,
-	0x086b, 0x089f,
-	0x08b5, 0x08b5,
-	0x08be, 0x08d2,
+	0x086b, 0x086f,
+	0x088f, 0x088f,
+	0x0892, 0x0897,
 	0x0984, 0x0984,
 	0x098d, 0x098e,
 	0x0991, 0x0992,
@@ -22473,7 +23739,7 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x0b3a, 0x0b3b,
 	0x0b45, 0x0b46,
 	0x0b49, 0x0b4a,
-	0x0b4e, 0x0b55,
+	0x0b4e, 0x0b54,
 	0x0b58, 0x0b5b,
 	0x0b5e, 0x0b5e,
 	0x0b64, 0x0b65,
@@ -22497,12 +23763,13 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x0c0d, 0x0c0d,
 	0x0c11, 0x0c11,
 	0x0c29, 0x0c29,
-	0x0c3a, 0x0c3c,
+	0x0c3a, 0x0c3b,
 	0x0c45, 0x0c45,
 	0x0c49, 0x0c49,
 	0x0c4e, 0x0c54,
 	0x0c57, 0x0c57,
-	0x0c5b, 0x0c5f,
+	0x0c5b, 0x0c5c,
+	0x0c5e, 0x0c5f,
 	0x0c64, 0x0c65,
 	0x0c70, 0x0c76,
 	0x0c8d, 0x0c8d,
@@ -22513,19 +23780,18 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x0cc5, 0x0cc5,
 	0x0cc9, 0x0cc9,
 	0x0cce, 0x0cd4,
-	0x0cd7, 0x0cdd,
+	0x0cd7, 0x0cdc,
 	0x0cdf, 0x0cdf,
 	0x0ce4, 0x0ce5,
 	0x0cf0, 0x0cf0,
-	0x0cf3, 0x0cff,
-	0x0d04, 0x0d04,
+	0x0cf4, 0x0cff,
 	0x0d0d, 0x0d0d,
 	0x0d11, 0x0d11,
 	0x0d45, 0x0d45,
 	0x0d49, 0x0d49,
 	0x0d50, 0x0d53,
 	0x0d64, 0x0d65,
-	0x0d80, 0x0d81,
+	0x0d80, 0x0d80,
 	0x0d84, 0x0d84,
 	0x0d97, 0x0d99,
 	0x0db2, 0x0db2,
@@ -22548,7 +23814,7 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x0ebe, 0x0ebf,
 	0x0ec5, 0x0ec5,
 	0x0ec7, 0x0ec7,
-	0x0ece, 0x0ecf,
+	0x0ecf, 0x0ecf,
 	0x0eda, 0x0edb,
 	0x0ee0, 0x0eff,
 	0x0f48, 0x0f48,
@@ -22582,8 +23848,7 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x13fe, 0x13ff,
 	0x169d, 0x169f,
 	0x16f9, 0x16ff,
-	0x170d, 0x170d,
-	0x1715, 0x171f,
+	0x1716, 0x171e,
 	0x1737, 0x173f,
 	0x1754, 0x175f,
 	0x176d, 0x176d,
@@ -22592,7 +23857,6 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x17de, 0x17df,
 	0x17ea, 0x17ef,
 	0x17fa, 0x17ff,
-	0x180f, 0x180f,
 	0x181a, 0x181f,
 	0x1879, 0x187f,
 	0x18ab, 0x18af,
@@ -22612,9 +23876,9 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x1a8a, 0x1a8f,
 	0x1a9a, 0x1a9f,
 	0x1aae, 0x1aaf,
-	0x1abf, 0x1aff,
-	0x1b4c, 0x1b4f,
-	0x1b7d, 0x1b7f,
+	0x1acf, 0x1aff,
+	0x1b4d, 0x1b4f,
+	0x1b7f, 0x1b7f,
 	0x1bf4, 0x1bfb,
 	0x1c38, 0x1c3a,
 	0x1c4a, 0x1c4c,
@@ -22622,7 +23886,6 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x1cbb, 0x1cbc,
 	0x1cc8, 0x1ccf,
 	0x1cfb, 0x1cff,
-	0x1dfa, 0x1dfa,
 	0x1f16, 0x1f17,
 	0x1f1e, 0x1f1f,
 	0x1f46, 0x1f47,
@@ -22643,15 +23906,13 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x2072, 0x2073,
 	0x208f, 0x208f,
 	0x209d, 0x209f,
-	0x20c0, 0x20cf,
+	0x20c1, 0x20cf,
 	0x20f1, 0x20ff,
 	0x218c, 0x218f,
 	0x2427, 0x243f,
 	0x244b, 0x245f,
 	0x2b74, 0x2b75,
-	0x2b96, 0x2b97,
-	0x2c2f, 0x2c2f,
-	0x2c5f, 0x2c5f,
+	0x2b96, 0x2b96,
 	0x2cf4, 0x2cf8,
 	0x2d26, 0x2d26,
 	0x2d28, 0x2d2c,
@@ -22667,7 +23928,7 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x2dcf, 0x2dcf,
 	0x2dd7, 0x2dd7,
 	0x2ddf, 0x2ddf,
-	0x2e50, 0x2e7f,
+	0x2e5e, 0x2e7f,
 	0x2e9a, 0x2e9a,
 	0x2ef4, 0x2eff,
 	0x2fd6, 0x2fef,
@@ -22677,18 +23938,17 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x3100, 0x3104,
 	0x3130, 0x3130,
 	0x318f, 0x318f,
-	0x31bb, 0x31bf,
 	0x31e4, 0x31ef,
 	0x321f, 0x321f,
-	0x4db6, 0x4dbf,
-	0x9ff0, 0x9fff,
 	0xa48d, 0xa48f,
 	0xa4c7, 0xa4cf,
 	0xa62c, 0xa63f,
 	0xa6f8, 0xa6ff,
-	0xa7c0, 0xa7c1,
-	0xa7c7, 0xa7f6,
-	0xa82c, 0xa82f,
+	0xa7cb, 0xa7cf,
+	0xa7d2, 0xa7d2,
+	0xa7d4, 0xa7d4,
+	0xa7da, 0xa7f1,
+	0xa82d, 0xa82f,
 	0xa83a, 0xa83f,
 	0xa878, 0xa87f,
 	0xa8c6, 0xa8cd,
@@ -22708,7 +23968,7 @@ static const OnigCodePoint CR_Unknown[] = {
 	0xab17, 0xab1f,
 	0xab27, 0xab27,
 	0xab2f, 0xab2f,
-	0xab68, 0xab6f,
+	0xab6c, 0xab6f,
 	0xabee, 0xabef,
 	0xabfa, 0xabff,
 	0xd7a4, 0xd7af,
@@ -22723,11 +23983,10 @@ static const OnigCodePoint CR_Unknown[] = {
 	0xfb3f, 0xfb3f,
 	0xfb42, 0xfb42,
 	0xfb45, 0xfb45,
-	0xfbc2, 0xfbd2,
-	0xfd40, 0xfd4f,
+	0xfbc3, 0xfbd2,
 	0xfd90, 0xfd91,
-	0xfdc8, 0xfdef,
-	0xfdfe, 0xfdff,
+	0xfdc8, 0xfdce,
+	0xfdd0, 0xfdef,
 	0xfe1a, 0xfe1f,
 	0xfe53, 0xfe53,
 	0xfe67, 0xfe67,
@@ -22753,7 +24012,7 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x10103, 0x10106,
 	0x10134, 0x10136,
 	0x1018f, 0x1018f,
-	0x1019c, 0x1019f,
+	0x1019d, 0x1019f,
 	0x101a1, 0x101cf,
 	0x101fe, 0x1027f,
 	0x1029d, 0x1029f,
@@ -22771,10 +24030,20 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x104fc, 0x104ff,
 	0x10528, 0x1052f,
 	0x10564, 0x1056e,
-	0x10570, 0x105ff,
+	0x1057b, 0x1057b,
+	0x1058b, 0x1058b,
+	0x10593, 0x10593,
+	0x10596, 0x10596,
+	0x105a2, 0x105a2,
+	0x105b2, 0x105b2,
+	0x105ba, 0x105ba,
+	0x105bd, 0x105ff,
 	0x10737, 0x1073f,
 	0x10756, 0x1075f,
-	0x10768, 0x107ff,
+	0x10768, 0x1077f,
+	0x10786, 0x10786,
+	0x107b1, 0x107b1,
+	0x107bb, 0x107ff,
 	0x10806, 0x10807,
 	0x10809, 0x10809,
 	0x10836, 0x10836,
@@ -22812,24 +24081,28 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x10cf3, 0x10cf9,
 	0x10d28, 0x10d2f,
 	0x10d3a, 0x10e5f,
-	0x10e7f, 0x10eff,
+	0x10e7f, 0x10e7f,
+	0x10eaa, 0x10eaa,
+	0x10eae, 0x10eaf,
+	0x10eb2, 0x10efc,
 	0x10f28, 0x10f2f,
-	0x10f5a, 0x10fdf,
+	0x10f5a, 0x10f6f,
+	0x10f8a, 0x10faf,
+	0x10fcc, 0x10fdf,
 	0x10ff7, 0x10fff,
 	0x1104e, 0x11051,
-	0x11070, 0x1107e,
-	0x110c2, 0x110cc,
+	0x11076, 0x1107e,
+	0x110c3, 0x110cc,
 	0x110ce, 0x110cf,
 	0x110e9, 0x110ef,
 	0x110fa, 0x110ff,
 	0x11135, 0x11135,
-	0x11147, 0x1114f,
+	0x11148, 0x1114f,
 	0x11177, 0x1117f,
-	0x111ce, 0x111cf,
 	0x111e0, 0x111e0,
 	0x111f5, 0x111ff,
 	0x11212, 0x11212,
-	0x1123f, 0x1127f,
+	0x11242, 0x1127f,
 	0x11287, 0x11287,
 	0x11289, 0x11289,
 	0x1128e, 0x1128e,
@@ -22852,9 +24125,8 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x11364, 0x11365,
 	0x1136d, 0x1136f,
 	0x11375, 0x113ff,
-	0x1145a, 0x1145a,
 	0x1145c, 0x1145c,
-	0x11460, 0x1147f,
+	0x11462, 0x1147f,
 	0x114c8, 0x114cf,
 	0x114da, 0x1157f,
 	0x115b6, 0x115b7,
@@ -22862,20 +24134,28 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x11645, 0x1164f,
 	0x1165a, 0x1165f,
 	0x1166d, 0x1167f,
-	0x116b9, 0x116bf,
+	0x116ba, 0x116bf,
 	0x116ca, 0x116ff,
 	0x1171b, 0x1171c,
 	0x1172c, 0x1172f,
-	0x11740, 0x117ff,
+	0x11747, 0x117ff,
 	0x1183c, 0x1189f,
 	0x118f3, 0x118fe,
-	0x11900, 0x1199f,
+	0x11907, 0x11908,
+	0x1190a, 0x1190b,
+	0x11914, 0x11914,
+	0x11917, 0x11917,
+	0x11936, 0x11936,
+	0x11939, 0x1193a,
+	0x11947, 0x1194f,
+	0x1195a, 0x1199f,
 	0x119a8, 0x119a9,
 	0x119d8, 0x119d9,
 	0x119e5, 0x119ff,
 	0x11a48, 0x11a4f,
-	0x11aa3, 0x11abf,
-	0x11af9, 0x11bff,
+	0x11aa3, 0x11aaf,
+	0x11af9, 0x11aff,
+	0x11b0a, 0x11bff,
 	0x11c09, 0x11c09,
 	0x11c37, 0x11c37,
 	0x11c46, 0x11c4f,
@@ -22896,19 +24176,24 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x11d92, 0x11d92,
 	0x11d99, 0x11d9f,
 	0x11daa, 0x11edf,
-	0x11ef9, 0x11fbf,
+	0x11ef9, 0x11eff,
+	0x11f11, 0x11f11,
+	0x11f3b, 0x11f3d,
+	0x11f5a, 0x11faf,
+	0x11fb1, 0x11fbf,
 	0x11ff2, 0x11ffe,
 	0x1239a, 0x123ff,
 	0x1246f, 0x1246f,
 	0x12475, 0x1247f,
-	0x12544, 0x12fff,
-	0x1342f, 0x1342f,
-	0x13439, 0x143ff,
+	0x12544, 0x12f8f,
+	0x12ff3, 0x12fff,
+	0x13456, 0x143ff,
 	0x14647, 0x167ff,
 	0x16a39, 0x16a3f,
 	0x16a5f, 0x16a5f,
 	0x16a6a, 0x16a6d,
-	0x16a70, 0x16acf,
+	0x16abf, 0x16abf,
+	0x16aca, 0x16acf,
 	0x16aee, 0x16aef,
 	0x16af6, 0x16aff,
 	0x16b46, 0x16b4f,
@@ -22920,22 +24205,33 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x16f4b, 0x16f4e,
 	0x16f88, 0x16f8e,
 	0x16fa0, 0x16fdf,
-	0x16fe4, 0x16fff,
+	0x16fe5, 0x16fef,
+	0x16ff2, 0x16fff,
 	0x187f8, 0x187ff,
-	0x18af3, 0x1afff,
-	0x1b11f, 0x1b14f,
-	0x1b153, 0x1b163,
+	0x18cd6, 0x18cff,
+	0x18d09, 0x1afef,
+	0x1aff4, 0x1aff4,
+	0x1affc, 0x1affc,
+	0x1afff, 0x1afff,
+	0x1b123, 0x1b131,
+	0x1b133, 0x1b14f,
+	0x1b153, 0x1b154,
+	0x1b156, 0x1b163,
 	0x1b168, 0x1b16f,
 	0x1b2fc, 0x1bbff,
 	0x1bc6b, 0x1bc6f,
 	0x1bc7d, 0x1bc7f,
 	0x1bc89, 0x1bc8f,
 	0x1bc9a, 0x1bc9b,
-	0x1bca4, 0x1cfff,
+	0x1bca4, 0x1ceff,
+	0x1cf2e, 0x1cf2f,
+	0x1cf47, 0x1cf4f,
+	0x1cfc4, 0x1cfff,
 	0x1d0f6, 0x1d0ff,
 	0x1d127, 0x1d128,
-	0x1d1e9, 0x1d1ff,
-	0x1d246, 0x1d2df,
+	0x1d1eb, 0x1d1ff,
+	0x1d246, 0x1d2bf,
+	0x1d2d4, 0x1d2df,
 	0x1d2f4, 0x1d2ff,
 	0x1d357, 0x1d35f,
 	0x1d379, 0x1d3ff,
@@ -22961,18 +24257,28 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x1d7cc, 0x1d7cd,
 	0x1da8c, 0x1da9a,
 	0x1daa0, 0x1daa0,
-	0x1dab0, 0x1dfff,
+	0x1dab0, 0x1deff,
+	0x1df1f, 0x1df24,
+	0x1df2b, 0x1dfff,
 	0x1e007, 0x1e007,
 	0x1e019, 0x1e01a,
 	0x1e022, 0x1e022,
 	0x1e025, 0x1e025,
-	0x1e02b, 0x1e0ff,
+	0x1e02b, 0x1e02f,
+	0x1e06e, 0x1e08e,
+	0x1e090, 0x1e0ff,
 	0x1e12d, 0x1e12f,
 	0x1e13e, 0x1e13f,
 	0x1e14a, 0x1e14d,
-	0x1e150, 0x1e2bf,
+	0x1e150, 0x1e28f,
+	0x1e2af, 0x1e2bf,
 	0x1e2fa, 0x1e2fe,
-	0x1e300, 0x1e7ff,
+	0x1e300, 0x1e4cf,
+	0x1e4fa, 0x1e7df,
+	0x1e7e7, 0x1e7e7,
+	0x1e7ec, 0x1e7ec,
+	0x1e7ef, 0x1e7ef,
+	0x1e7ff, 0x1e7ff,
 	0x1e8c5, 0x1e8c6,
 	0x1e8d7, 0x1e8ff,
 	0x1e94c, 0x1e94f,
@@ -23020,43 +24326,45 @@ static const OnigCodePoint CR_Unknown[] = {
 	0x1f0c0, 0x1f0c0,
 	0x1f0d0, 0x1f0d0,
 	0x1f0f6, 0x1f0ff,
-	0x1f10d, 0x1f10f,
-	0x1f16d, 0x1f16f,
-	0x1f1ad, 0x1f1e5,
+	0x1f1ae, 0x1f1e5,
 	0x1f203, 0x1f20f,
 	0x1f23c, 0x1f23f,
 	0x1f249, 0x1f24f,
 	0x1f252, 0x1f25f,
 	0x1f266, 0x1f2ff,
-	0x1f6d6, 0x1f6df,
+	0x1f6d8, 0x1f6db,
 	0x1f6ed, 0x1f6ef,
-	0x1f6fb, 0x1f6ff,
-	0x1f774, 0x1f77f,
-	0x1f7d9, 0x1f7df,
-	0x1f7ec, 0x1f7ff,
+	0x1f6fd, 0x1f6ff,
+	0x1f777, 0x1f77a,
+	0x1f7da, 0x1f7df,
+	0x1f7ec, 0x1f7ef,
+	0x1f7f1, 0x1f7ff,
 	0x1f80c, 0x1f80f,
 	0x1f848, 0x1f84f,
 	0x1f85a, 0x1f85f,
 	0x1f888, 0x1f88f,
-	0x1f8ae, 0x1f8ff,
-	0x1f90c, 0x1f90c,
-	0x1f972, 0x1f972,
-	0x1f977, 0x1f979,
-	0x1f9a3, 0x1f9a4,
-	0x1f9ab, 0x1f9ad,
-	0x1f9cb, 0x1f9cc,
+	0x1f8ae, 0x1f8af,
+	0x1f8b2, 0x1f8ff,
 	0x1fa54, 0x1fa5f,
 	0x1fa6e, 0x1fa6f,
-	0x1fa74, 0x1fa77,
-	0x1fa7b, 0x1fa7f,
-	0x1fa83, 0x1fa8f,
-	0x1fa96, 0x1ffff,
-	0x2a6d7, 0x2a6ff,
-	0x2b735, 0x2b73f,
+	0x1fa7d, 0x1fa7f,
+	0x1fa89, 0x1fa8f,
+	0x1fabe, 0x1fabe,
+	0x1fac6, 0x1facd,
+	0x1fadc, 0x1fadf,
+	0x1fae9, 0x1faef,
+	0x1faf9, 0x1faff,
+	0x1fb93, 0x1fb93,
+	0x1fbcb, 0x1fbef,
+	0x1fbfa, 0x1ffff,
+	0x2a6e0, 0x2a6ff,
+	0x2b73a, 0x2b73f,
 	0x2b81e, 0x2b81f,
 	0x2cea2, 0x2ceaf,
 	0x2ebe1, 0x2f7ff,
-	0x2fa1e, 0xe0000,
+	0x2fa1e, 0x2ffff,
+	0x3134b, 0x3134f,
+	0x323b0, 0xe0000,
 	0xe0002, 0xe001f,
 	0xe0080, 0xe00ff,
 	0xe01f0, 0x10ffff,
@@ -34204,236 +35512,2365 @@ static const OnigCodePoint CR_Age_12_1[] = {
 	0xefffe, 0x10ffff,
 }; /* CR_Age_12_1 */
 
-#endif /* USE_UNICODE_AGE_PROPERTIES */
-/* 'Grapheme_Cluster_Break_Prepend': Grapheme_Cluster_Break=Prepend */
-static const OnigCodePoint CR_Grapheme_Cluster_Break_Prepend[] = {
-	11,
-	0x0600, 0x0605,
-	0x06dd, 0x06dd,
-	0x070f, 0x070f,
-	0x08e2, 0x08e2,
-	0x0d4e, 0x0d4e,
-	0x110bd, 0x110bd,
-	0x110cd, 0x110cd,
-	0x111c2, 0x111c3,
-	0x11a3a, 0x11a3a,
-	0x11a84, 0x11a89,
-	0x11d46, 0x11d46,
-}; /* CR_Grapheme_Cluster_Break_Prepend */
-
-/* 'Grapheme_Cluster_Break_CR': Grapheme_Cluster_Break=CR */
-static const OnigCodePoint CR_Grapheme_Cluster_Break_CR[] = {
-	1,
-	0x000d, 0x000d,
-}; /* CR_Grapheme_Cluster_Break_CR */
-
-/* 'Grapheme_Cluster_Break_LF': Grapheme_Cluster_Break=LF */
-#define CR_Grapheme_Cluster_Break_LF CR_NEWLINE
-
-/* 'Grapheme_Cluster_Break_Control': Grapheme_Cluster_Break=Control */
-static const OnigCodePoint CR_Grapheme_Cluster_Break_Control[] = {
-	19,
-	0x0000, 0x0009,
-	0x000b, 0x000c,
-	0x000e, 0x001f,
-	0x007f, 0x009f,
-	0x00ad, 0x00ad,
-	0x061c, 0x061c,
-	0x180e, 0x180e,
-	0x200b, 0x200b,
-	0x200e, 0x200f,
-	0x2028, 0x202e,
-	0x2060, 0x206f,
-	0xfeff, 0xfeff,
-	0xfff0, 0xfffb,
-	0x13430, 0x13438,
-	0x1bca0, 0x1bca3,
-	0x1d173, 0x1d17a,
-	0xe0000, 0xe001f,
-	0xe0080, 0xe00ff,
-	0xe01f0, 0xe0fff,
-}; /* CR_Grapheme_Cluster_Break_Control */
-
-/* 'Grapheme_Cluster_Break_Extend': Grapheme_Cluster_Break=Extend */
-static const OnigCodePoint CR_Grapheme_Cluster_Break_Extend[] = {
-	336,
-	0x0300, 0x036f,
-	0x0483, 0x0489,
-	0x0591, 0x05bd,
-	0x05bf, 0x05bf,
-	0x05c1, 0x05c2,
-	0x05c4, 0x05c5,
-	0x05c7, 0x05c7,
-	0x0610, 0x061a,
-	0x064b, 0x065f,
-	0x0670, 0x0670,
-	0x06d6, 0x06dc,
-	0x06df, 0x06e4,
-	0x06e7, 0x06e8,
-	0x06ea, 0x06ed,
-	0x0711, 0x0711,
-	0x0730, 0x074a,
-	0x07a6, 0x07b0,
-	0x07eb, 0x07f3,
-	0x07fd, 0x07fd,
-	0x0816, 0x0819,
-	0x081b, 0x0823,
-	0x0825, 0x0827,
-	0x0829, 0x082d,
-	0x0859, 0x085b,
-	0x08d3, 0x08e1,
-	0x08e3, 0x0902,
-	0x093a, 0x093a,
-	0x093c, 0x093c,
-	0x0941, 0x0948,
-	0x094d, 0x094d,
-	0x0951, 0x0957,
-	0x0962, 0x0963,
-	0x0981, 0x0981,
-	0x09bc, 0x09bc,
-	0x09be, 0x09be,
-	0x09c1, 0x09c4,
-	0x09cd, 0x09cd,
+/* 'Age_13_0': Derived Age 13.0 */
+static const OnigCodePoint CR_Age_13_0[] = {
+	686,
+	0x0000, 0x0377,
+	0x037a, 0x037f,
+	0x0384, 0x038a,
+	0x038c, 0x038c,
+	0x038e, 0x03a1,
+	0x03a3, 0x052f,
+	0x0531, 0x0556,
+	0x0559, 0x058a,
+	0x058d, 0x058f,
+	0x0591, 0x05c7,
+	0x05d0, 0x05ea,
+	0x05ef, 0x05f4,
+	0x0600, 0x061c,
+	0x061e, 0x070d,
+	0x070f, 0x074a,
+	0x074d, 0x07b1,
+	0x07c0, 0x07fa,
+	0x07fd, 0x082d,
+	0x0830, 0x083e,
+	0x0840, 0x085b,
+	0x085e, 0x085e,
+	0x0860, 0x086a,
+	0x08a0, 0x08b4,
+	0x08b6, 0x08c7,
+	0x08d3, 0x0983,
+	0x0985, 0x098c,
+	0x098f, 0x0990,
+	0x0993, 0x09a8,
+	0x09aa, 0x09b0,
+	0x09b2, 0x09b2,
+	0x09b6, 0x09b9,
+	0x09bc, 0x09c4,
+	0x09c7, 0x09c8,
+	0x09cb, 0x09ce,
 	0x09d7, 0x09d7,
-	0x09e2, 0x09e3,
-	0x09fe, 0x09fe,
-	0x0a01, 0x0a02,
+	0x09dc, 0x09dd,
+	0x09df, 0x09e3,
+	0x09e6, 0x09fe,
+	0x0a01, 0x0a03,
+	0x0a05, 0x0a0a,
+	0x0a0f, 0x0a10,
+	0x0a13, 0x0a28,
+	0x0a2a, 0x0a30,
+	0x0a32, 0x0a33,
+	0x0a35, 0x0a36,
+	0x0a38, 0x0a39,
 	0x0a3c, 0x0a3c,
-	0x0a41, 0x0a42,
+	0x0a3e, 0x0a42,
 	0x0a47, 0x0a48,
 	0x0a4b, 0x0a4d,
 	0x0a51, 0x0a51,
-	0x0a70, 0x0a71,
-	0x0a75, 0x0a75,
-	0x0a81, 0x0a82,
-	0x0abc, 0x0abc,
-	0x0ac1, 0x0ac5,
-	0x0ac7, 0x0ac8,
-	0x0acd, 0x0acd,
-	0x0ae2, 0x0ae3,
-	0x0afa, 0x0aff,
-	0x0b01, 0x0b01,
-	0x0b3c, 0x0b3c,
-	0x0b3e, 0x0b3f,
-	0x0b41, 0x0b44,
-	0x0b4d, 0x0b4d,
-	0x0b56, 0x0b57,
-	0x0b62, 0x0b63,
-	0x0b82, 0x0b82,
-	0x0bbe, 0x0bbe,
-	0x0bc0, 0x0bc0,
-	0x0bcd, 0x0bcd,
+	0x0a59, 0x0a5c,
+	0x0a5e, 0x0a5e,
+	0x0a66, 0x0a76,
+	0x0a81, 0x0a83,
+	0x0a85, 0x0a8d,
+	0x0a8f, 0x0a91,
+	0x0a93, 0x0aa8,
+	0x0aaa, 0x0ab0,
+	0x0ab2, 0x0ab3,
+	0x0ab5, 0x0ab9,
+	0x0abc, 0x0ac5,
+	0x0ac7, 0x0ac9,
+	0x0acb, 0x0acd,
+	0x0ad0, 0x0ad0,
+	0x0ae0, 0x0ae3,
+	0x0ae6, 0x0af1,
+	0x0af9, 0x0aff,
+	0x0b01, 0x0b03,
+	0x0b05, 0x0b0c,
+	0x0b0f, 0x0b10,
+	0x0b13, 0x0b28,
+	0x0b2a, 0x0b30,
+	0x0b32, 0x0b33,
+	0x0b35, 0x0b39,
+	0x0b3c, 0x0b44,
+	0x0b47, 0x0b48,
+	0x0b4b, 0x0b4d,
+	0x0b55, 0x0b57,
+	0x0b5c, 0x0b5d,
+	0x0b5f, 0x0b63,
+	0x0b66, 0x0b77,
+	0x0b82, 0x0b83,
+	0x0b85, 0x0b8a,
+	0x0b8e, 0x0b90,
+	0x0b92, 0x0b95,
+	0x0b99, 0x0b9a,
+	0x0b9c, 0x0b9c,
+	0x0b9e, 0x0b9f,
+	0x0ba3, 0x0ba4,
+	0x0ba8, 0x0baa,
+	0x0bae, 0x0bb9,
+	0x0bbe, 0x0bc2,
+	0x0bc6, 0x0bc8,
+	0x0bca, 0x0bcd,
+	0x0bd0, 0x0bd0,
 	0x0bd7, 0x0bd7,
-	0x0c00, 0x0c00,
-	0x0c04, 0x0c04,
-	0x0c3e, 0x0c40,
+	0x0be6, 0x0bfa,
+	0x0c00, 0x0c0c,
+	0x0c0e, 0x0c10,
+	0x0c12, 0x0c28,
+	0x0c2a, 0x0c39,
+	0x0c3d, 0x0c44,
 	0x0c46, 0x0c48,
 	0x0c4a, 0x0c4d,
 	0x0c55, 0x0c56,
-	0x0c62, 0x0c63,
-	0x0c81, 0x0c81,
-	0x0cbc, 0x0cbc,
-	0x0cbf, 0x0cbf,
-	0x0cc2, 0x0cc2,
-	0x0cc6, 0x0cc6,
-	0x0ccc, 0x0ccd,
+	0x0c58, 0x0c5a,
+	0x0c60, 0x0c63,
+	0x0c66, 0x0c6f,
+	0x0c77, 0x0c8c,
+	0x0c8e, 0x0c90,
+	0x0c92, 0x0ca8,
+	0x0caa, 0x0cb3,
+	0x0cb5, 0x0cb9,
+	0x0cbc, 0x0cc4,
+	0x0cc6, 0x0cc8,
+	0x0cca, 0x0ccd,
 	0x0cd5, 0x0cd6,
-	0x0ce2, 0x0ce3,
-	0x0d00, 0x0d01,
-	0x0d3b, 0x0d3c,
-	0x0d3e, 0x0d3e,
-	0x0d41, 0x0d44,
-	0x0d4d, 0x0d4d,
-	0x0d57, 0x0d57,
-	0x0d62, 0x0d63,
+	0x0cde, 0x0cde,
+	0x0ce0, 0x0ce3,
+	0x0ce6, 0x0cef,
+	0x0cf1, 0x0cf2,
+	0x0d00, 0x0d0c,
+	0x0d0e, 0x0d10,
+	0x0d12, 0x0d44,
+	0x0d46, 0x0d48,
+	0x0d4a, 0x0d4f,
+	0x0d54, 0x0d63,
+	0x0d66, 0x0d7f,
+	0x0d81, 0x0d83,
+	0x0d85, 0x0d96,
+	0x0d9a, 0x0db1,
+	0x0db3, 0x0dbb,
+	0x0dbd, 0x0dbd,
+	0x0dc0, 0x0dc6,
 	0x0dca, 0x0dca,
-	0x0dcf, 0x0dcf,
-	0x0dd2, 0x0dd4,
+	0x0dcf, 0x0dd4,
 	0x0dd6, 0x0dd6,
-	0x0ddf, 0x0ddf,
-	0x0e31, 0x0e31,
-	0x0e34, 0x0e3a,
-	0x0e47, 0x0e4e,
-	0x0eb1, 0x0eb1,
-	0x0eb4, 0x0ebc,
+	0x0dd8, 0x0ddf,
+	0x0de6, 0x0def,
+	0x0df2, 0x0df4,
+	0x0e01, 0x0e3a,
+	0x0e3f, 0x0e5b,
+	0x0e81, 0x0e82,
+	0x0e84, 0x0e84,
+	0x0e86, 0x0e8a,
+	0x0e8c, 0x0ea3,
+	0x0ea5, 0x0ea5,
+	0x0ea7, 0x0ebd,
+	0x0ec0, 0x0ec4,
+	0x0ec6, 0x0ec6,
 	0x0ec8, 0x0ecd,
-	0x0f18, 0x0f19,
-	0x0f35, 0x0f35,
-	0x0f37, 0x0f37,
-	0x0f39, 0x0f39,
-	0x0f71, 0x0f7e,
-	0x0f80, 0x0f84,
-	0x0f86, 0x0f87,
-	0x0f8d, 0x0f97,
+	0x0ed0, 0x0ed9,
+	0x0edc, 0x0edf,
+	0x0f00, 0x0f47,
+	0x0f49, 0x0f6c,
+	0x0f71, 0x0f97,
 	0x0f99, 0x0fbc,
-	0x0fc6, 0x0fc6,
-	0x102d, 0x1030,
-	0x1032, 0x1037,
-	0x1039, 0x103a,
-	0x103d, 0x103e,
-	0x1058, 0x1059,
-	0x105e, 0x1060,
-	0x1071, 0x1074,
-	0x1082, 0x1082,
-	0x1085, 0x1086,
-	0x108d, 0x108d,
-	0x109d, 0x109d,
-	0x135d, 0x135f,
-	0x1712, 0x1714,
-	0x1732, 0x1734,
-	0x1752, 0x1753,
+	0x0fbe, 0x0fcc,
+	0x0fce, 0x0fda,
+	0x1000, 0x10c5,
+	0x10c7, 0x10c7,
+	0x10cd, 0x10cd,
+	0x10d0, 0x1248,
+	0x124a, 0x124d,
+	0x1250, 0x1256,
+	0x1258, 0x1258,
+	0x125a, 0x125d,
+	0x1260, 0x1288,
+	0x128a, 0x128d,
+	0x1290, 0x12b0,
+	0x12b2, 0x12b5,
+	0x12b8, 0x12be,
+	0x12c0, 0x12c0,
+	0x12c2, 0x12c5,
+	0x12c8, 0x12d6,
+	0x12d8, 0x1310,
+	0x1312, 0x1315,
+	0x1318, 0x135a,
+	0x135d, 0x137c,
+	0x1380, 0x1399,
+	0x13a0, 0x13f5,
+	0x13f8, 0x13fd,
+	0x1400, 0x169c,
+	0x16a0, 0x16f8,
+	0x1700, 0x170c,
+	0x170e, 0x1714,
+	0x1720, 0x1736,
+	0x1740, 0x1753,
+	0x1760, 0x176c,
+	0x176e, 0x1770,
 	0x1772, 0x1773,
-	0x17b4, 0x17b5,
-	0x17b7, 0x17bd,
-	0x17c6, 0x17c6,
-	0x17c9, 0x17d3,
-	0x17dd, 0x17dd,
-	0x180b, 0x180d,
-	0x1885, 0x1886,
-	0x18a9, 0x18a9,
-	0x1920, 0x1922,
-	0x1927, 0x1928,
-	0x1932, 0x1932,
-	0x1939, 0x193b,
-	0x1a17, 0x1a18,
-	0x1a1b, 0x1a1b,
-	0x1a56, 0x1a56,
-	0x1a58, 0x1a5e,
-	0x1a60, 0x1a60,
-	0x1a62, 0x1a62,
-	0x1a65, 0x1a6c,
-	0x1a73, 0x1a7c,
-	0x1a7f, 0x1a7f,
-	0x1ab0, 0x1abe,
-	0x1b00, 0x1b03,
-	0x1b34, 0x1b3a,
-	0x1b3c, 0x1b3c,
-	0x1b42, 0x1b42,
-	0x1b6b, 0x1b73,
-	0x1b80, 0x1b81,
-	0x1ba2, 0x1ba5,
-	0x1ba8, 0x1ba9,
-	0x1bab, 0x1bad,
-	0x1be6, 0x1be6,
-	0x1be8, 0x1be9,
-	0x1bed, 0x1bed,
-	0x1bef, 0x1bf1,
-	0x1c2c, 0x1c33,
-	0x1c36, 0x1c37,
-	0x1cd0, 0x1cd2,
-	0x1cd4, 0x1ce0,
-	0x1ce2, 0x1ce8,
-	0x1ced, 0x1ced,
-	0x1cf4, 0x1cf4,
-	0x1cf8, 0x1cf9,
-	0x1dc0, 0x1df9,
-	0x1dfb, 0x1dff,
-	0x200c, 0x200c,
-	0x20d0, 0x20f0,
-	0x2cef, 0x2cf1,
-	0x2d7f, 0x2d7f,
-	0x2de0, 0x2dff,
-	0x302a, 0x302f,
+	0x1780, 0x17dd,
+	0x17e0, 0x17e9,
+	0x17f0, 0x17f9,
+	0x1800, 0x180e,
+	0x1810, 0x1819,
+	0x1820, 0x1878,
+	0x1880, 0x18aa,
+	0x18b0, 0x18f5,
+	0x1900, 0x191e,
+	0x1920, 0x192b,
+	0x1930, 0x193b,
+	0x1940, 0x1940,
+	0x1944, 0x196d,
+	0x1970, 0x1974,
+	0x1980, 0x19ab,
+	0x19b0, 0x19c9,
+	0x19d0, 0x19da,
+	0x19de, 0x1a1b,
+	0x1a1e, 0x1a5e,
+	0x1a60, 0x1a7c,
+	0x1a7f, 0x1a89,
+	0x1a90, 0x1a99,
+	0x1aa0, 0x1aad,
+	0x1ab0, 0x1ac0,
+	0x1b00, 0x1b4b,
+	0x1b50, 0x1b7c,
+	0x1b80, 0x1bf3,
+	0x1bfc, 0x1c37,
+	0x1c3b, 0x1c49,
+	0x1c4d, 0x1c88,
+	0x1c90, 0x1cba,
+	0x1cbd, 0x1cc7,
+	0x1cd0, 0x1cfa,
+	0x1d00, 0x1df9,
+	0x1dfb, 0x1f15,
+	0x1f18, 0x1f1d,
+	0x1f20, 0x1f45,
+	0x1f48, 0x1f4d,
+	0x1f50, 0x1f57,
+	0x1f59, 0x1f59,
+	0x1f5b, 0x1f5b,
+	0x1f5d, 0x1f5d,
+	0x1f5f, 0x1f7d,
+	0x1f80, 0x1fb4,
+	0x1fb6, 0x1fc4,
+	0x1fc6, 0x1fd3,
+	0x1fd6, 0x1fdb,
+	0x1fdd, 0x1fef,
+	0x1ff2, 0x1ff4,
+	0x1ff6, 0x1ffe,
+	0x2000, 0x2064,
+	0x2066, 0x2071,
+	0x2074, 0x208e,
+	0x2090, 0x209c,
+	0x20a0, 0x20bf,
+	0x20d0, 0x20f0,
+	0x2100, 0x218b,
+	0x2190, 0x2426,
+	0x2440, 0x244a,
+	0x2460, 0x2b73,
+	0x2b76, 0x2b95,
+	0x2b97, 0x2c2e,
+	0x2c30, 0x2c5e,
+	0x2c60, 0x2cf3,
+	0x2cf9, 0x2d25,
+	0x2d27, 0x2d27,
+	0x2d2d, 0x2d2d,
+	0x2d30, 0x2d67,
+	0x2d6f, 0x2d70,
+	0x2d7f, 0x2d96,
+	0x2da0, 0x2da6,
+	0x2da8, 0x2dae,
+	0x2db0, 0x2db6,
+	0x2db8, 0x2dbe,
+	0x2dc0, 0x2dc6,
+	0x2dc8, 0x2dce,
+	0x2dd0, 0x2dd6,
+	0x2dd8, 0x2dde,
+	0x2de0, 0x2e52,
+	0x2e80, 0x2e99,
+	0x2e9b, 0x2ef3,
+	0x2f00, 0x2fd5,
+	0x2ff0, 0x2ffb,
+	0x3000, 0x303f,
+	0x3041, 0x3096,
+	0x3099, 0x30ff,
+	0x3105, 0x312f,
+	0x3131, 0x318e,
+	0x3190, 0x31e3,
+	0x31f0, 0x321e,
+	0x3220, 0x9ffc,
+	0xa000, 0xa48c,
+	0xa490, 0xa4c6,
+	0xa4d0, 0xa62b,
+	0xa640, 0xa6f7,
+	0xa700, 0xa7bf,
+	0xa7c2, 0xa7ca,
+	0xa7f5, 0xa82c,
+	0xa830, 0xa839,
+	0xa840, 0xa877,
+	0xa880, 0xa8c5,
+	0xa8ce, 0xa8d9,
+	0xa8e0, 0xa953,
+	0xa95f, 0xa97c,
+	0xa980, 0xa9cd,
+	0xa9cf, 0xa9d9,
+	0xa9de, 0xa9fe,
+	0xaa00, 0xaa36,
+	0xaa40, 0xaa4d,
+	0xaa50, 0xaa59,
+	0xaa5c, 0xaac2,
+	0xaadb, 0xaaf6,
+	0xab01, 0xab06,
+	0xab09, 0xab0e,
+	0xab11, 0xab16,
+	0xab20, 0xab26,
+	0xab28, 0xab2e,
+	0xab30, 0xab6b,
+	0xab70, 0xabed,
+	0xabf0, 0xabf9,
+	0xac00, 0xd7a3,
+	0xd7b0, 0xd7c6,
+	0xd7cb, 0xd7fb,
+	0xd800, 0xfa6d,
+	0xfa70, 0xfad9,
+	0xfb00, 0xfb06,
+	0xfb13, 0xfb17,
+	0xfb1d, 0xfb36,
+	0xfb38, 0xfb3c,
+	0xfb3e, 0xfb3e,
+	0xfb40, 0xfb41,
+	0xfb43, 0xfb44,
+	0xfb46, 0xfbc1,
+	0xfbd3, 0xfd3f,
+	0xfd50, 0xfd8f,
+	0xfd92, 0xfdc7,
+	0xfdd0, 0xfdfd,
+	0xfe00, 0xfe19,
+	0xfe20, 0xfe52,
+	0xfe54, 0xfe66,
+	0xfe68, 0xfe6b,
+	0xfe70, 0xfe74,
+	0xfe76, 0xfefc,
+	0xfeff, 0xfeff,
+	0xff01, 0xffbe,
+	0xffc2, 0xffc7,
+	0xffca, 0xffcf,
+	0xffd2, 0xffd7,
+	0xffda, 0xffdc,
+	0xffe0, 0xffe6,
+	0xffe8, 0xffee,
+	0xfff9, 0x1000b,
+	0x1000d, 0x10026,
+	0x10028, 0x1003a,
+	0x1003c, 0x1003d,
+	0x1003f, 0x1004d,
+	0x10050, 0x1005d,
+	0x10080, 0x100fa,
+	0x10100, 0x10102,
+	0x10107, 0x10133,
+	0x10137, 0x1018e,
+	0x10190, 0x1019c,
+	0x101a0, 0x101a0,
+	0x101d0, 0x101fd,
+	0x10280, 0x1029c,
+	0x102a0, 0x102d0,
+	0x102e0, 0x102fb,
+	0x10300, 0x10323,
+	0x1032d, 0x1034a,
+	0x10350, 0x1037a,
+	0x10380, 0x1039d,
+	0x1039f, 0x103c3,
+	0x103c8, 0x103d5,
+	0x10400, 0x1049d,
+	0x104a0, 0x104a9,
+	0x104b0, 0x104d3,
+	0x104d8, 0x104fb,
+	0x10500, 0x10527,
+	0x10530, 0x10563,
+	0x1056f, 0x1056f,
+	0x10600, 0x10736,
+	0x10740, 0x10755,
+	0x10760, 0x10767,
+	0x10800, 0x10805,
+	0x10808, 0x10808,
+	0x1080a, 0x10835,
+	0x10837, 0x10838,
+	0x1083c, 0x1083c,
+	0x1083f, 0x10855,
+	0x10857, 0x1089e,
+	0x108a7, 0x108af,
+	0x108e0, 0x108f2,
+	0x108f4, 0x108f5,
+	0x108fb, 0x1091b,
+	0x1091f, 0x10939,
+	0x1093f, 0x1093f,
+	0x10980, 0x109b7,
+	0x109bc, 0x109cf,
+	0x109d2, 0x10a03,
+	0x10a05, 0x10a06,
+	0x10a0c, 0x10a13,
+	0x10a15, 0x10a17,
+	0x10a19, 0x10a35,
+	0x10a38, 0x10a3a,
+	0x10a3f, 0x10a48,
+	0x10a50, 0x10a58,
+	0x10a60, 0x10a9f,
+	0x10ac0, 0x10ae6,
+	0x10aeb, 0x10af6,
+	0x10b00, 0x10b35,
+	0x10b39, 0x10b55,
+	0x10b58, 0x10b72,
+	0x10b78, 0x10b91,
+	0x10b99, 0x10b9c,
+	0x10ba9, 0x10baf,
+	0x10c00, 0x10c48,
+	0x10c80, 0x10cb2,
+	0x10cc0, 0x10cf2,
+	0x10cfa, 0x10d27,
+	0x10d30, 0x10d39,
+	0x10e60, 0x10e7e,
+	0x10e80, 0x10ea9,
+	0x10eab, 0x10ead,
+	0x10eb0, 0x10eb1,
+	0x10f00, 0x10f27,
+	0x10f30, 0x10f59,
+	0x10fb0, 0x10fcb,
+	0x10fe0, 0x10ff6,
+	0x11000, 0x1104d,
+	0x11052, 0x1106f,
+	0x1107f, 0x110c1,
+	0x110cd, 0x110cd,
+	0x110d0, 0x110e8,
+	0x110f0, 0x110f9,
+	0x11100, 0x11134,
+	0x11136, 0x11147,
+	0x11150, 0x11176,
+	0x11180, 0x111df,
+	0x111e1, 0x111f4,
+	0x11200, 0x11211,
+	0x11213, 0x1123e,
+	0x11280, 0x11286,
+	0x11288, 0x11288,
+	0x1128a, 0x1128d,
+	0x1128f, 0x1129d,
+	0x1129f, 0x112a9,
+	0x112b0, 0x112ea,
+	0x112f0, 0x112f9,
+	0x11300, 0x11303,
+	0x11305, 0x1130c,
+	0x1130f, 0x11310,
+	0x11313, 0x11328,
+	0x1132a, 0x11330,
+	0x11332, 0x11333,
+	0x11335, 0x11339,
+	0x1133b, 0x11344,
+	0x11347, 0x11348,
+	0x1134b, 0x1134d,
+	0x11350, 0x11350,
+	0x11357, 0x11357,
+	0x1135d, 0x11363,
+	0x11366, 0x1136c,
+	0x11370, 0x11374,
+	0x11400, 0x1145b,
+	0x1145d, 0x11461,
+	0x11480, 0x114c7,
+	0x114d0, 0x114d9,
+	0x11580, 0x115b5,
+	0x115b8, 0x115dd,
+	0x11600, 0x11644,
+	0x11650, 0x11659,
+	0x11660, 0x1166c,
+	0x11680, 0x116b8,
+	0x116c0, 0x116c9,
+	0x11700, 0x1171a,
+	0x1171d, 0x1172b,
+	0x11730, 0x1173f,
+	0x11800, 0x1183b,
+	0x118a0, 0x118f2,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x11946,
+	0x11950, 0x11959,
+	0x119a0, 0x119a7,
+	0x119aa, 0x119d7,
+	0x119da, 0x119e4,
+	0x11a00, 0x11a47,
+	0x11a50, 0x11aa2,
+	0x11ac0, 0x11af8,
+	0x11c00, 0x11c08,
+	0x11c0a, 0x11c36,
+	0x11c38, 0x11c45,
+	0x11c50, 0x11c6c,
+	0x11c70, 0x11c8f,
+	0x11c92, 0x11ca7,
+	0x11ca9, 0x11cb6,
+	0x11d00, 0x11d06,
+	0x11d08, 0x11d09,
+	0x11d0b, 0x11d36,
+	0x11d3a, 0x11d3a,
+	0x11d3c, 0x11d3d,
+	0x11d3f, 0x11d47,
+	0x11d50, 0x11d59,
+	0x11d60, 0x11d65,
+	0x11d67, 0x11d68,
+	0x11d6a, 0x11d8e,
+	0x11d90, 0x11d91,
+	0x11d93, 0x11d98,
+	0x11da0, 0x11da9,
+	0x11ee0, 0x11ef8,
+	0x11fb0, 0x11fb0,
+	0x11fc0, 0x11ff1,
+	0x11fff, 0x12399,
+	0x12400, 0x1246e,
+	0x12470, 0x12474,
+	0x12480, 0x12543,
+	0x13000, 0x1342e,
+	0x13430, 0x13438,
+	0x14400, 0x14646,
+	0x16800, 0x16a38,
+	0x16a40, 0x16a5e,
+	0x16a60, 0x16a69,
+	0x16a6e, 0x16a6f,
+	0x16ad0, 0x16aed,
+	0x16af0, 0x16af5,
+	0x16b00, 0x16b45,
+	0x16b50, 0x16b59,
+	0x16b5b, 0x16b61,
+	0x16b63, 0x16b77,
+	0x16b7d, 0x16b8f,
+	0x16e40, 0x16e9a,
+	0x16f00, 0x16f4a,
+	0x16f4f, 0x16f87,
+	0x16f8f, 0x16f9f,
+	0x16fe0, 0x16fe4,
+	0x16ff0, 0x16ff1,
+	0x17000, 0x187f7,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1b000, 0x1b11e,
+	0x1b150, 0x1b152,
+	0x1b164, 0x1b167,
+	0x1b170, 0x1b2fb,
+	0x1bc00, 0x1bc6a,
+	0x1bc70, 0x1bc7c,
+	0x1bc80, 0x1bc88,
+	0x1bc90, 0x1bc99,
+	0x1bc9c, 0x1bca3,
+	0x1d000, 0x1d0f5,
+	0x1d100, 0x1d126,
+	0x1d129, 0x1d1e8,
+	0x1d200, 0x1d245,
+	0x1d2e0, 0x1d2f3,
+	0x1d300, 0x1d356,
+	0x1d360, 0x1d378,
+	0x1d400, 0x1d454,
+	0x1d456, 0x1d49c,
+	0x1d49e, 0x1d49f,
+	0x1d4a2, 0x1d4a2,
+	0x1d4a5, 0x1d4a6,
+	0x1d4a9, 0x1d4ac,
+	0x1d4ae, 0x1d4b9,
+	0x1d4bb, 0x1d4bb,
+	0x1d4bd, 0x1d4c3,
+	0x1d4c5, 0x1d505,
+	0x1d507, 0x1d50a,
+	0x1d50d, 0x1d514,
+	0x1d516, 0x1d51c,
+	0x1d51e, 0x1d539,
+	0x1d53b, 0x1d53e,
+	0x1d540, 0x1d544,
+	0x1d546, 0x1d546,
+	0x1d54a, 0x1d550,
+	0x1d552, 0x1d6a5,
+	0x1d6a8, 0x1d7cb,
+	0x1d7ce, 0x1da8b,
+	0x1da9b, 0x1da9f,
+	0x1daa1, 0x1daaf,
+	0x1e000, 0x1e006,
+	0x1e008, 0x1e018,
+	0x1e01b, 0x1e021,
+	0x1e023, 0x1e024,
+	0x1e026, 0x1e02a,
+	0x1e100, 0x1e12c,
+	0x1e130, 0x1e13d,
+	0x1e140, 0x1e149,
+	0x1e14e, 0x1e14f,
+	0x1e2c0, 0x1e2f9,
+	0x1e2ff, 0x1e2ff,
+	0x1e800, 0x1e8c4,
+	0x1e8c7, 0x1e8d6,
+	0x1e900, 0x1e94b,
+	0x1e950, 0x1e959,
+	0x1e95e, 0x1e95f,
+	0x1ec71, 0x1ecb4,
+	0x1ed01, 0x1ed3d,
+	0x1ee00, 0x1ee03,
+	0x1ee05, 0x1ee1f,
+	0x1ee21, 0x1ee22,
+	0x1ee24, 0x1ee24,
+	0x1ee27, 0x1ee27,
+	0x1ee29, 0x1ee32,
+	0x1ee34, 0x1ee37,
+	0x1ee39, 0x1ee39,
+	0x1ee3b, 0x1ee3b,
+	0x1ee42, 0x1ee42,
+	0x1ee47, 0x1ee47,
+	0x1ee49, 0x1ee49,
+	0x1ee4b, 0x1ee4b,
+	0x1ee4d, 0x1ee4f,
+	0x1ee51, 0x1ee52,
+	0x1ee54, 0x1ee54,
+	0x1ee57, 0x1ee57,
+	0x1ee59, 0x1ee59,
+	0x1ee5b, 0x1ee5b,
+	0x1ee5d, 0x1ee5d,
+	0x1ee5f, 0x1ee5f,
+	0x1ee61, 0x1ee62,
+	0x1ee64, 0x1ee64,
+	0x1ee67, 0x1ee6a,
+	0x1ee6c, 0x1ee72,
+	0x1ee74, 0x1ee77,
+	0x1ee79, 0x1ee7c,
+	0x1ee7e, 0x1ee7e,
+	0x1ee80, 0x1ee89,
+	0x1ee8b, 0x1ee9b,
+	0x1eea1, 0x1eea3,
+	0x1eea5, 0x1eea9,
+	0x1eeab, 0x1eebb,
+	0x1eef0, 0x1eef1,
+	0x1f000, 0x1f02b,
+	0x1f030, 0x1f093,
+	0x1f0a0, 0x1f0ae,
+	0x1f0b1, 0x1f0bf,
+	0x1f0c1, 0x1f0cf,
+	0x1f0d1, 0x1f0f5,
+	0x1f100, 0x1f1ad,
+	0x1f1e6, 0x1f202,
+	0x1f210, 0x1f23b,
+	0x1f240, 0x1f248,
+	0x1f250, 0x1f251,
+	0x1f260, 0x1f265,
+	0x1f300, 0x1f6d7,
+	0x1f6e0, 0x1f6ec,
+	0x1f6f0, 0x1f6fc,
+	0x1f700, 0x1f773,
+	0x1f780, 0x1f7d8,
+	0x1f7e0, 0x1f7eb,
+	0x1f800, 0x1f80b,
+	0x1f810, 0x1f847,
+	0x1f850, 0x1f859,
+	0x1f860, 0x1f887,
+	0x1f890, 0x1f8ad,
+	0x1f8b0, 0x1f8b1,
+	0x1f900, 0x1f978,
+	0x1f97a, 0x1f9cb,
+	0x1f9cd, 0x1fa53,
+	0x1fa60, 0x1fa6d,
+	0x1fa70, 0x1fa74,
+	0x1fa78, 0x1fa7a,
+	0x1fa80, 0x1fa86,
+	0x1fa90, 0x1faa8,
+	0x1fab0, 0x1fab6,
+	0x1fac0, 0x1fac2,
+	0x1fad0, 0x1fad6,
+	0x1fb00, 0x1fb92,
+	0x1fb94, 0x1fbca,
+	0x1fbf0, 0x1fbf9,
+	0x1fffe, 0x2a6dd,
+	0x2a700, 0x2b734,
+	0x2b740, 0x2b81d,
+	0x2b820, 0x2cea1,
+	0x2ceb0, 0x2ebe0,
+	0x2f800, 0x2fa1d,
+	0x2fffe, 0x3134a,
+	0x3fffe, 0x3ffff,
+	0x4fffe, 0x4ffff,
+	0x5fffe, 0x5ffff,
+	0x6fffe, 0x6ffff,
+	0x7fffe, 0x7ffff,
+	0x8fffe, 0x8ffff,
+	0x9fffe, 0x9ffff,
+	0xafffe, 0xaffff,
+	0xbfffe, 0xbffff,
+	0xcfffe, 0xcffff,
+	0xdfffe, 0xdffff,
+	0xe0001, 0xe0001,
+	0xe0020, 0xe007f,
+	0xe0100, 0xe01ef,
+	0xefffe, 0x10ffff,
+}; /* CR_Age_13_0 */
+
+/* 'Age_14_0': Derived Age 14.0 */
+static const OnigCodePoint CR_Age_14_0[] = {
+	706,
+	0x0000, 0x0377,
+	0x037a, 0x037f,
+	0x0384, 0x038a,
+	0x038c, 0x038c,
+	0x038e, 0x03a1,
+	0x03a3, 0x052f,
+	0x0531, 0x0556,
+	0x0559, 0x058a,
+	0x058d, 0x058f,
+	0x0591, 0x05c7,
+	0x05d0, 0x05ea,
+	0x05ef, 0x05f4,
+	0x0600, 0x070d,
+	0x070f, 0x074a,
+	0x074d, 0x07b1,
+	0x07c0, 0x07fa,
+	0x07fd, 0x082d,
+	0x0830, 0x083e,
+	0x0840, 0x085b,
+	0x085e, 0x085e,
+	0x0860, 0x086a,
+	0x0870, 0x088e,
+	0x0890, 0x0891,
+	0x0898, 0x0983,
+	0x0985, 0x098c,
+	0x098f, 0x0990,
+	0x0993, 0x09a8,
+	0x09aa, 0x09b0,
+	0x09b2, 0x09b2,
+	0x09b6, 0x09b9,
+	0x09bc, 0x09c4,
+	0x09c7, 0x09c8,
+	0x09cb, 0x09ce,
+	0x09d7, 0x09d7,
+	0x09dc, 0x09dd,
+	0x09df, 0x09e3,
+	0x09e6, 0x09fe,
+	0x0a01, 0x0a03,
+	0x0a05, 0x0a0a,
+	0x0a0f, 0x0a10,
+	0x0a13, 0x0a28,
+	0x0a2a, 0x0a30,
+	0x0a32, 0x0a33,
+	0x0a35, 0x0a36,
+	0x0a38, 0x0a39,
+	0x0a3c, 0x0a3c,
+	0x0a3e, 0x0a42,
+	0x0a47, 0x0a48,
+	0x0a4b, 0x0a4d,
+	0x0a51, 0x0a51,
+	0x0a59, 0x0a5c,
+	0x0a5e, 0x0a5e,
+	0x0a66, 0x0a76,
+	0x0a81, 0x0a83,
+	0x0a85, 0x0a8d,
+	0x0a8f, 0x0a91,
+	0x0a93, 0x0aa8,
+	0x0aaa, 0x0ab0,
+	0x0ab2, 0x0ab3,
+	0x0ab5, 0x0ab9,
+	0x0abc, 0x0ac5,
+	0x0ac7, 0x0ac9,
+	0x0acb, 0x0acd,
+	0x0ad0, 0x0ad0,
+	0x0ae0, 0x0ae3,
+	0x0ae6, 0x0af1,
+	0x0af9, 0x0aff,
+	0x0b01, 0x0b03,
+	0x0b05, 0x0b0c,
+	0x0b0f, 0x0b10,
+	0x0b13, 0x0b28,
+	0x0b2a, 0x0b30,
+	0x0b32, 0x0b33,
+	0x0b35, 0x0b39,
+	0x0b3c, 0x0b44,
+	0x0b47, 0x0b48,
+	0x0b4b, 0x0b4d,
+	0x0b55, 0x0b57,
+	0x0b5c, 0x0b5d,
+	0x0b5f, 0x0b63,
+	0x0b66, 0x0b77,
+	0x0b82, 0x0b83,
+	0x0b85, 0x0b8a,
+	0x0b8e, 0x0b90,
+	0x0b92, 0x0b95,
+	0x0b99, 0x0b9a,
+	0x0b9c, 0x0b9c,
+	0x0b9e, 0x0b9f,
+	0x0ba3, 0x0ba4,
+	0x0ba8, 0x0baa,
+	0x0bae, 0x0bb9,
+	0x0bbe, 0x0bc2,
+	0x0bc6, 0x0bc8,
+	0x0bca, 0x0bcd,
+	0x0bd0, 0x0bd0,
+	0x0bd7, 0x0bd7,
+	0x0be6, 0x0bfa,
+	0x0c00, 0x0c0c,
+	0x0c0e, 0x0c10,
+	0x0c12, 0x0c28,
+	0x0c2a, 0x0c39,
+	0x0c3c, 0x0c44,
+	0x0c46, 0x0c48,
+	0x0c4a, 0x0c4d,
+	0x0c55, 0x0c56,
+	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
+	0x0c60, 0x0c63,
+	0x0c66, 0x0c6f,
+	0x0c77, 0x0c8c,
+	0x0c8e, 0x0c90,
+	0x0c92, 0x0ca8,
+	0x0caa, 0x0cb3,
+	0x0cb5, 0x0cb9,
+	0x0cbc, 0x0cc4,
+	0x0cc6, 0x0cc8,
+	0x0cca, 0x0ccd,
+	0x0cd5, 0x0cd6,
+	0x0cdd, 0x0cde,
+	0x0ce0, 0x0ce3,
+	0x0ce6, 0x0cef,
+	0x0cf1, 0x0cf2,
+	0x0d00, 0x0d0c,
+	0x0d0e, 0x0d10,
+	0x0d12, 0x0d44,
+	0x0d46, 0x0d48,
+	0x0d4a, 0x0d4f,
+	0x0d54, 0x0d63,
+	0x0d66, 0x0d7f,
+	0x0d81, 0x0d83,
+	0x0d85, 0x0d96,
+	0x0d9a, 0x0db1,
+	0x0db3, 0x0dbb,
+	0x0dbd, 0x0dbd,
+	0x0dc0, 0x0dc6,
+	0x0dca, 0x0dca,
+	0x0dcf, 0x0dd4,
+	0x0dd6, 0x0dd6,
+	0x0dd8, 0x0ddf,
+	0x0de6, 0x0def,
+	0x0df2, 0x0df4,
+	0x0e01, 0x0e3a,
+	0x0e3f, 0x0e5b,
+	0x0e81, 0x0e82,
+	0x0e84, 0x0e84,
+	0x0e86, 0x0e8a,
+	0x0e8c, 0x0ea3,
+	0x0ea5, 0x0ea5,
+	0x0ea7, 0x0ebd,
+	0x0ec0, 0x0ec4,
+	0x0ec6, 0x0ec6,
+	0x0ec8, 0x0ecd,
+	0x0ed0, 0x0ed9,
+	0x0edc, 0x0edf,
+	0x0f00, 0x0f47,
+	0x0f49, 0x0f6c,
+	0x0f71, 0x0f97,
+	0x0f99, 0x0fbc,
+	0x0fbe, 0x0fcc,
+	0x0fce, 0x0fda,
+	0x1000, 0x10c5,
+	0x10c7, 0x10c7,
+	0x10cd, 0x10cd,
+	0x10d0, 0x1248,
+	0x124a, 0x124d,
+	0x1250, 0x1256,
+	0x1258, 0x1258,
+	0x125a, 0x125d,
+	0x1260, 0x1288,
+	0x128a, 0x128d,
+	0x1290, 0x12b0,
+	0x12b2, 0x12b5,
+	0x12b8, 0x12be,
+	0x12c0, 0x12c0,
+	0x12c2, 0x12c5,
+	0x12c8, 0x12d6,
+	0x12d8, 0x1310,
+	0x1312, 0x1315,
+	0x1318, 0x135a,
+	0x135d, 0x137c,
+	0x1380, 0x1399,
+	0x13a0, 0x13f5,
+	0x13f8, 0x13fd,
+	0x1400, 0x169c,
+	0x16a0, 0x16f8,
+	0x1700, 0x1715,
+	0x171f, 0x1736,
+	0x1740, 0x1753,
+	0x1760, 0x176c,
+	0x176e, 0x1770,
+	0x1772, 0x1773,
+	0x1780, 0x17dd,
+	0x17e0, 0x17e9,
+	0x17f0, 0x17f9,
+	0x1800, 0x1819,
+	0x1820, 0x1878,
+	0x1880, 0x18aa,
+	0x18b0, 0x18f5,
+	0x1900, 0x191e,
+	0x1920, 0x192b,
+	0x1930, 0x193b,
+	0x1940, 0x1940,
+	0x1944, 0x196d,
+	0x1970, 0x1974,
+	0x1980, 0x19ab,
+	0x19b0, 0x19c9,
+	0x19d0, 0x19da,
+	0x19de, 0x1a1b,
+	0x1a1e, 0x1a5e,
+	0x1a60, 0x1a7c,
+	0x1a7f, 0x1a89,
+	0x1a90, 0x1a99,
+	0x1aa0, 0x1aad,
+	0x1ab0, 0x1ace,
+	0x1b00, 0x1b4c,
+	0x1b50, 0x1b7e,
+	0x1b80, 0x1bf3,
+	0x1bfc, 0x1c37,
+	0x1c3b, 0x1c49,
+	0x1c4d, 0x1c88,
+	0x1c90, 0x1cba,
+	0x1cbd, 0x1cc7,
+	0x1cd0, 0x1cfa,
+	0x1d00, 0x1f15,
+	0x1f18, 0x1f1d,
+	0x1f20, 0x1f45,
+	0x1f48, 0x1f4d,
+	0x1f50, 0x1f57,
+	0x1f59, 0x1f59,
+	0x1f5b, 0x1f5b,
+	0x1f5d, 0x1f5d,
+	0x1f5f, 0x1f7d,
+	0x1f80, 0x1fb4,
+	0x1fb6, 0x1fc4,
+	0x1fc6, 0x1fd3,
+	0x1fd6, 0x1fdb,
+	0x1fdd, 0x1fef,
+	0x1ff2, 0x1ff4,
+	0x1ff6, 0x1ffe,
+	0x2000, 0x2064,
+	0x2066, 0x2071,
+	0x2074, 0x208e,
+	0x2090, 0x209c,
+	0x20a0, 0x20c0,
+	0x20d0, 0x20f0,
+	0x2100, 0x218b,
+	0x2190, 0x2426,
+	0x2440, 0x244a,
+	0x2460, 0x2b73,
+	0x2b76, 0x2b95,
+	0x2b97, 0x2cf3,
+	0x2cf9, 0x2d25,
+	0x2d27, 0x2d27,
+	0x2d2d, 0x2d2d,
+	0x2d30, 0x2d67,
+	0x2d6f, 0x2d70,
+	0x2d7f, 0x2d96,
+	0x2da0, 0x2da6,
+	0x2da8, 0x2dae,
+	0x2db0, 0x2db6,
+	0x2db8, 0x2dbe,
+	0x2dc0, 0x2dc6,
+	0x2dc8, 0x2dce,
+	0x2dd0, 0x2dd6,
+	0x2dd8, 0x2dde,
+	0x2de0, 0x2e5d,
+	0x2e80, 0x2e99,
+	0x2e9b, 0x2ef3,
+	0x2f00, 0x2fd5,
+	0x2ff0, 0x2ffb,
+	0x3000, 0x303f,
+	0x3041, 0x3096,
+	0x3099, 0x30ff,
+	0x3105, 0x312f,
+	0x3131, 0x318e,
+	0x3190, 0x31e3,
+	0x31f0, 0x321e,
+	0x3220, 0xa48c,
+	0xa490, 0xa4c6,
+	0xa4d0, 0xa62b,
+	0xa640, 0xa6f7,
+	0xa700, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa82c,
+	0xa830, 0xa839,
+	0xa840, 0xa877,
+	0xa880, 0xa8c5,
+	0xa8ce, 0xa8d9,
+	0xa8e0, 0xa953,
+	0xa95f, 0xa97c,
+	0xa980, 0xa9cd,
+	0xa9cf, 0xa9d9,
+	0xa9de, 0xa9fe,
+	0xaa00, 0xaa36,
+	0xaa40, 0xaa4d,
+	0xaa50, 0xaa59,
+	0xaa5c, 0xaac2,
+	0xaadb, 0xaaf6,
+	0xab01, 0xab06,
+	0xab09, 0xab0e,
+	0xab11, 0xab16,
+	0xab20, 0xab26,
+	0xab28, 0xab2e,
+	0xab30, 0xab6b,
+	0xab70, 0xabed,
+	0xabf0, 0xabf9,
+	0xac00, 0xd7a3,
+	0xd7b0, 0xd7c6,
+	0xd7cb, 0xd7fb,
+	0xd800, 0xfa6d,
+	0xfa70, 0xfad9,
+	0xfb00, 0xfb06,
+	0xfb13, 0xfb17,
+	0xfb1d, 0xfb36,
+	0xfb38, 0xfb3c,
+	0xfb3e, 0xfb3e,
+	0xfb40, 0xfb41,
+	0xfb43, 0xfb44,
+	0xfb46, 0xfbc2,
+	0xfbd3, 0xfd8f,
+	0xfd92, 0xfdc7,
+	0xfdcf, 0xfe19,
+	0xfe20, 0xfe52,
+	0xfe54, 0xfe66,
+	0xfe68, 0xfe6b,
+	0xfe70, 0xfe74,
+	0xfe76, 0xfefc,
+	0xfeff, 0xfeff,
+	0xff01, 0xffbe,
+	0xffc2, 0xffc7,
+	0xffca, 0xffcf,
+	0xffd2, 0xffd7,
+	0xffda, 0xffdc,
+	0xffe0, 0xffe6,
+	0xffe8, 0xffee,
+	0xfff9, 0x1000b,
+	0x1000d, 0x10026,
+	0x10028, 0x1003a,
+	0x1003c, 0x1003d,
+	0x1003f, 0x1004d,
+	0x10050, 0x1005d,
+	0x10080, 0x100fa,
+	0x10100, 0x10102,
+	0x10107, 0x10133,
+	0x10137, 0x1018e,
+	0x10190, 0x1019c,
+	0x101a0, 0x101a0,
+	0x101d0, 0x101fd,
+	0x10280, 0x1029c,
+	0x102a0, 0x102d0,
+	0x102e0, 0x102fb,
+	0x10300, 0x10323,
+	0x1032d, 0x1034a,
+	0x10350, 0x1037a,
+	0x10380, 0x1039d,
+	0x1039f, 0x103c3,
+	0x103c8, 0x103d5,
+	0x10400, 0x1049d,
+	0x104a0, 0x104a9,
+	0x104b0, 0x104d3,
+	0x104d8, 0x104fb,
+	0x10500, 0x10527,
+	0x10530, 0x10563,
+	0x1056f, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
+	0x10600, 0x10736,
+	0x10740, 0x10755,
+	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
+	0x10800, 0x10805,
+	0x10808, 0x10808,
+	0x1080a, 0x10835,
+	0x10837, 0x10838,
+	0x1083c, 0x1083c,
+	0x1083f, 0x10855,
+	0x10857, 0x1089e,
+	0x108a7, 0x108af,
+	0x108e0, 0x108f2,
+	0x108f4, 0x108f5,
+	0x108fb, 0x1091b,
+	0x1091f, 0x10939,
+	0x1093f, 0x1093f,
+	0x10980, 0x109b7,
+	0x109bc, 0x109cf,
+	0x109d2, 0x10a03,
+	0x10a05, 0x10a06,
+	0x10a0c, 0x10a13,
+	0x10a15, 0x10a17,
+	0x10a19, 0x10a35,
+	0x10a38, 0x10a3a,
+	0x10a3f, 0x10a48,
+	0x10a50, 0x10a58,
+	0x10a60, 0x10a9f,
+	0x10ac0, 0x10ae6,
+	0x10aeb, 0x10af6,
+	0x10b00, 0x10b35,
+	0x10b39, 0x10b55,
+	0x10b58, 0x10b72,
+	0x10b78, 0x10b91,
+	0x10b99, 0x10b9c,
+	0x10ba9, 0x10baf,
+	0x10c00, 0x10c48,
+	0x10c80, 0x10cb2,
+	0x10cc0, 0x10cf2,
+	0x10cfa, 0x10d27,
+	0x10d30, 0x10d39,
+	0x10e60, 0x10e7e,
+	0x10e80, 0x10ea9,
+	0x10eab, 0x10ead,
+	0x10eb0, 0x10eb1,
+	0x10f00, 0x10f27,
+	0x10f30, 0x10f59,
+	0x10f70, 0x10f89,
+	0x10fb0, 0x10fcb,
+	0x10fe0, 0x10ff6,
+	0x11000, 0x1104d,
+	0x11052, 0x11075,
+	0x1107f, 0x110c2,
+	0x110cd, 0x110cd,
+	0x110d0, 0x110e8,
+	0x110f0, 0x110f9,
+	0x11100, 0x11134,
+	0x11136, 0x11147,
+	0x11150, 0x11176,
+	0x11180, 0x111df,
+	0x111e1, 0x111f4,
+	0x11200, 0x11211,
+	0x11213, 0x1123e,
+	0x11280, 0x11286,
+	0x11288, 0x11288,
+	0x1128a, 0x1128d,
+	0x1128f, 0x1129d,
+	0x1129f, 0x112a9,
+	0x112b0, 0x112ea,
+	0x112f0, 0x112f9,
+	0x11300, 0x11303,
+	0x11305, 0x1130c,
+	0x1130f, 0x11310,
+	0x11313, 0x11328,
+	0x1132a, 0x11330,
+	0x11332, 0x11333,
+	0x11335, 0x11339,
+	0x1133b, 0x11344,
+	0x11347, 0x11348,
+	0x1134b, 0x1134d,
+	0x11350, 0x11350,
+	0x11357, 0x11357,
+	0x1135d, 0x11363,
+	0x11366, 0x1136c,
+	0x11370, 0x11374,
+	0x11400, 0x1145b,
+	0x1145d, 0x11461,
+	0x11480, 0x114c7,
+	0x114d0, 0x114d9,
+	0x11580, 0x115b5,
+	0x115b8, 0x115dd,
+	0x11600, 0x11644,
+	0x11650, 0x11659,
+	0x11660, 0x1166c,
+	0x11680, 0x116b9,
+	0x116c0, 0x116c9,
+	0x11700, 0x1171a,
+	0x1171d, 0x1172b,
+	0x11730, 0x11746,
+	0x11800, 0x1183b,
+	0x118a0, 0x118f2,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x11946,
+	0x11950, 0x11959,
+	0x119a0, 0x119a7,
+	0x119aa, 0x119d7,
+	0x119da, 0x119e4,
+	0x11a00, 0x11a47,
+	0x11a50, 0x11aa2,
+	0x11ab0, 0x11af8,
+	0x11c00, 0x11c08,
+	0x11c0a, 0x11c36,
+	0x11c38, 0x11c45,
+	0x11c50, 0x11c6c,
+	0x11c70, 0x11c8f,
+	0x11c92, 0x11ca7,
+	0x11ca9, 0x11cb6,
+	0x11d00, 0x11d06,
+	0x11d08, 0x11d09,
+	0x11d0b, 0x11d36,
+	0x11d3a, 0x11d3a,
+	0x11d3c, 0x11d3d,
+	0x11d3f, 0x11d47,
+	0x11d50, 0x11d59,
+	0x11d60, 0x11d65,
+	0x11d67, 0x11d68,
+	0x11d6a, 0x11d8e,
+	0x11d90, 0x11d91,
+	0x11d93, 0x11d98,
+	0x11da0, 0x11da9,
+	0x11ee0, 0x11ef8,
+	0x11fb0, 0x11fb0,
+	0x11fc0, 0x11ff1,
+	0x11fff, 0x12399,
+	0x12400, 0x1246e,
+	0x12470, 0x12474,
+	0x12480, 0x12543,
+	0x12f90, 0x12ff2,
+	0x13000, 0x1342e,
+	0x13430, 0x13438,
+	0x14400, 0x14646,
+	0x16800, 0x16a38,
+	0x16a40, 0x16a5e,
+	0x16a60, 0x16a69,
+	0x16a6e, 0x16abe,
+	0x16ac0, 0x16ac9,
+	0x16ad0, 0x16aed,
+	0x16af0, 0x16af5,
+	0x16b00, 0x16b45,
+	0x16b50, 0x16b59,
+	0x16b5b, 0x16b61,
+	0x16b63, 0x16b77,
+	0x16b7d, 0x16b8f,
+	0x16e40, 0x16e9a,
+	0x16f00, 0x16f4a,
+	0x16f4f, 0x16f87,
+	0x16f8f, 0x16f9f,
+	0x16fe0, 0x16fe4,
+	0x16ff0, 0x16ff1,
+	0x17000, 0x187f7,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b150, 0x1b152,
+	0x1b164, 0x1b167,
+	0x1b170, 0x1b2fb,
+	0x1bc00, 0x1bc6a,
+	0x1bc70, 0x1bc7c,
+	0x1bc80, 0x1bc88,
+	0x1bc90, 0x1bc99,
+	0x1bc9c, 0x1bca3,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
+	0x1cf50, 0x1cfc3,
+	0x1d000, 0x1d0f5,
+	0x1d100, 0x1d126,
+	0x1d129, 0x1d1ea,
+	0x1d200, 0x1d245,
+	0x1d2e0, 0x1d2f3,
+	0x1d300, 0x1d356,
+	0x1d360, 0x1d378,
+	0x1d400, 0x1d454,
+	0x1d456, 0x1d49c,
+	0x1d49e, 0x1d49f,
+	0x1d4a2, 0x1d4a2,
+	0x1d4a5, 0x1d4a6,
+	0x1d4a9, 0x1d4ac,
+	0x1d4ae, 0x1d4b9,
+	0x1d4bb, 0x1d4bb,
+	0x1d4bd, 0x1d4c3,
+	0x1d4c5, 0x1d505,
+	0x1d507, 0x1d50a,
+	0x1d50d, 0x1d514,
+	0x1d516, 0x1d51c,
+	0x1d51e, 0x1d539,
+	0x1d53b, 0x1d53e,
+	0x1d540, 0x1d544,
+	0x1d546, 0x1d546,
+	0x1d54a, 0x1d550,
+	0x1d552, 0x1d6a5,
+	0x1d6a8, 0x1d7cb,
+	0x1d7ce, 0x1da8b,
+	0x1da9b, 0x1da9f,
+	0x1daa1, 0x1daaf,
+	0x1df00, 0x1df1e,
+	0x1e000, 0x1e006,
+	0x1e008, 0x1e018,
+	0x1e01b, 0x1e021,
+	0x1e023, 0x1e024,
+	0x1e026, 0x1e02a,
+	0x1e100, 0x1e12c,
+	0x1e130, 0x1e13d,
+	0x1e140, 0x1e149,
+	0x1e14e, 0x1e14f,
+	0x1e290, 0x1e2ae,
+	0x1e2c0, 0x1e2f9,
+	0x1e2ff, 0x1e2ff,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
+	0x1e800, 0x1e8c4,
+	0x1e8c7, 0x1e8d6,
+	0x1e900, 0x1e94b,
+	0x1e950, 0x1e959,
+	0x1e95e, 0x1e95f,
+	0x1ec71, 0x1ecb4,
+	0x1ed01, 0x1ed3d,
+	0x1ee00, 0x1ee03,
+	0x1ee05, 0x1ee1f,
+	0x1ee21, 0x1ee22,
+	0x1ee24, 0x1ee24,
+	0x1ee27, 0x1ee27,
+	0x1ee29, 0x1ee32,
+	0x1ee34, 0x1ee37,
+	0x1ee39, 0x1ee39,
+	0x1ee3b, 0x1ee3b,
+	0x1ee42, 0x1ee42,
+	0x1ee47, 0x1ee47,
+	0x1ee49, 0x1ee49,
+	0x1ee4b, 0x1ee4b,
+	0x1ee4d, 0x1ee4f,
+	0x1ee51, 0x1ee52,
+	0x1ee54, 0x1ee54,
+	0x1ee57, 0x1ee57,
+	0x1ee59, 0x1ee59,
+	0x1ee5b, 0x1ee5b,
+	0x1ee5d, 0x1ee5d,
+	0x1ee5f, 0x1ee5f,
+	0x1ee61, 0x1ee62,
+	0x1ee64, 0x1ee64,
+	0x1ee67, 0x1ee6a,
+	0x1ee6c, 0x1ee72,
+	0x1ee74, 0x1ee77,
+	0x1ee79, 0x1ee7c,
+	0x1ee7e, 0x1ee7e,
+	0x1ee80, 0x1ee89,
+	0x1ee8b, 0x1ee9b,
+	0x1eea1, 0x1eea3,
+	0x1eea5, 0x1eea9,
+	0x1eeab, 0x1eebb,
+	0x1eef0, 0x1eef1,
+	0x1f000, 0x1f02b,
+	0x1f030, 0x1f093,
+	0x1f0a0, 0x1f0ae,
+	0x1f0b1, 0x1f0bf,
+	0x1f0c1, 0x1f0cf,
+	0x1f0d1, 0x1f0f5,
+	0x1f100, 0x1f1ad,
+	0x1f1e6, 0x1f202,
+	0x1f210, 0x1f23b,
+	0x1f240, 0x1f248,
+	0x1f250, 0x1f251,
+	0x1f260, 0x1f265,
+	0x1f300, 0x1f6d7,
+	0x1f6dd, 0x1f6ec,
+	0x1f6f0, 0x1f6fc,
+	0x1f700, 0x1f773,
+	0x1f780, 0x1f7d8,
+	0x1f7e0, 0x1f7eb,
+	0x1f7f0, 0x1f7f0,
+	0x1f800, 0x1f80b,
+	0x1f810, 0x1f847,
+	0x1f850, 0x1f859,
+	0x1f860, 0x1f887,
+	0x1f890, 0x1f8ad,
+	0x1f8b0, 0x1f8b1,
+	0x1f900, 0x1fa53,
+	0x1fa60, 0x1fa6d,
+	0x1fa70, 0x1fa74,
+	0x1fa78, 0x1fa7c,
+	0x1fa80, 0x1fa86,
+	0x1fa90, 0x1faac,
+	0x1fab0, 0x1faba,
+	0x1fac0, 0x1fac5,
+	0x1fad0, 0x1fad9,
+	0x1fae0, 0x1fae7,
+	0x1faf0, 0x1faf6,
+	0x1fb00, 0x1fb92,
+	0x1fb94, 0x1fbca,
+	0x1fbf0, 0x1fbf9,
+	0x1fffe, 0x2a6df,
+	0x2a700, 0x2b738,
+	0x2b740, 0x2b81d,
+	0x2b820, 0x2cea1,
+	0x2ceb0, 0x2ebe0,
+	0x2f800, 0x2fa1d,
+	0x2fffe, 0x3134a,
+	0x3fffe, 0x3ffff,
+	0x4fffe, 0x4ffff,
+	0x5fffe, 0x5ffff,
+	0x6fffe, 0x6ffff,
+	0x7fffe, 0x7ffff,
+	0x8fffe, 0x8ffff,
+	0x9fffe, 0x9ffff,
+	0xafffe, 0xaffff,
+	0xbfffe, 0xbffff,
+	0xcfffe, 0xcffff,
+	0xdfffe, 0xdffff,
+	0xe0001, 0xe0001,
+	0xe0020, 0xe007f,
+	0xe0100, 0xe01ef,
+	0xefffe, 0x10ffff,
+}; /* CR_Age_14_0 */
+
+/* 'Age_15_0': Derived Age 15.0 */
+static const OnigCodePoint CR_Age_15_0[] = {
+	715,
+	0x0000, 0x0377,
+	0x037a, 0x037f,
+	0x0384, 0x038a,
+	0x038c, 0x038c,
+	0x038e, 0x03a1,
+	0x03a3, 0x052f,
+	0x0531, 0x0556,
+	0x0559, 0x058a,
+	0x058d, 0x058f,
+	0x0591, 0x05c7,
+	0x05d0, 0x05ea,
+	0x05ef, 0x05f4,
+	0x0600, 0x070d,
+	0x070f, 0x074a,
+	0x074d, 0x07b1,
+	0x07c0, 0x07fa,
+	0x07fd, 0x082d,
+	0x0830, 0x083e,
+	0x0840, 0x085b,
+	0x085e, 0x085e,
+	0x0860, 0x086a,
+	0x0870, 0x088e,
+	0x0890, 0x0891,
+	0x0898, 0x0983,
+	0x0985, 0x098c,
+	0x098f, 0x0990,
+	0x0993, 0x09a8,
+	0x09aa, 0x09b0,
+	0x09b2, 0x09b2,
+	0x09b6, 0x09b9,
+	0x09bc, 0x09c4,
+	0x09c7, 0x09c8,
+	0x09cb, 0x09ce,
+	0x09d7, 0x09d7,
+	0x09dc, 0x09dd,
+	0x09df, 0x09e3,
+	0x09e6, 0x09fe,
+	0x0a01, 0x0a03,
+	0x0a05, 0x0a0a,
+	0x0a0f, 0x0a10,
+	0x0a13, 0x0a28,
+	0x0a2a, 0x0a30,
+	0x0a32, 0x0a33,
+	0x0a35, 0x0a36,
+	0x0a38, 0x0a39,
+	0x0a3c, 0x0a3c,
+	0x0a3e, 0x0a42,
+	0x0a47, 0x0a48,
+	0x0a4b, 0x0a4d,
+	0x0a51, 0x0a51,
+	0x0a59, 0x0a5c,
+	0x0a5e, 0x0a5e,
+	0x0a66, 0x0a76,
+	0x0a81, 0x0a83,
+	0x0a85, 0x0a8d,
+	0x0a8f, 0x0a91,
+	0x0a93, 0x0aa8,
+	0x0aaa, 0x0ab0,
+	0x0ab2, 0x0ab3,
+	0x0ab5, 0x0ab9,
+	0x0abc, 0x0ac5,
+	0x0ac7, 0x0ac9,
+	0x0acb, 0x0acd,
+	0x0ad0, 0x0ad0,
+	0x0ae0, 0x0ae3,
+	0x0ae6, 0x0af1,
+	0x0af9, 0x0aff,
+	0x0b01, 0x0b03,
+	0x0b05, 0x0b0c,
+	0x0b0f, 0x0b10,
+	0x0b13, 0x0b28,
+	0x0b2a, 0x0b30,
+	0x0b32, 0x0b33,
+	0x0b35, 0x0b39,
+	0x0b3c, 0x0b44,
+	0x0b47, 0x0b48,
+	0x0b4b, 0x0b4d,
+	0x0b55, 0x0b57,
+	0x0b5c, 0x0b5d,
+	0x0b5f, 0x0b63,
+	0x0b66, 0x0b77,
+	0x0b82, 0x0b83,
+	0x0b85, 0x0b8a,
+	0x0b8e, 0x0b90,
+	0x0b92, 0x0b95,
+	0x0b99, 0x0b9a,
+	0x0b9c, 0x0b9c,
+	0x0b9e, 0x0b9f,
+	0x0ba3, 0x0ba4,
+	0x0ba8, 0x0baa,
+	0x0bae, 0x0bb9,
+	0x0bbe, 0x0bc2,
+	0x0bc6, 0x0bc8,
+	0x0bca, 0x0bcd,
+	0x0bd0, 0x0bd0,
+	0x0bd7, 0x0bd7,
+	0x0be6, 0x0bfa,
+	0x0c00, 0x0c0c,
+	0x0c0e, 0x0c10,
+	0x0c12, 0x0c28,
+	0x0c2a, 0x0c39,
+	0x0c3c, 0x0c44,
+	0x0c46, 0x0c48,
+	0x0c4a, 0x0c4d,
+	0x0c55, 0x0c56,
+	0x0c58, 0x0c5a,
+	0x0c5d, 0x0c5d,
+	0x0c60, 0x0c63,
+	0x0c66, 0x0c6f,
+	0x0c77, 0x0c8c,
+	0x0c8e, 0x0c90,
+	0x0c92, 0x0ca8,
+	0x0caa, 0x0cb3,
+	0x0cb5, 0x0cb9,
+	0x0cbc, 0x0cc4,
+	0x0cc6, 0x0cc8,
+	0x0cca, 0x0ccd,
+	0x0cd5, 0x0cd6,
+	0x0cdd, 0x0cde,
+	0x0ce0, 0x0ce3,
+	0x0ce6, 0x0cef,
+	0x0cf1, 0x0cf3,
+	0x0d00, 0x0d0c,
+	0x0d0e, 0x0d10,
+	0x0d12, 0x0d44,
+	0x0d46, 0x0d48,
+	0x0d4a, 0x0d4f,
+	0x0d54, 0x0d63,
+	0x0d66, 0x0d7f,
+	0x0d81, 0x0d83,
+	0x0d85, 0x0d96,
+	0x0d9a, 0x0db1,
+	0x0db3, 0x0dbb,
+	0x0dbd, 0x0dbd,
+	0x0dc0, 0x0dc6,
+	0x0dca, 0x0dca,
+	0x0dcf, 0x0dd4,
+	0x0dd6, 0x0dd6,
+	0x0dd8, 0x0ddf,
+	0x0de6, 0x0def,
+	0x0df2, 0x0df4,
+	0x0e01, 0x0e3a,
+	0x0e3f, 0x0e5b,
+	0x0e81, 0x0e82,
+	0x0e84, 0x0e84,
+	0x0e86, 0x0e8a,
+	0x0e8c, 0x0ea3,
+	0x0ea5, 0x0ea5,
+	0x0ea7, 0x0ebd,
+	0x0ec0, 0x0ec4,
+	0x0ec6, 0x0ec6,
+	0x0ec8, 0x0ece,
+	0x0ed0, 0x0ed9,
+	0x0edc, 0x0edf,
+	0x0f00, 0x0f47,
+	0x0f49, 0x0f6c,
+	0x0f71, 0x0f97,
+	0x0f99, 0x0fbc,
+	0x0fbe, 0x0fcc,
+	0x0fce, 0x0fda,
+	0x1000, 0x10c5,
+	0x10c7, 0x10c7,
+	0x10cd, 0x10cd,
+	0x10d0, 0x1248,
+	0x124a, 0x124d,
+	0x1250, 0x1256,
+	0x1258, 0x1258,
+	0x125a, 0x125d,
+	0x1260, 0x1288,
+	0x128a, 0x128d,
+	0x1290, 0x12b0,
+	0x12b2, 0x12b5,
+	0x12b8, 0x12be,
+	0x12c0, 0x12c0,
+	0x12c2, 0x12c5,
+	0x12c8, 0x12d6,
+	0x12d8, 0x1310,
+	0x1312, 0x1315,
+	0x1318, 0x135a,
+	0x135d, 0x137c,
+	0x1380, 0x1399,
+	0x13a0, 0x13f5,
+	0x13f8, 0x13fd,
+	0x1400, 0x169c,
+	0x16a0, 0x16f8,
+	0x1700, 0x1715,
+	0x171f, 0x1736,
+	0x1740, 0x1753,
+	0x1760, 0x176c,
+	0x176e, 0x1770,
+	0x1772, 0x1773,
+	0x1780, 0x17dd,
+	0x17e0, 0x17e9,
+	0x17f0, 0x17f9,
+	0x1800, 0x1819,
+	0x1820, 0x1878,
+	0x1880, 0x18aa,
+	0x18b0, 0x18f5,
+	0x1900, 0x191e,
+	0x1920, 0x192b,
+	0x1930, 0x193b,
+	0x1940, 0x1940,
+	0x1944, 0x196d,
+	0x1970, 0x1974,
+	0x1980, 0x19ab,
+	0x19b0, 0x19c9,
+	0x19d0, 0x19da,
+	0x19de, 0x1a1b,
+	0x1a1e, 0x1a5e,
+	0x1a60, 0x1a7c,
+	0x1a7f, 0x1a89,
+	0x1a90, 0x1a99,
+	0x1aa0, 0x1aad,
+	0x1ab0, 0x1ace,
+	0x1b00, 0x1b4c,
+	0x1b50, 0x1b7e,
+	0x1b80, 0x1bf3,
+	0x1bfc, 0x1c37,
+	0x1c3b, 0x1c49,
+	0x1c4d, 0x1c88,
+	0x1c90, 0x1cba,
+	0x1cbd, 0x1cc7,
+	0x1cd0, 0x1cfa,
+	0x1d00, 0x1f15,
+	0x1f18, 0x1f1d,
+	0x1f20, 0x1f45,
+	0x1f48, 0x1f4d,
+	0x1f50, 0x1f57,
+	0x1f59, 0x1f59,
+	0x1f5b, 0x1f5b,
+	0x1f5d, 0x1f5d,
+	0x1f5f, 0x1f7d,
+	0x1f80, 0x1fb4,
+	0x1fb6, 0x1fc4,
+	0x1fc6, 0x1fd3,
+	0x1fd6, 0x1fdb,
+	0x1fdd, 0x1fef,
+	0x1ff2, 0x1ff4,
+	0x1ff6, 0x1ffe,
+	0x2000, 0x2064,
+	0x2066, 0x2071,
+	0x2074, 0x208e,
+	0x2090, 0x209c,
+	0x20a0, 0x20c0,
+	0x20d0, 0x20f0,
+	0x2100, 0x218b,
+	0x2190, 0x2426,
+	0x2440, 0x244a,
+	0x2460, 0x2b73,
+	0x2b76, 0x2b95,
+	0x2b97, 0x2cf3,
+	0x2cf9, 0x2d25,
+	0x2d27, 0x2d27,
+	0x2d2d, 0x2d2d,
+	0x2d30, 0x2d67,
+	0x2d6f, 0x2d70,
+	0x2d7f, 0x2d96,
+	0x2da0, 0x2da6,
+	0x2da8, 0x2dae,
+	0x2db0, 0x2db6,
+	0x2db8, 0x2dbe,
+	0x2dc0, 0x2dc6,
+	0x2dc8, 0x2dce,
+	0x2dd0, 0x2dd6,
+	0x2dd8, 0x2dde,
+	0x2de0, 0x2e5d,
+	0x2e80, 0x2e99,
+	0x2e9b, 0x2ef3,
+	0x2f00, 0x2fd5,
+	0x2ff0, 0x2ffb,
+	0x3000, 0x303f,
+	0x3041, 0x3096,
+	0x3099, 0x30ff,
+	0x3105, 0x312f,
+	0x3131, 0x318e,
+	0x3190, 0x31e3,
+	0x31f0, 0x321e,
+	0x3220, 0xa48c,
+	0xa490, 0xa4c6,
+	0xa4d0, 0xa62b,
+	0xa640, 0xa6f7,
+	0xa700, 0xa7ca,
+	0xa7d0, 0xa7d1,
+	0xa7d3, 0xa7d3,
+	0xa7d5, 0xa7d9,
+	0xa7f2, 0xa82c,
+	0xa830, 0xa839,
+	0xa840, 0xa877,
+	0xa880, 0xa8c5,
+	0xa8ce, 0xa8d9,
+	0xa8e0, 0xa953,
+	0xa95f, 0xa97c,
+	0xa980, 0xa9cd,
+	0xa9cf, 0xa9d9,
+	0xa9de, 0xa9fe,
+	0xaa00, 0xaa36,
+	0xaa40, 0xaa4d,
+	0xaa50, 0xaa59,
+	0xaa5c, 0xaac2,
+	0xaadb, 0xaaf6,
+	0xab01, 0xab06,
+	0xab09, 0xab0e,
+	0xab11, 0xab16,
+	0xab20, 0xab26,
+	0xab28, 0xab2e,
+	0xab30, 0xab6b,
+	0xab70, 0xabed,
+	0xabf0, 0xabf9,
+	0xac00, 0xd7a3,
+	0xd7b0, 0xd7c6,
+	0xd7cb, 0xd7fb,
+	0xd800, 0xfa6d,
+	0xfa70, 0xfad9,
+	0xfb00, 0xfb06,
+	0xfb13, 0xfb17,
+	0xfb1d, 0xfb36,
+	0xfb38, 0xfb3c,
+	0xfb3e, 0xfb3e,
+	0xfb40, 0xfb41,
+	0xfb43, 0xfb44,
+	0xfb46, 0xfbc2,
+	0xfbd3, 0xfd8f,
+	0xfd92, 0xfdc7,
+	0xfdcf, 0xfe19,
+	0xfe20, 0xfe52,
+	0xfe54, 0xfe66,
+	0xfe68, 0xfe6b,
+	0xfe70, 0xfe74,
+	0xfe76, 0xfefc,
+	0xfeff, 0xfeff,
+	0xff01, 0xffbe,
+	0xffc2, 0xffc7,
+	0xffca, 0xffcf,
+	0xffd2, 0xffd7,
+	0xffda, 0xffdc,
+	0xffe0, 0xffe6,
+	0xffe8, 0xffee,
+	0xfff9, 0x1000b,
+	0x1000d, 0x10026,
+	0x10028, 0x1003a,
+	0x1003c, 0x1003d,
+	0x1003f, 0x1004d,
+	0x10050, 0x1005d,
+	0x10080, 0x100fa,
+	0x10100, 0x10102,
+	0x10107, 0x10133,
+	0x10137, 0x1018e,
+	0x10190, 0x1019c,
+	0x101a0, 0x101a0,
+	0x101d0, 0x101fd,
+	0x10280, 0x1029c,
+	0x102a0, 0x102d0,
+	0x102e0, 0x102fb,
+	0x10300, 0x10323,
+	0x1032d, 0x1034a,
+	0x10350, 0x1037a,
+	0x10380, 0x1039d,
+	0x1039f, 0x103c3,
+	0x103c8, 0x103d5,
+	0x10400, 0x1049d,
+	0x104a0, 0x104a9,
+	0x104b0, 0x104d3,
+	0x104d8, 0x104fb,
+	0x10500, 0x10527,
+	0x10530, 0x10563,
+	0x1056f, 0x1057a,
+	0x1057c, 0x1058a,
+	0x1058c, 0x10592,
+	0x10594, 0x10595,
+	0x10597, 0x105a1,
+	0x105a3, 0x105b1,
+	0x105b3, 0x105b9,
+	0x105bb, 0x105bc,
+	0x10600, 0x10736,
+	0x10740, 0x10755,
+	0x10760, 0x10767,
+	0x10780, 0x10785,
+	0x10787, 0x107b0,
+	0x107b2, 0x107ba,
+	0x10800, 0x10805,
+	0x10808, 0x10808,
+	0x1080a, 0x10835,
+	0x10837, 0x10838,
+	0x1083c, 0x1083c,
+	0x1083f, 0x10855,
+	0x10857, 0x1089e,
+	0x108a7, 0x108af,
+	0x108e0, 0x108f2,
+	0x108f4, 0x108f5,
+	0x108fb, 0x1091b,
+	0x1091f, 0x10939,
+	0x1093f, 0x1093f,
+	0x10980, 0x109b7,
+	0x109bc, 0x109cf,
+	0x109d2, 0x10a03,
+	0x10a05, 0x10a06,
+	0x10a0c, 0x10a13,
+	0x10a15, 0x10a17,
+	0x10a19, 0x10a35,
+	0x10a38, 0x10a3a,
+	0x10a3f, 0x10a48,
+	0x10a50, 0x10a58,
+	0x10a60, 0x10a9f,
+	0x10ac0, 0x10ae6,
+	0x10aeb, 0x10af6,
+	0x10b00, 0x10b35,
+	0x10b39, 0x10b55,
+	0x10b58, 0x10b72,
+	0x10b78, 0x10b91,
+	0x10b99, 0x10b9c,
+	0x10ba9, 0x10baf,
+	0x10c00, 0x10c48,
+	0x10c80, 0x10cb2,
+	0x10cc0, 0x10cf2,
+	0x10cfa, 0x10d27,
+	0x10d30, 0x10d39,
+	0x10e60, 0x10e7e,
+	0x10e80, 0x10ea9,
+	0x10eab, 0x10ead,
+	0x10eb0, 0x10eb1,
+	0x10efd, 0x10f27,
+	0x10f30, 0x10f59,
+	0x10f70, 0x10f89,
+	0x10fb0, 0x10fcb,
+	0x10fe0, 0x10ff6,
+	0x11000, 0x1104d,
+	0x11052, 0x11075,
+	0x1107f, 0x110c2,
+	0x110cd, 0x110cd,
+	0x110d0, 0x110e8,
+	0x110f0, 0x110f9,
+	0x11100, 0x11134,
+	0x11136, 0x11147,
+	0x11150, 0x11176,
+	0x11180, 0x111df,
+	0x111e1, 0x111f4,
+	0x11200, 0x11211,
+	0x11213, 0x11241,
+	0x11280, 0x11286,
+	0x11288, 0x11288,
+	0x1128a, 0x1128d,
+	0x1128f, 0x1129d,
+	0x1129f, 0x112a9,
+	0x112b0, 0x112ea,
+	0x112f0, 0x112f9,
+	0x11300, 0x11303,
+	0x11305, 0x1130c,
+	0x1130f, 0x11310,
+	0x11313, 0x11328,
+	0x1132a, 0x11330,
+	0x11332, 0x11333,
+	0x11335, 0x11339,
+	0x1133b, 0x11344,
+	0x11347, 0x11348,
+	0x1134b, 0x1134d,
+	0x11350, 0x11350,
+	0x11357, 0x11357,
+	0x1135d, 0x11363,
+	0x11366, 0x1136c,
+	0x11370, 0x11374,
+	0x11400, 0x1145b,
+	0x1145d, 0x11461,
+	0x11480, 0x114c7,
+	0x114d0, 0x114d9,
+	0x11580, 0x115b5,
+	0x115b8, 0x115dd,
+	0x11600, 0x11644,
+	0x11650, 0x11659,
+	0x11660, 0x1166c,
+	0x11680, 0x116b9,
+	0x116c0, 0x116c9,
+	0x11700, 0x1171a,
+	0x1171d, 0x1172b,
+	0x11730, 0x11746,
+	0x11800, 0x1183b,
+	0x118a0, 0x118f2,
+	0x118ff, 0x11906,
+	0x11909, 0x11909,
+	0x1190c, 0x11913,
+	0x11915, 0x11916,
+	0x11918, 0x11935,
+	0x11937, 0x11938,
+	0x1193b, 0x11946,
+	0x11950, 0x11959,
+	0x119a0, 0x119a7,
+	0x119aa, 0x119d7,
+	0x119da, 0x119e4,
+	0x11a00, 0x11a47,
+	0x11a50, 0x11aa2,
+	0x11ab0, 0x11af8,
+	0x11b00, 0x11b09,
+	0x11c00, 0x11c08,
+	0x11c0a, 0x11c36,
+	0x11c38, 0x11c45,
+	0x11c50, 0x11c6c,
+	0x11c70, 0x11c8f,
+	0x11c92, 0x11ca7,
+	0x11ca9, 0x11cb6,
+	0x11d00, 0x11d06,
+	0x11d08, 0x11d09,
+	0x11d0b, 0x11d36,
+	0x11d3a, 0x11d3a,
+	0x11d3c, 0x11d3d,
+	0x11d3f, 0x11d47,
+	0x11d50, 0x11d59,
+	0x11d60, 0x11d65,
+	0x11d67, 0x11d68,
+	0x11d6a, 0x11d8e,
+	0x11d90, 0x11d91,
+	0x11d93, 0x11d98,
+	0x11da0, 0x11da9,
+	0x11ee0, 0x11ef8,
+	0x11f00, 0x11f10,
+	0x11f12, 0x11f3a,
+	0x11f3e, 0x11f59,
+	0x11fb0, 0x11fb0,
+	0x11fc0, 0x11ff1,
+	0x11fff, 0x12399,
+	0x12400, 0x1246e,
+	0x12470, 0x12474,
+	0x12480, 0x12543,
+	0x12f90, 0x12ff2,
+	0x13000, 0x13455,
+	0x14400, 0x14646,
+	0x16800, 0x16a38,
+	0x16a40, 0x16a5e,
+	0x16a60, 0x16a69,
+	0x16a6e, 0x16abe,
+	0x16ac0, 0x16ac9,
+	0x16ad0, 0x16aed,
+	0x16af0, 0x16af5,
+	0x16b00, 0x16b45,
+	0x16b50, 0x16b59,
+	0x16b5b, 0x16b61,
+	0x16b63, 0x16b77,
+	0x16b7d, 0x16b8f,
+	0x16e40, 0x16e9a,
+	0x16f00, 0x16f4a,
+	0x16f4f, 0x16f87,
+	0x16f8f, 0x16f9f,
+	0x16fe0, 0x16fe4,
+	0x16ff0, 0x16ff1,
+	0x17000, 0x187f7,
+	0x18800, 0x18cd5,
+	0x18d00, 0x18d08,
+	0x1aff0, 0x1aff3,
+	0x1aff5, 0x1affb,
+	0x1affd, 0x1affe,
+	0x1b000, 0x1b122,
+	0x1b132, 0x1b132,
+	0x1b150, 0x1b152,
+	0x1b155, 0x1b155,
+	0x1b164, 0x1b167,
+	0x1b170, 0x1b2fb,
+	0x1bc00, 0x1bc6a,
+	0x1bc70, 0x1bc7c,
+	0x1bc80, 0x1bc88,
+	0x1bc90, 0x1bc99,
+	0x1bc9c, 0x1bca3,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
+	0x1cf50, 0x1cfc3,
+	0x1d000, 0x1d0f5,
+	0x1d100, 0x1d126,
+	0x1d129, 0x1d1ea,
+	0x1d200, 0x1d245,
+	0x1d2c0, 0x1d2d3,
+	0x1d2e0, 0x1d2f3,
+	0x1d300, 0x1d356,
+	0x1d360, 0x1d378,
+	0x1d400, 0x1d454,
+	0x1d456, 0x1d49c,
+	0x1d49e, 0x1d49f,
+	0x1d4a2, 0x1d4a2,
+	0x1d4a5, 0x1d4a6,
+	0x1d4a9, 0x1d4ac,
+	0x1d4ae, 0x1d4b9,
+	0x1d4bb, 0x1d4bb,
+	0x1d4bd, 0x1d4c3,
+	0x1d4c5, 0x1d505,
+	0x1d507, 0x1d50a,
+	0x1d50d, 0x1d514,
+	0x1d516, 0x1d51c,
+	0x1d51e, 0x1d539,
+	0x1d53b, 0x1d53e,
+	0x1d540, 0x1d544,
+	0x1d546, 0x1d546,
+	0x1d54a, 0x1d550,
+	0x1d552, 0x1d6a5,
+	0x1d6a8, 0x1d7cb,
+	0x1d7ce, 0x1da8b,
+	0x1da9b, 0x1da9f,
+	0x1daa1, 0x1daaf,
+	0x1df00, 0x1df1e,
+	0x1df25, 0x1df2a,
+	0x1e000, 0x1e006,
+	0x1e008, 0x1e018,
+	0x1e01b, 0x1e021,
+	0x1e023, 0x1e024,
+	0x1e026, 0x1e02a,
+	0x1e030, 0x1e06d,
+	0x1e08f, 0x1e08f,
+	0x1e100, 0x1e12c,
+	0x1e130, 0x1e13d,
+	0x1e140, 0x1e149,
+	0x1e14e, 0x1e14f,
+	0x1e290, 0x1e2ae,
+	0x1e2c0, 0x1e2f9,
+	0x1e2ff, 0x1e2ff,
+	0x1e4d0, 0x1e4f9,
+	0x1e7e0, 0x1e7e6,
+	0x1e7e8, 0x1e7eb,
+	0x1e7ed, 0x1e7ee,
+	0x1e7f0, 0x1e7fe,
+	0x1e800, 0x1e8c4,
+	0x1e8c7, 0x1e8d6,
+	0x1e900, 0x1e94b,
+	0x1e950, 0x1e959,
+	0x1e95e, 0x1e95f,
+	0x1ec71, 0x1ecb4,
+	0x1ed01, 0x1ed3d,
+	0x1ee00, 0x1ee03,
+	0x1ee05, 0x1ee1f,
+	0x1ee21, 0x1ee22,
+	0x1ee24, 0x1ee24,
+	0x1ee27, 0x1ee27,
+	0x1ee29, 0x1ee32,
+	0x1ee34, 0x1ee37,
+	0x1ee39, 0x1ee39,
+	0x1ee3b, 0x1ee3b,
+	0x1ee42, 0x1ee42,
+	0x1ee47, 0x1ee47,
+	0x1ee49, 0x1ee49,
+	0x1ee4b, 0x1ee4b,
+	0x1ee4d, 0x1ee4f,
+	0x1ee51, 0x1ee52,
+	0x1ee54, 0x1ee54,
+	0x1ee57, 0x1ee57,
+	0x1ee59, 0x1ee59,
+	0x1ee5b, 0x1ee5b,
+	0x1ee5d, 0x1ee5d,
+	0x1ee5f, 0x1ee5f,
+	0x1ee61, 0x1ee62,
+	0x1ee64, 0x1ee64,
+	0x1ee67, 0x1ee6a,
+	0x1ee6c, 0x1ee72,
+	0x1ee74, 0x1ee77,
+	0x1ee79, 0x1ee7c,
+	0x1ee7e, 0x1ee7e,
+	0x1ee80, 0x1ee89,
+	0x1ee8b, 0x1ee9b,
+	0x1eea1, 0x1eea3,
+	0x1eea5, 0x1eea9,
+	0x1eeab, 0x1eebb,
+	0x1eef0, 0x1eef1,
+	0x1f000, 0x1f02b,
+	0x1f030, 0x1f093,
+	0x1f0a0, 0x1f0ae,
+	0x1f0b1, 0x1f0bf,
+	0x1f0c1, 0x1f0cf,
+	0x1f0d1, 0x1f0f5,
+	0x1f100, 0x1f1ad,
+	0x1f1e6, 0x1f202,
+	0x1f210, 0x1f23b,
+	0x1f240, 0x1f248,
+	0x1f250, 0x1f251,
+	0x1f260, 0x1f265,
+	0x1f300, 0x1f6d7,
+	0x1f6dc, 0x1f6ec,
+	0x1f6f0, 0x1f6fc,
+	0x1f700, 0x1f776,
+	0x1f77b, 0x1f7d9,
+	0x1f7e0, 0x1f7eb,
+	0x1f7f0, 0x1f7f0,
+	0x1f800, 0x1f80b,
+	0x1f810, 0x1f847,
+	0x1f850, 0x1f859,
+	0x1f860, 0x1f887,
+	0x1f890, 0x1f8ad,
+	0x1f8b0, 0x1f8b1,
+	0x1f900, 0x1fa53,
+	0x1fa60, 0x1fa6d,
+	0x1fa70, 0x1fa7c,
+	0x1fa80, 0x1fa88,
+	0x1fa90, 0x1fabd,
+	0x1fabf, 0x1fac5,
+	0x1face, 0x1fadb,
+	0x1fae0, 0x1fae8,
+	0x1faf0, 0x1faf8,
+	0x1fb00, 0x1fb92,
+	0x1fb94, 0x1fbca,
+	0x1fbf0, 0x1fbf9,
+	0x1fffe, 0x2a6df,
+	0x2a700, 0x2b739,
+	0x2b740, 0x2b81d,
+	0x2b820, 0x2cea1,
+	0x2ceb0, 0x2ebe0,
+	0x2f800, 0x2fa1d,
+	0x2fffe, 0x3134a,
+	0x31350, 0x323af,
+	0x3fffe, 0x3ffff,
+	0x4fffe, 0x4ffff,
+	0x5fffe, 0x5ffff,
+	0x6fffe, 0x6ffff,
+	0x7fffe, 0x7ffff,
+	0x8fffe, 0x8ffff,
+	0x9fffe, 0x9ffff,
+	0xafffe, 0xaffff,
+	0xbfffe, 0xbffff,
+	0xcfffe, 0xcffff,
+	0xdfffe, 0xdffff,
+	0xe0001, 0xe0001,
+	0xe0020, 0xe007f,
+	0xe0100, 0xe01ef,
+	0xefffe, 0x10ffff,
+}; /* CR_Age_15_0 */
+
+#endif /* USE_UNICODE_AGE_PROPERTIES */
+/* 'Grapheme_Cluster_Break_Prepend': Grapheme_Cluster_Break=Prepend */
+static const OnigCodePoint CR_Grapheme_Cluster_Break_Prepend[] = {
+	15,
+	0x0600, 0x0605,
+	0x06dd, 0x06dd,
+	0x070f, 0x070f,
+	0x0890, 0x0891,
+	0x08e2, 0x08e2,
+	0x0d4e, 0x0d4e,
+	0x110bd, 0x110bd,
+	0x110cd, 0x110cd,
+	0x111c2, 0x111c3,
+	0x1193f, 0x1193f,
+	0x11941, 0x11941,
+	0x11a3a, 0x11a3a,
+	0x11a84, 0x11a89,
+	0x11d46, 0x11d46,
+	0x11f02, 0x11f02,
+}; /* CR_Grapheme_Cluster_Break_Prepend */
+
+/* 'Grapheme_Cluster_Break_CR': Grapheme_Cluster_Break=CR */
+static const OnigCodePoint CR_Grapheme_Cluster_Break_CR[] = {
+	1,
+	0x000d, 0x000d,
+}; /* CR_Grapheme_Cluster_Break_CR */
+
+/* 'Grapheme_Cluster_Break_LF': Grapheme_Cluster_Break=LF */
+#define CR_Grapheme_Cluster_Break_LF CR_NEWLINE
+
+/* 'Grapheme_Cluster_Break_Control': Grapheme_Cluster_Break=Control */
+static const OnigCodePoint CR_Grapheme_Cluster_Break_Control[] = {
+	19,
+	0x0000, 0x0009,
+	0x000b, 0x000c,
+	0x000e, 0x001f,
+	0x007f, 0x009f,
+	0x00ad, 0x00ad,
+	0x061c, 0x061c,
+	0x180e, 0x180e,
+	0x200b, 0x200b,
+	0x200e, 0x200f,
+	0x2028, 0x202e,
+	0x2060, 0x206f,
+	0xfeff, 0xfeff,
+	0xfff0, 0xfffb,
+	0x13430, 0x1343f,
+	0x1bca0, 0x1bca3,
+	0x1d173, 0x1d17a,
+	0xe0000, 0xe001f,
+	0xe0080, 0xe00ff,
+	0xe01f0, 0xe0fff,
+}; /* CR_Grapheme_Cluster_Break_Control */
+
+/* 'Grapheme_Cluster_Break_Extend': Grapheme_Cluster_Break=Extend */
+static const OnigCodePoint CR_Grapheme_Cluster_Break_Extend[] = {
+	364,
+	0x0300, 0x036f,
+	0x0483, 0x0489,
+	0x0591, 0x05bd,
+	0x05bf, 0x05bf,
+	0x05c1, 0x05c2,
+	0x05c4, 0x05c5,
+	0x05c7, 0x05c7,
+	0x0610, 0x061a,
+	0x064b, 0x065f,
+	0x0670, 0x0670,
+	0x06d6, 0x06dc,
+	0x06df, 0x06e4,
+	0x06e7, 0x06e8,
+	0x06ea, 0x06ed,
+	0x0711, 0x0711,
+	0x0730, 0x074a,
+	0x07a6, 0x07b0,
+	0x07eb, 0x07f3,
+	0x07fd, 0x07fd,
+	0x0816, 0x0819,
+	0x081b, 0x0823,
+	0x0825, 0x0827,
+	0x0829, 0x082d,
+	0x0859, 0x085b,
+	0x0898, 0x089f,
+	0x08ca, 0x08e1,
+	0x08e3, 0x0902,
+	0x093a, 0x093a,
+	0x093c, 0x093c,
+	0x0941, 0x0948,
+	0x094d, 0x094d,
+	0x0951, 0x0957,
+	0x0962, 0x0963,
+	0x0981, 0x0981,
+	0x09bc, 0x09bc,
+	0x09be, 0x09be,
+	0x09c1, 0x09c4,
+	0x09cd, 0x09cd,
+	0x09d7, 0x09d7,
+	0x09e2, 0x09e3,
+	0x09fe, 0x09fe,
+	0x0a01, 0x0a02,
+	0x0a3c, 0x0a3c,
+	0x0a41, 0x0a42,
+	0x0a47, 0x0a48,
+	0x0a4b, 0x0a4d,
+	0x0a51, 0x0a51,
+	0x0a70, 0x0a71,
+	0x0a75, 0x0a75,
+	0x0a81, 0x0a82,
+	0x0abc, 0x0abc,
+	0x0ac1, 0x0ac5,
+	0x0ac7, 0x0ac8,
+	0x0acd, 0x0acd,
+	0x0ae2, 0x0ae3,
+	0x0afa, 0x0aff,
+	0x0b01, 0x0b01,
+	0x0b3c, 0x0b3c,
+	0x0b3e, 0x0b3f,
+	0x0b41, 0x0b44,
+	0x0b4d, 0x0b4d,
+	0x0b55, 0x0b57,
+	0x0b62, 0x0b63,
+	0x0b82, 0x0b82,
+	0x0bbe, 0x0bbe,
+	0x0bc0, 0x0bc0,
+	0x0bcd, 0x0bcd,
+	0x0bd7, 0x0bd7,
+	0x0c00, 0x0c00,
+	0x0c04, 0x0c04,
+	0x0c3c, 0x0c3c,
+	0x0c3e, 0x0c40,
+	0x0c46, 0x0c48,
+	0x0c4a, 0x0c4d,
+	0x0c55, 0x0c56,
+	0x0c62, 0x0c63,
+	0x0c81, 0x0c81,
+	0x0cbc, 0x0cbc,
+	0x0cbf, 0x0cbf,
+	0x0cc2, 0x0cc2,
+	0x0cc6, 0x0cc6,
+	0x0ccc, 0x0ccd,
+	0x0cd5, 0x0cd6,
+	0x0ce2, 0x0ce3,
+	0x0d00, 0x0d01,
+	0x0d3b, 0x0d3c,
+	0x0d3e, 0x0d3e,
+	0x0d41, 0x0d44,
+	0x0d4d, 0x0d4d,
+	0x0d57, 0x0d57,
+	0x0d62, 0x0d63,
+	0x0d81, 0x0d81,
+	0x0dca, 0x0dca,
+	0x0dcf, 0x0dcf,
+	0x0dd2, 0x0dd4,
+	0x0dd6, 0x0dd6,
+	0x0ddf, 0x0ddf,
+	0x0e31, 0x0e31,
+	0x0e34, 0x0e3a,
+	0x0e47, 0x0e4e,
+	0x0eb1, 0x0eb1,
+	0x0eb4, 0x0ebc,
+	0x0ec8, 0x0ece,
+	0x0f18, 0x0f19,
+	0x0f35, 0x0f35,
+	0x0f37, 0x0f37,
+	0x0f39, 0x0f39,
+	0x0f71, 0x0f7e,
+	0x0f80, 0x0f84,
+	0x0f86, 0x0f87,
+	0x0f8d, 0x0f97,
+	0x0f99, 0x0fbc,
+	0x0fc6, 0x0fc6,
+	0x102d, 0x1030,
+	0x1032, 0x1037,
+	0x1039, 0x103a,
+	0x103d, 0x103e,
+	0x1058, 0x1059,
+	0x105e, 0x1060,
+	0x1071, 0x1074,
+	0x1082, 0x1082,
+	0x1085, 0x1086,
+	0x108d, 0x108d,
+	0x109d, 0x109d,
+	0x135d, 0x135f,
+	0x1712, 0x1714,
+	0x1732, 0x1733,
+	0x1752, 0x1753,
+	0x1772, 0x1773,
+	0x17b4, 0x17b5,
+	0x17b7, 0x17bd,
+	0x17c6, 0x17c6,
+	0x17c9, 0x17d3,
+	0x17dd, 0x17dd,
+	0x180b, 0x180d,
+	0x180f, 0x180f,
+	0x1885, 0x1886,
+	0x18a9, 0x18a9,
+	0x1920, 0x1922,
+	0x1927, 0x1928,
+	0x1932, 0x1932,
+	0x1939, 0x193b,
+	0x1a17, 0x1a18,
+	0x1a1b, 0x1a1b,
+	0x1a56, 0x1a56,
+	0x1a58, 0x1a5e,
+	0x1a60, 0x1a60,
+	0x1a62, 0x1a62,
+	0x1a65, 0x1a6c,
+	0x1a73, 0x1a7c,
+	0x1a7f, 0x1a7f,
+	0x1ab0, 0x1ace,
+	0x1b00, 0x1b03,
+	0x1b34, 0x1b3a,
+	0x1b3c, 0x1b3c,
+	0x1b42, 0x1b42,
+	0x1b6b, 0x1b73,
+	0x1b80, 0x1b81,
+	0x1ba2, 0x1ba5,
+	0x1ba8, 0x1ba9,
+	0x1bab, 0x1bad,
+	0x1be6, 0x1be6,
+	0x1be8, 0x1be9,
+	0x1bed, 0x1bed,
+	0x1bef, 0x1bf1,
+	0x1c2c, 0x1c33,
+	0x1c36, 0x1c37,
+	0x1cd0, 0x1cd2,
+	0x1cd4, 0x1ce0,
+	0x1ce2, 0x1ce8,
+	0x1ced, 0x1ced,
+	0x1cf4, 0x1cf4,
+	0x1cf8, 0x1cf9,
+	0x1dc0, 0x1dff,
+	0x200c, 0x200c,
+	0x20d0, 0x20f0,
+	0x2cef, 0x2cf1,
+	0x2d7f, 0x2d7f,
+	0x2de0, 0x2dff,
+	0x302a, 0x302f,
 	0x3099, 0x309a,
 	0xa66f, 0xa672,
 	0xa674, 0xa67d,
@@ -34443,6 +37880,7 @@ static const OnigCodePoint CR_Grapheme_Cluster_Break_Extend[] = {
 	0xa806, 0xa806,
 	0xa80b, 0xa80b,
 	0xa825, 0xa826,
+	0xa82c, 0xa82c,
 	0xa8c4, 0xa8c5,
 	0xa8e0, 0xa8f1,
 	0xa8ff, 0xa8ff,
@@ -34483,12 +37921,18 @@ static const OnigCodePoint CR_Grapheme_Cluster_Break_Extend[] = {
 	0x10a3f, 0x10a3f,
 	0x10ae5, 0x10ae6,
 	0x10d24, 0x10d27,
+	0x10eab, 0x10eac,
+	0x10efd, 0x10eff,
 	0x10f46, 0x10f50,
+	0x10f82, 0x10f85,
 	0x11001, 0x11001,
 	0x11038, 0x11046,
+	0x11070, 0x11070,
+	0x11073, 0x11074,
 	0x1107f, 0x11081,
 	0x110b3, 0x110b6,
 	0x110b9, 0x110ba,
+	0x110c2, 0x110c2,
 	0x11100, 0x11102,
 	0x11127, 0x1112b,
 	0x1112d, 0x11134,
@@ -34496,10 +37940,12 @@ static const OnigCodePoint CR_Grapheme_Cluster_Break_Extend[] = {
 	0x11180, 0x11181,
 	0x111b6, 0x111be,
 	0x111c9, 0x111cc,
+	0x111cf, 0x111cf,
 	0x1122f, 0x11231,
 	0x11234, 0x11234,
 	0x11236, 0x11237,
 	0x1123e, 0x1123e,
+	0x11241, 0x11241,
 	0x112df, 0x112df,
 	0x112e3, 0x112ea,
 	0x11300, 0x11301,
@@ -34536,6 +37982,10 @@ static const OnigCodePoint CR_Grapheme_Cluster_Break_Extend[] = {
 	0x11727, 0x1172b,
 	0x1182f, 0x11837,
 	0x11839, 0x1183a,
+	0x11930, 0x11930,
+	0x1193b, 0x1193c,
+	0x1193e, 0x1193e,
+	0x11943, 0x11943,
 	0x119d4, 0x119d7,
 	0x119da, 0x119db,
 	0x119e0, 0x119e0,
@@ -34563,11 +38013,20 @@ static const OnigCodePoint CR_Grapheme_Cluster_Break_Extend[] = {
 	0x11d95, 0x11d95,
 	0x11d97, 0x11d97,
 	0x11ef3, 0x11ef4,
+	0x11f00, 0x11f01,
+	0x11f36, 0x11f3a,
+	0x11f40, 0x11f40,
+	0x11f42, 0x11f42,
+	0x13440, 0x13440,
+	0x13447, 0x13455,
 	0x16af0, 0x16af4,
 	0x16b30, 0x16b36,
 	0x16f4f, 0x16f4f,
 	0x16f8f, 0x16f92,
+	0x16fe4, 0x16fe4,
 	0x1bc9d, 0x1bc9e,
+	0x1cf00, 0x1cf2d,
+	0x1cf30, 0x1cf46,
 	0x1d165, 0x1d165,
 	0x1d167, 0x1d169,
 	0x1d16e, 0x1d172,
@@ -34586,8 +38045,11 @@ static const OnigCodePoint CR_Grapheme_Cluster_Break_Extend[] = {
 	0x1e01b, 0x1e021,
 	0x1e023, 0x1e024,
 	0x1e026, 0x1e02a,
+	0x1e08f, 0x1e08f,
 	0x1e130, 0x1e136,
+	0x1e2ae, 0x1e2ae,
 	0x1e2ec, 0x1e2ef,
+	0x1e4ec, 0x1e4ef,
 	0x1e8d0, 0x1e8d6,
 	0x1e944, 0x1e94a,
 	0x1f3fb, 0x1f3ff,
@@ -34600,7 +38062,7 @@ static const OnigCodePoint CR_Grapheme_Cluster_Break_Extend[] = {
 
 /* 'Grapheme_Cluster_Break_SpacingMark': Grapheme_Cluster_Break=SpacingMark */
 static const OnigCodePoint CR_Grapheme_Cluster_Break_SpacingMark[] = {
-	152,
+	165,
 	0x0903, 0x0903,
 	0x093b, 0x093b,
 	0x093e, 0x0940,
@@ -34632,6 +38094,7 @@ static const OnigCodePoint CR_Grapheme_Cluster_Break_SpacingMark[] = {
 	0x0cc3, 0x0cc4,
 	0x0cc7, 0x0cc8,
 	0x0cca, 0x0ccb,
+	0x0cf3, 0x0cf3,
 	0x0d02, 0x0d03,
 	0x0d3f, 0x0d40,
 	0x0d46, 0x0d48,
@@ -34648,6 +38111,8 @@ static const OnigCodePoint CR_Grapheme_Cluster_Break_SpacingMark[] = {
 	0x103b, 0x103c,
 	0x1056, 0x1057,
 	0x1084, 0x1084,
+	0x1715, 0x1715,
+	0x1734, 0x1734,
 	0x17b6, 0x17b6,
 	0x17be, 0x17c5,
 	0x17c7, 0x17c8,
@@ -34704,6 +38169,7 @@ static const OnigCodePoint CR_Grapheme_Cluster_Break_SpacingMark[] = {
 	0x11182, 0x11182,
 	0x111b3, 0x111b5,
 	0x111bf, 0x111c0,
+	0x111ce, 0x111ce,
 	0x1122c, 0x1122e,
 	0x11232, 0x11233,
 	0x11235, 0x11235,
@@ -34731,10 +38197,14 @@ static const OnigCodePoint CR_Grapheme_Cluster_Break_SpacingMark[] = {
 	0x116ac, 0x116ac,
 	0x116ae, 0x116af,
 	0x116b6, 0x116b6,
-	0x11720, 0x11721,
 	0x11726, 0x11726,
 	0x1182c, 0x1182e,
 	0x11838, 0x11838,
+	0x11931, 0x11935,
+	0x11937, 0x11938,
+	0x1193d, 0x1193d,
+	0x11940, 0x11940,
+	0x11942, 0x11942,
 	0x119d1, 0x119d3,
 	0x119dc, 0x119df,
 	0x119e4, 0x119e4,
@@ -34750,7 +38220,12 @@ static const OnigCodePoint CR_Grapheme_Cluster_Break_SpacingMark[] = {
 	0x11d93, 0x11d94,
 	0x11d96, 0x11d96,
 	0x11ef5, 0x11ef6,
+	0x11f03, 0x11f03,
+	0x11f34, 0x11f35,
+	0x11f3e, 0x11f3f,
+	0x11f41, 0x11f41,
 	0x16f51, 0x16f87,
+	0x16ff0, 0x16ff1,
 	0x1d166, 0x1d166,
 	0x1d16d, 0x1d16d,
 }; /* CR_Grapheme_Cluster_Break_SpacingMark */
@@ -35707,6 +39182,12 @@ static const OnigCodePoint CR_In_Syriac_Supplement[] = {
 	0x0860, 0x086f,
 }; /* CR_In_Syriac_Supplement */
 
+/* 'In_Arabic_Extended_B': Block */
+static const OnigCodePoint CR_In_Arabic_Extended_B[] = {
+	1,
+	0x0870, 0x089f,
+}; /* CR_In_Arabic_Extended_B */
+
 /* 'In_Arabic_Extended_A': Block */
 static const OnigCodePoint CR_In_Arabic_Extended_A[] = {
 	1,
@@ -36314,7 +39795,10 @@ static const OnigCodePoint CR_In_Yi_Radicals[] = {
 }; /* CR_In_Yi_Radicals */
 
 /* 'In_Lisu': Block */
-#define CR_In_Lisu CR_Lisu
+static const OnigCodePoint CR_In_Lisu[] = {
+	1,
+	0xa4d0, 0xa4ff,
+}; /* CR_In_Lisu */
 
 /* 'In_Vai': Block */
 static const OnigCodePoint CR_In_Vai[] = {
@@ -36670,12 +40154,24 @@ static const OnigCodePoint CR_In_Caucasian_Albanian[] = {
 	0x10530, 0x1056f,
 }; /* CR_In_Caucasian_Albanian */
 
+/* 'In_Vithkuqi': Block */
+static const OnigCodePoint CR_In_Vithkuqi[] = {
+	1,
+	0x10570, 0x105bf,
+}; /* CR_In_Vithkuqi */
+
 /* 'In_Linear_A': Block */
 static const OnigCodePoint CR_In_Linear_A[] = {
 	1,
 	0x10600, 0x1077f,
 }; /* CR_In_Linear_A */
 
+/* 'In_Latin_Extended_F': Block */
+static const OnigCodePoint CR_In_Latin_Extended_F[] = {
+	1,
+	0x10780, 0x107bf,
+}; /* CR_In_Latin_Extended_F */
+
 /* 'In_Cypriot_Syllabary': Block */
 static const OnigCodePoint CR_In_Cypriot_Syllabary[] = {
 	1,
@@ -36790,6 +40286,18 @@ static const OnigCodePoint CR_In_Rumi_Numeral_Symbols[] = {
 	0x10e60, 0x10e7f,
 }; /* CR_In_Rumi_Numeral_Symbols */
 
+/* 'In_Yezidi': Block */
+static const OnigCodePoint CR_In_Yezidi[] = {
+	1,
+	0x10e80, 0x10ebf,
+}; /* CR_In_Yezidi */
+
+/* 'In_Arabic_Extended_C': Block */
+static const OnigCodePoint CR_In_Arabic_Extended_C[] = {
+	1,
+	0x10ec0, 0x10eff,
+}; /* CR_In_Arabic_Extended_C */
+
 /* 'In_Old_Sogdian': Block */
 static const OnigCodePoint CR_In_Old_Sogdian[] = {
 	1,
@@ -36802,6 +40310,18 @@ static const OnigCodePoint CR_In_Sogdian[] = {
 	0x10f30, 0x10f6f,
 }; /* CR_In_Sogdian */
 
+/* 'In_Old_Uyghur': Block */
+static const OnigCodePoint CR_In_Old_Uyghur[] = {
+	1,
+	0x10f70, 0x10faf,
+}; /* CR_In_Old_Uyghur */
+
+/* 'In_Chorasmian': Block */
+static const OnigCodePoint CR_In_Chorasmian[] = {
+	1,
+	0x10fb0, 0x10fdf,
+}; /* CR_In_Chorasmian */
+
 /* 'In_Elymaic': Block */
 static const OnigCodePoint CR_In_Elymaic[] = {
 	1,
@@ -36839,10 +40359,7 @@ static const OnigCodePoint CR_In_Mahajani[] = {
 }; /* CR_In_Mahajani */
 
 /* 'In_Sharada': Block */
-static const OnigCodePoint CR_In_Sharada[] = {
-	1,
-	0x11180, 0x111df,
-}; /* CR_In_Sharada */
+#define CR_In_Sharada CR_Sharada
 
 /* 'In_Sinhala_Archaic_Numbers': Block */
 static const OnigCodePoint CR_In_Sinhala_Archaic_Numbers[] = {
@@ -36913,7 +40430,7 @@ static const OnigCodePoint CR_In_Takri[] = {
 /* 'In_Ahom': Block */
 static const OnigCodePoint CR_In_Ahom[] = {
 	1,
-	0x11700, 0x1173f,
+	0x11700, 0x1174f,
 }; /* CR_In_Ahom */
 
 /* 'In_Dogra': Block */
@@ -36928,6 +40445,12 @@ static const OnigCodePoint CR_In_Warang_Citi[] = {
 	0x118a0, 0x118ff,
 }; /* CR_In_Warang_Citi */
 
+/* 'In_Dives_Akuru': Block */
+static const OnigCodePoint CR_In_Dives_Akuru[] = {
+	1,
+	0x11900, 0x1195f,
+}; /* CR_In_Dives_Akuru */
+
 /* 'In_Nandinagari': Block */
 static const OnigCodePoint CR_In_Nandinagari[] = {
 	1,
@@ -36946,12 +40469,24 @@ static const OnigCodePoint CR_In_Soyombo[] = {
 	0x11a50, 0x11aaf,
 }; /* CR_In_Soyombo */
 
+/* 'In_Unified_Canadian_Aboriginal_Syllabics_Extended_A': Block */
+static const OnigCodePoint CR_In_Unified_Canadian_Aboriginal_Syllabics_Extended_A[] = {
+	1,
+	0x11ab0, 0x11abf,
+}; /* CR_In_Unified_Canadian_Aboriginal_Syllabics_Extended_A */
+
 /* 'In_Pau_Cin_Hau': Block */
 static const OnigCodePoint CR_In_Pau_Cin_Hau[] = {
 	1,
 	0x11ac0, 0x11aff,
 }; /* CR_In_Pau_Cin_Hau */
 
+/* 'In_Devanagari_Extended_A': Block */
+static const OnigCodePoint CR_In_Devanagari_Extended_A[] = {
+	1,
+	0x11b00, 0x11b5f,
+}; /* CR_In_Devanagari_Extended_A */
+
 /* 'In_Bhaiksuki': Block */
 static const OnigCodePoint CR_In_Bhaiksuki[] = {
 	1,
@@ -36982,6 +40517,18 @@ static const OnigCodePoint CR_In_Makasar[] = {
 	0x11ee0, 0x11eff,
 }; /* CR_In_Makasar */
 
+/* 'In_Kawi': Block */
+static const OnigCodePoint CR_In_Kawi[] = {
+	1,
+	0x11f00, 0x11f5f,
+}; /* CR_In_Kawi */
+
+/* 'In_Lisu_Supplement': Block */
+static const OnigCodePoint CR_In_Lisu_Supplement[] = {
+	1,
+	0x11fb0, 0x11fbf,
+}; /* CR_In_Lisu_Supplement */
+
 /* 'In_Tamil_Supplement': Block */
 static const OnigCodePoint CR_In_Tamil_Supplement[] = {
 	1,
@@ -37006,6 +40553,12 @@ static const OnigCodePoint CR_In_Early_Dynastic_Cuneiform[] = {
 	0x12480, 0x1254f,
 }; /* CR_In_Early_Dynastic_Cuneiform */
 
+/* 'In_Cypro_Minoan': Block */
+static const OnigCodePoint CR_In_Cypro_Minoan[] = {
+	1,
+	0x12f90, 0x12fff,
+}; /* CR_In_Cypro_Minoan */
+
 /* 'In_Egyptian_Hieroglyphs': Block */
 static const OnigCodePoint CR_In_Egyptian_Hieroglyphs[] = {
 	1,
@@ -37015,7 +40568,7 @@ static const OnigCodePoint CR_In_Egyptian_Hieroglyphs[] = {
 /* 'In_Egyptian_Hieroglyph_Format_Controls': Block */
 static const OnigCodePoint CR_In_Egyptian_Hieroglyph_Format_Controls[] = {
 	1,
-	0x13430, 0x1343f,
+	0x13430, 0x1345f,
 }; /* CR_In_Egyptian_Hieroglyph_Format_Controls */
 
 /* 'In_Anatolian_Hieroglyphs': Block */
@@ -37036,6 +40589,12 @@ static const OnigCodePoint CR_In_Mro[] = {
 	0x16a40, 0x16a6f,
 }; /* CR_In_Mro */
 
+/* 'In_Tangsa': Block */
+static const OnigCodePoint CR_In_Tangsa[] = {
+	1,
+	0x16a70, 0x16acf,
+}; /* CR_In_Tangsa */
+
 /* 'In_Bassa_Vah': Block */
 static const OnigCodePoint CR_In_Bassa_Vah[] = {
 	1,
@@ -37078,6 +40637,24 @@ static const OnigCodePoint CR_In_Tangut_Components[] = {
 	0x18800, 0x18aff,
 }; /* CR_In_Tangut_Components */
 
+/* 'In_Khitan_Small_Script': Block */
+static const OnigCodePoint CR_In_Khitan_Small_Script[] = {
+	1,
+	0x18b00, 0x18cff,
+}; /* CR_In_Khitan_Small_Script */
+
+/* 'In_Tangut_Supplement': Block */
+static const OnigCodePoint CR_In_Tangut_Supplement[] = {
+	1,
+	0x18d00, 0x18d7f,
+}; /* CR_In_Tangut_Supplement */
+
+/* 'In_Kana_Extended_B': Block */
+static const OnigCodePoint CR_In_Kana_Extended_B[] = {
+	1,
+	0x1aff0, 0x1afff,
+}; /* CR_In_Kana_Extended_B */
+
 /* 'In_Kana_Supplement': Block */
 static const OnigCodePoint CR_In_Kana_Supplement[] = {
 	1,
@@ -37114,6 +40691,12 @@ static const OnigCodePoint CR_In_Shorthand_Format_Controls[] = {
 	0x1bca0, 0x1bcaf,
 }; /* CR_In_Shorthand_Format_Controls */
 
+/* 'In_Znamenny_Musical_Notation': Block */
+static const OnigCodePoint CR_In_Znamenny_Musical_Notation[] = {
+	1,
+	0x1cf00, 0x1cfcf,
+}; /* CR_In_Znamenny_Musical_Notation */
+
 /* 'In_Byzantine_Musical_Symbols': Block */
 static const OnigCodePoint CR_In_Byzantine_Musical_Symbols[] = {
 	1,
@@ -37132,6 +40715,12 @@ static const OnigCodePoint CR_In_Ancient_Greek_Musical_Notation[] = {
 	0x1d200, 0x1d24f,
 }; /* CR_In_Ancient_Greek_Musical_Notation */
 
+/* 'In_Kaktovik_Numerals': Block */
+static const OnigCodePoint CR_In_Kaktovik_Numerals[] = {
+	1,
+	0x1d2c0, 0x1d2df,
+}; /* CR_In_Kaktovik_Numerals */
+
 /* 'In_Mayan_Numerals': Block */
 static const OnigCodePoint CR_In_Mayan_Numerals[] = {
 	1,
@@ -37162,24 +40751,54 @@ static const OnigCodePoint CR_In_Sutton_SignWriting[] = {
 	0x1d800, 0x1daaf,
 }; /* CR_In_Sutton_SignWriting */
 
+/* 'In_Latin_Extended_G': Block */
+static const OnigCodePoint CR_In_Latin_Extended_G[] = {
+	1,
+	0x1df00, 0x1dfff,
+}; /* CR_In_Latin_Extended_G */
+
 /* 'In_Glagolitic_Supplement': Block */
 static const OnigCodePoint CR_In_Glagolitic_Supplement[] = {
 	1,
 	0x1e000, 0x1e02f,
 }; /* CR_In_Glagolitic_Supplement */
 
+/* 'In_Cyrillic_Extended_D': Block */
+static const OnigCodePoint CR_In_Cyrillic_Extended_D[] = {
+	1,
+	0x1e030, 0x1e08f,
+}; /* CR_In_Cyrillic_Extended_D */
+
 /* 'In_Nyiakeng_Puachue_Hmong': Block */
 static const OnigCodePoint CR_In_Nyiakeng_Puachue_Hmong[] = {
 	1,
 	0x1e100, 0x1e14f,
 }; /* CR_In_Nyiakeng_Puachue_Hmong */
 
+/* 'In_Toto': Block */
+static const OnigCodePoint CR_In_Toto[] = {
+	1,
+	0x1e290, 0x1e2bf,
+}; /* CR_In_Toto */
+
 /* 'In_Wancho': Block */
 static const OnigCodePoint CR_In_Wancho[] = {
 	1,
 	0x1e2c0, 0x1e2ff,
 }; /* CR_In_Wancho */
 
+/* 'In_Nag_Mundari': Block */
+static const OnigCodePoint CR_In_Nag_Mundari[] = {
+	1,
+	0x1e4d0, 0x1e4ff,
+}; /* CR_In_Nag_Mundari */
+
+/* 'In_Ethiopic_Extended_B': Block */
+static const OnigCodePoint CR_In_Ethiopic_Extended_B[] = {
+	1,
+	0x1e7e0, 0x1e7ff,
+}; /* CR_In_Ethiopic_Extended_B */
+
 /* 'In_Mende_Kikakui': Block */
 static const OnigCodePoint CR_In_Mende_Kikakui[] = {
 	1,
@@ -37300,6 +40919,12 @@ static const OnigCodePoint CR_In_Symbols_and_Pictographs_Extended_A[] = {
 	0x1fa70, 0x1faff,
 }; /* CR_In_Symbols_and_Pictographs_Extended_A */
 
+/* 'In_Symbols_for_Legacy_Computing': Block */
+static const OnigCodePoint CR_In_Symbols_for_Legacy_Computing[] = {
+	1,
+	0x1fb00, 0x1fbff,
+}; /* CR_In_Symbols_for_Legacy_Computing */
+
 /* 'In_CJK_Unified_Ideographs_Extension_B': Block */
 static const OnigCodePoint CR_In_CJK_Unified_Ideographs_Extension_B[] = {
 	1,
@@ -37336,6 +40961,18 @@ static const OnigCodePoint CR_In_CJK_Compatibility_Ideographs_Supplement[] = {
 	0x2f800, 0x2fa1f,
 }; /* CR_In_CJK_Compatibility_Ideographs_Supplement */
 
+/* 'In_CJK_Unified_Ideographs_Extension_G': Block */
+static const OnigCodePoint CR_In_CJK_Unified_Ideographs_Extension_G[] = {
+	1,
+	0x30000, 0x3134f,
+}; /* CR_In_CJK_Unified_Ideographs_Extension_G */
+
+/* 'In_CJK_Unified_Ideographs_Extension_H': Block */
+static const OnigCodePoint CR_In_CJK_Unified_Ideographs_Extension_H[] = {
+	1,
+	0x31350, 0x323af,
+}; /* CR_In_CJK_Unified_Ideographs_Extension_H */
+
 /* 'In_Tags': Block */
 static const OnigCodePoint CR_In_Tags[] = {
 	1,
@@ -37362,58 +40999,56 @@ static const OnigCodePoint CR_In_Supplementary_Private_Use_Area_B[] = {
 
 /* 'In_No_Block': Block */
 static const OnigCodePoint CR_In_No_Block[] = {
-	53,
-	0x0870, 0x089f,
+	51,
 	0x2fe0, 0x2fef,
 	0x10200, 0x1027f,
 	0x103e0, 0x103ff,
-	0x10570, 0x105ff,
-	0x10780, 0x107ff,
+	0x105c0, 0x105ff,
+	0x107c0, 0x107ff,
 	0x108b0, 0x108df,
 	0x10940, 0x1097f,
 	0x10aa0, 0x10abf,
 	0x10bb0, 0x10bff,
 	0x10c50, 0x10c7f,
 	0x10d40, 0x10e5f,
-	0x10e80, 0x10eff,
-	0x10f70, 0x10fdf,
 	0x11250, 0x1127f,
 	0x11380, 0x113ff,
 	0x114e0, 0x1157f,
 	0x116d0, 0x116ff,
-	0x11740, 0x117ff,
+	0x11750, 0x117ff,
 	0x11850, 0x1189f,
-	0x11900, 0x1199f,
-	0x11ab0, 0x11abf,
-	0x11b00, 0x11bff,
+	0x11960, 0x1199f,
+	0x11b60, 0x11bff,
 	0x11cc0, 0x11cff,
 	0x11db0, 0x11edf,
-	0x11f00, 0x11fbf,
-	0x12550, 0x12fff,
-	0x13440, 0x143ff,
+	0x11f60, 0x11faf,
+	0x12550, 0x12f8f,
+	0x13460, 0x143ff,
 	0x14680, 0x167ff,
-	0x16a70, 0x16acf,
 	0x16b90, 0x16e3f,
 	0x16ea0, 0x16eff,
 	0x16fa0, 0x16fdf,
-	0x18b00, 0x1afff,
+	0x18d80, 0x1afef,
 	0x1b300, 0x1bbff,
-	0x1bcb0, 0x1cfff,
-	0x1d250, 0x1d2df,
+	0x1bcb0, 0x1ceff,
+	0x1cfd0, 0x1cfff,
+	0x1d250, 0x1d2bf,
 	0x1d380, 0x1d3ff,
-	0x1dab0, 0x1dfff,
-	0x1e030, 0x1e0ff,
-	0x1e150, 0x1e2bf,
-	0x1e300, 0x1e7ff,
+	0x1dab0, 0x1deff,
+	0x1e090, 0x1e0ff,
+	0x1e150, 0x1e28f,
+	0x1e300, 0x1e4cf,
+	0x1e500, 0x1e7df,
 	0x1e8e0, 0x1e8ff,
 	0x1e960, 0x1ec6f,
 	0x1ecc0, 0x1ecff,
 	0x1ed50, 0x1edff,
 	0x1ef00, 0x1efff,
-	0x1fb00, 0x1ffff,
+	0x1fc00, 0x1ffff,
 	0x2a6e0, 0x2a6ff,
 	0x2ebf0, 0x2f7ff,
-	0x2fa20, 0xdffff,
+	0x2fa20, 0x2ffff,
+	0x323b0, 0xdffff,
 	0xe0080, 0xe00ff,
 	0xe01f0, 0xeffff,
 }; /* CR_In_No_Block */
@@ -37648,6 +41283,17 @@ static const OnigCodePoint* const CodeRanges[] = {
   CR_Nandinagari,
   CR_Nyiakeng_Puachue_Hmong,
   CR_Wancho,
+  CR_Chorasmian,
+  CR_Dives_Akuru,
+  CR_Khitan_Small_Script,
+  CR_Yezidi,
+  CR_Cypro_Minoan,
+  CR_Old_Uyghur,
+  CR_Tangsa,
+  CR_Toto,
+  CR_Vithkuqi,
+  CR_Kawi,
+  CR_Nag_Mundari,
   CR_White_Space,
   CR_Bidi_Control,
   CR_Join_Control,
@@ -37712,6 +41358,9 @@ static const OnigCodePoint* const CodeRanges[] = {
   CR_Age_11_0,
   CR_Age_12_0,
   CR_Age_12_1,
+  CR_Age_13_0,
+  CR_Age_14_0,
+  CR_Age_15_0,
 #endif /* USE_UNICODE_AGE_PROPERTIES */
   CR_Grapheme_Cluster_Break_Prepend,
   CR_Grapheme_Cluster_Break_CR,
@@ -37746,6 +41395,7 @@ static const OnigCodePoint* const CodeRanges[] = {
   CR_In_Samaritan,
   CR_In_Mandaic,
   CR_In_Syriac_Supplement,
+  CR_In_Arabic_Extended_B,
   CR_In_Arabic_Extended_A,
   CR_In_Devanagari,
   CR_In_Bengali,
@@ -37909,7 +41559,9 @@ static const OnigCodePoint* const CodeRanges[] = {
   CR_In_Osage,
   CR_In_Elbasan,
   CR_In_Caucasian_Albanian,
+  CR_In_Vithkuqi,
   CR_In_Linear_A,
+  CR_In_Latin_Extended_F,
   CR_In_Cypriot_Syllabary,
   CR_In_Imperial_Aramaic,
   CR_In_Palmyrene,
@@ -37931,8 +41583,12 @@ static const OnigCodePoint* const CodeRanges[] = {
   CR_In_Old_Hungarian,
   CR_In_Hanifi_Rohingya,
   CR_In_Rumi_Numeral_Symbols,
+  CR_In_Yezidi,
+  CR_In_Arabic_Extended_C,
   CR_In_Old_Sogdian,
   CR_In_Sogdian,
+  CR_In_Old_Uyghur,
+  CR_In_Chorasmian,
   CR_In_Elymaic,
   CR_In_Brahmi,
   CR_In_Kaithi,
@@ -37954,24 +41610,31 @@ static const OnigCodePoint* const CodeRanges[] = {
   CR_In_Ahom,
   CR_In_Dogra,
   CR_In_Warang_Citi,
+  CR_In_Dives_Akuru,
   CR_In_Nandinagari,
   CR_In_Zanabazar_Square,
   CR_In_Soyombo,
+  CR_In_Unified_Canadian_Aboriginal_Syllabics_Extended_A,
   CR_In_Pau_Cin_Hau,
+  CR_In_Devanagari_Extended_A,
   CR_In_Bhaiksuki,
   CR_In_Marchen,
   CR_In_Masaram_Gondi,
   CR_In_Gunjala_Gondi,
   CR_In_Makasar,
+  CR_In_Kawi,
+  CR_In_Lisu_Supplement,
   CR_In_Tamil_Supplement,
   CR_In_Cuneiform,
   CR_In_Cuneiform_Numbers_and_Punctuation,
   CR_In_Early_Dynastic_Cuneiform,
+  CR_In_Cypro_Minoan,
   CR_In_Egyptian_Hieroglyphs,
   CR_In_Egyptian_Hieroglyph_Format_Controls,
   CR_In_Anatolian_Hieroglyphs,
   CR_In_Bamum_Supplement,
   CR_In_Mro,
+  CR_In_Tangsa,
   CR_In_Bassa_Vah,
   CR_In_Pahawh_Hmong,
   CR_In_Medefaidrin,
@@ -37979,23 +41642,33 @@ static const OnigCodePoint* const CodeRanges[] = {
   CR_In_Ideographic_Symbols_and_Punctuation,
   CR_In_Tangut,
   CR_In_Tangut_Components,
+  CR_In_Khitan_Small_Script,
+  CR_In_Tangut_Supplement,
+  CR_In_Kana_Extended_B,
   CR_In_Kana_Supplement,
   CR_In_Kana_Extended_A,
   CR_In_Small_Kana_Extension,
   CR_In_Nushu,
   CR_In_Duployan,
   CR_In_Shorthand_Format_Controls,
+  CR_In_Znamenny_Musical_Notation,
   CR_In_Byzantine_Musical_Symbols,
   CR_In_Musical_Symbols,
   CR_In_Ancient_Greek_Musical_Notation,
+  CR_In_Kaktovik_Numerals,
   CR_In_Mayan_Numerals,
   CR_In_Tai_Xuan_Jing_Symbols,
   CR_In_Counting_Rod_Numerals,
   CR_In_Mathematical_Alphanumeric_Symbols,
   CR_In_Sutton_SignWriting,
+  CR_In_Latin_Extended_G,
   CR_In_Glagolitic_Supplement,
+  CR_In_Cyrillic_Extended_D,
   CR_In_Nyiakeng_Puachue_Hmong,
+  CR_In_Toto,
   CR_In_Wancho,
+  CR_In_Nag_Mundari,
+  CR_In_Ethiopic_Extended_B,
   CR_In_Mende_Kikakui,
   CR_In_Adlam,
   CR_In_Indic_Siyaq_Numbers,
@@ -38016,12 +41689,15 @@ static const OnigCodePoint* const CodeRanges[] = {
   CR_In_Supplemental_Symbols_and_Pictographs,
   CR_In_Chess_Symbols,
   CR_In_Symbols_and_Pictographs_Extended_A,
+  CR_In_Symbols_for_Legacy_Computing,
   CR_In_CJK_Unified_Ideographs_Extension_B,
   CR_In_CJK_Unified_Ideographs_Extension_C,
   CR_In_CJK_Unified_Ideographs_Extension_D,
   CR_In_CJK_Unified_Ideographs_Extension_E,
   CR_In_CJK_Unified_Ideographs_Extension_F,
   CR_In_CJK_Compatibility_Ideographs_Supplement,
+  CR_In_CJK_Unified_Ideographs_Extension_G,
+  CR_In_CJK_Unified_Ideographs_Extension_H,
   CR_In_Tags,
   CR_In_Variation_Selectors_Supplement,
   CR_In_Supplementary_Private_Use_Area_A,
@@ -38046,12 +41722,12 @@ static const struct uniname2ctype_struct *uniname2ctype_p(const char *, size_t);
 /* maximum key range = 15, duplicates = 0 */
 #else /* USE_UNICODE_PROPERTIES */
 #ifndef USE_UNICODE_AGE_PROPERTIES
-#define TOTAL_KEYWORDS 814
+#define TOTAL_KEYWORDS 866
 #else /* USE_UNICODE_AGE_PROPERTIES */
-#define TOTAL_KEYWORDS 836
+#define TOTAL_KEYWORDS 891
 #endif /* USE_UNICODE_AGE_PROPERTIES */
 #define MIN_WORD_LENGTH 1
-#define MAX_WORD_LENGTH 44
+#define MAX_WORD_LENGTH 45
 #define MIN_HASH_VALUE 11
 #define MAX_HASH_VALUE 6098
 /* maximum key range = 6088, duplicates = 0 */
@@ -38096,16 +41772,16 @@ uniname2ctype_hash (register const char *str, register size_t len)
       6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099,
       6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099,
 #else /* USE_UNICODE_AGE_PROPERTIES */
-      6099, 6099, 6099, 6099, 6099, 6099,   17, 6099,    3,    1,
-         4,   13,    3,   22,    9,   16,   12,    5, 6099, 6099,
+      6099, 6099, 6099, 6099, 6099, 6099,   12, 6099,    3,    1,
+         4,    8,   32,   26,   14,   17,   10,    7, 6099, 6099,
 #endif /* USE_UNICODE_AGE_PROPERTIES */
       6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099,
       6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099,
       6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099, 6099,
       6099, 6099, 6099, 6099, 6099, 6099, 6099,    1, 1425,  113,
-       437,   37, 1023, 1071, 1051,    4, 1492,    9,  500,   88,
-         8,   18, 1371,  797,   54,  203,  310,  619, 1608,  603,
-       364, 1438,   20,    1,    3, 6099, 6099, 6099, 6099, 6099
+       437,   37, 1086, 1071, 1051,    4, 1984,    9,  500,   88,
+         8,   18, 1371, 1287,   54,  203,  310,  619, 1958,  603,
+       275, 1624,   44,    1,   22, 6099, 6099, 6099, 6099, 6099
 #endif /* USE_UNICODE_PROPERTIES */
     };
 #ifndef USE_UNICODE_PROPERTIES
@@ -38172,7 +41848,6 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str11[sizeof("yi")];
     char uniname2ctype_pool_str17[sizeof("yiii")];
     char uniname2ctype_pool_str22[sizeof("lana")];
-    char uniname2ctype_pool_str24[sizeof("z")];
     char uniname2ctype_pool_str25[sizeof("lina")];
     char uniname2ctype_pool_str33[sizeof("maka")];
     char uniname2ctype_pool_str35[sizeof("mani")];
@@ -38186,11 +41861,12 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str55[sizeof("cn")];
     char uniname2ctype_pool_str64[sizeof("pi")];
     char uniname2ctype_pool_str66[sizeof("innko")];
-    char uniname2ctype_pool_str67[sizeof("zzzz")];
+    char uniname2ctype_pool_str67[sizeof("z")];
     char uniname2ctype_pool_str71[sizeof("gran")];
     char uniname2ctype_pool_str75[sizeof("co")];
     char uniname2ctype_pool_str83[sizeof("lineara")];
     char uniname2ctype_pool_str86[sizeof("mark")];
+    char uniname2ctype_pool_str90[sizeof("yezi")];
     char uniname2ctype_pool_str92[sizeof("po")];
     char uniname2ctype_pool_str94[sizeof("me")];
     char uniname2ctype_pool_str100[sizeof("cari")];
@@ -38217,6 +41893,7 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str151[sizeof("c")];
     char uniname2ctype_pool_str152[sizeof("mandaic")];
     char uniname2ctype_pool_str153[sizeof("meeteimayek")];
+    char uniname2ctype_pool_str158[sizeof("zzzz")];
     char uniname2ctype_pool_str161[sizeof("inarmenian")];
     char uniname2ctype_pool_str177[sizeof("inmyanmar")];
     char uniname2ctype_pool_str178[sizeof("inmakasar")];
@@ -38230,6 +41907,7 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str213[sizeof("qaai")];
     char uniname2ctype_pool_str218[sizeof("inahom")];
     char uniname2ctype_pool_str226[sizeof("merc")];
+    char uniname2ctype_pool_str230[sizeof("inchorasmian")];
     char uniname2ctype_pool_str231[sizeof("combiningmark")];
     char uniname2ctype_pool_str236[sizeof("lc")];
     char uniname2ctype_pool_str237[sizeof("perm")];
@@ -38248,6 +41926,8 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str282[sizeof("pc")];
     char uniname2ctype_pool_str283[sizeof("armenian")];
     char uniname2ctype_pool_str285[sizeof("insharada")];
+    char uniname2ctype_pool_str287[sizeof("vai")];
+    char uniname2ctype_pool_str288[sizeof("vaii")];
     char uniname2ctype_pool_str289[sizeof("inmarchen")];
     char uniname2ctype_pool_str293[sizeof("makasar")];
     char uniname2ctype_pool_str297[sizeof("masaramgondi")];
@@ -38267,19 +41947,17 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str346[sizeof("pcm")];
     char uniname2ctype_pool_str348[sizeof("inkatakana")];
     char uniname2ctype_pool_str352[sizeof("inkaithi")];
-    char uniname2ctype_pool_str357[sizeof("inzanabazarsquare")];
     char uniname2ctype_pool_str362[sizeof("inscriptionalparthian")];
     char uniname2ctype_pool_str366[sizeof("initialpunctuation")];
     char uniname2ctype_pool_str373[sizeof("mtei")];
-    char uniname2ctype_pool_str376[sizeof("vai")];
-    char uniname2ctype_pool_str377[sizeof("vaii")];
+    char uniname2ctype_pool_str381[sizeof("inzanabazarsquare")];
     char uniname2ctype_pool_str386[sizeof("inkhmersymbols")];
     char uniname2ctype_pool_str399[sizeof("insyriac")];
     char uniname2ctype_pool_str401[sizeof("intakri")];
     char uniname2ctype_pool_str404[sizeof("arabic")];
-    char uniname2ctype_pool_str411[sizeof("zs")];
     char uniname2ctype_pool_str418[sizeof("katakana")];
     char uniname2ctype_pool_str426[sizeof("prti")];
+    char uniname2ctype_pool_str430[sizeof("zs")];
     char uniname2ctype_pool_str442[sizeof("ascii")];
     char uniname2ctype_pool_str445[sizeof("cs")];
     char uniname2ctype_pool_str462[sizeof("ps")];
@@ -38298,19 +41976,19 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str509[sizeof("l")];
     char uniname2ctype_pool_str511[sizeof("inmeeteimayek")];
     char uniname2ctype_pool_str520[sizeof("inideographicdescriptioncharacters")];
-    char uniname2ctype_pool_str535[sizeof("xidcontinue")];
+    char uniname2ctype_pool_str533[sizeof("yezidi")];
     char uniname2ctype_pool_str538[sizeof("knda")];
     char uniname2ctype_pool_str541[sizeof("innandinagari")];
     char uniname2ctype_pool_str543[sizeof("kannada")];
     char uniname2ctype_pool_str556[sizeof("inmodi")];
     char uniname2ctype_pool_str558[sizeof("inlao")];
+    char uniname2ctype_pool_str559[sizeof("xidcontinue")];
     char uniname2ctype_pool_str560[sizeof("inoldnortharabian")];
     char uniname2ctype_pool_str565[sizeof("intransportandmapsymbols")];
     char uniname2ctype_pool_str566[sizeof("letternumber")];
     char uniname2ctype_pool_str568[sizeof("gothic")];
     char uniname2ctype_pool_str572[sizeof("inlineara")];
     char uniname2ctype_pool_str577[sizeof("inmendekikakui")];
-    char uniname2ctype_pool_str578[sizeof("xidc")];
     char uniname2ctype_pool_str579[sizeof("mongolian")];
     char uniname2ctype_pool_str582[sizeof("inmiscellaneousmathematicalsymbolsa")];
     char uniname2ctype_pool_str583[sizeof("inspecials")];
@@ -38319,9 +41997,11 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str596[sizeof("inemoticons")];
     char uniname2ctype_pool_str597[sizeof("kali")];
     char uniname2ctype_pool_str600[sizeof("inolditalic")];
+    char uniname2ctype_pool_str602[sizeof("xidc")];
     char uniname2ctype_pool_str604[sizeof("inmedefaidrin")];
     char uniname2ctype_pool_str605[sizeof("inchesssymbols")];
     char uniname2ctype_pool_str608[sizeof("incjkcompatibilityideographssupplement")];
+    char uniname2ctype_pool_str609[sizeof("kits")];
     char uniname2ctype_pool_str614[sizeof("inadlam")];
     char uniname2ctype_pool_str624[sizeof("psalterpahlavi")];
     char uniname2ctype_pool_str625[sizeof("incommonindicnumberforms")];
@@ -38329,18 +42009,22 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str636[sizeof("innewa")];
     char uniname2ctype_pool_str639[sizeof("sk")];
     char uniname2ctype_pool_str642[sizeof("control")];
+    char uniname2ctype_pool_str643[sizeof("inkawi")];
     char uniname2ctype_pool_str645[sizeof("inancientsymbols")];
     char uniname2ctype_pool_str647[sizeof("palm")];
     char uniname2ctype_pool_str650[sizeof("inlycian")];
     char uniname2ctype_pool_str657[sizeof("so")];
     char uniname2ctype_pool_str660[sizeof("patternwhitespace")];
-    char uniname2ctype_pool_str668[sizeof("xids")];
     char uniname2ctype_pool_str672[sizeof("inmandaic")];
     char uniname2ctype_pool_str675[sizeof("idc")];
     char uniname2ctype_pool_str678[sizeof("meroiticcursive")];
+    char uniname2ctype_pool_str679[sizeof("intoto")];
+    char uniname2ctype_pool_str683[sizeof("vs")];
+    char uniname2ctype_pool_str692[sizeof("xids")];
     char uniname2ctype_pool_str695[sizeof("inwarangciti")];
     char uniname2ctype_pool_str696[sizeof("sora")];
     char uniname2ctype_pool_str697[sizeof("inopticalcharacterrecognition")];
+    char uniname2ctype_pool_str700[sizeof("kawi")];
     char uniname2ctype_pool_str703[sizeof("inoldsogdian")];
     char uniname2ctype_pool_str705[sizeof("inmalayalam")];
     char uniname2ctype_pool_str707[sizeof("bamum")];
@@ -38350,6 +42034,7 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str737[sizeof("print")];
     char uniname2ctype_pool_str738[sizeof("intaitham")];
     char uniname2ctype_pool_str742[sizeof("lower")];
+    char uniname2ctype_pool_str745[sizeof("patternsyntax")];
     char uniname2ctype_pool_str753[sizeof("joinc")];
     char uniname2ctype_pool_str755[sizeof("inoldsoutharabian")];
     char uniname2ctype_pool_str760[sizeof("incjkstrokes")];
@@ -38357,7 +42042,6 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str766[sizeof("samr")];
     char uniname2ctype_pool_str767[sizeof("inwancho")];
     char uniname2ctype_pool_str771[sizeof("batak")];
-    char uniname2ctype_pool_str772[sizeof("vs")];
     char uniname2ctype_pool_str776[sizeof("patws")];
     char uniname2ctype_pool_str783[sizeof("samaritan")];
     char uniname2ctype_pool_str787[sizeof("idsbinaryoperator")];
@@ -38366,6 +42050,7 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str797[sizeof("sm")];
     char uniname2ctype_pool_str799[sizeof("indominotiles")];
     char uniname2ctype_pool_str802[sizeof("alnum")];
+    char uniname2ctype_pool_str803[sizeof("inznamennymusicalnotation")];
     char uniname2ctype_pool_str809[sizeof("insylotinagri")];
     char uniname2ctype_pool_str814[sizeof("inugaritic")];
     char uniname2ctype_pool_str818[sizeof("incontrolpictures")];
@@ -38375,7 +42060,6 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str824[sizeof("ital")];
     char uniname2ctype_pool_str825[sizeof("inmodifiertoneletters")];
     char uniname2ctype_pool_str828[sizeof("inancientgreekmusicalnotation")];
-    char uniname2ctype_pool_str834[sizeof("patternsyntax")];
     char uniname2ctype_pool_str838[sizeof("lisu")];
     char uniname2ctype_pool_str842[sizeof("lowercase")];
     char uniname2ctype_pool_str845[sizeof("cwcm")];
@@ -38383,7 +42067,6 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str848[sizeof("bass")];
     char uniname2ctype_pool_str855[sizeof("ids")];
     char uniname2ctype_pool_str857[sizeof("inlatinextendeda")];
-    char uniname2ctype_pool_str862[sizeof("oriya")];
     char uniname2ctype_pool_str875[sizeof("intaile")];
     char uniname2ctype_pool_str886[sizeof("inmiscellaneoussymbols")];
     char uniname2ctype_pool_str895[sizeof("inmiscellaneoussymbolsandarrows")];
@@ -38391,7 +42074,9 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str900[sizeof("inmiscellaneoussymbolsandpictographs")];
     char uniname2ctype_pool_str906[sizeof("inoldturkic")];
     char uniname2ctype_pool_str907[sizeof("insaurashtra")];
+    char uniname2ctype_pool_str920[sizeof("incyrillicextendeda")];
     char uniname2ctype_pool_str924[sizeof("idcontinue")];
+    char uniname2ctype_pool_str925[sizeof("intaixuanjingsymbols")];
     char uniname2ctype_pool_str926[sizeof("intamil")];
     char uniname2ctype_pool_str928[sizeof("inmultani")];
     char uniname2ctype_pool_str929[sizeof("inlatinextendede")];
@@ -38403,41 +42088,39 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str986[sizeof("innewtailue")];
     char uniname2ctype_pool_str994[sizeof("bengali")];
     char uniname2ctype_pool_str995[sizeof("runr")];
-    char uniname2ctype_pool_str1005[sizeof("zl")];
-    char uniname2ctype_pool_str1009[sizeof("incyrillicextendeda")];
     char uniname2ctype_pool_str1010[sizeof("ll")];
     char uniname2ctype_pool_str1013[sizeof("indeseret")];
-    char uniname2ctype_pool_str1014[sizeof("intaixuanjingsymbols")];
     char uniname2ctype_pool_str1015[sizeof("inancientgreeknumbers")];
     char uniname2ctype_pool_str1021[sizeof("idstart")];
+    char uniname2ctype_pool_str1024[sizeof("zl")];
     char uniname2ctype_pool_str1025[sizeof("inmeeteimayekextensions")];
     char uniname2ctype_pool_str1028[sizeof("balinese")];
-    char uniname2ctype_pool_str1032[sizeof("dia")];
-    char uniname2ctype_pool_str1033[sizeof("di")];
+    char uniname2ctype_pool_str1032[sizeof("incyrillicextendedc")];
     char uniname2ctype_pool_str1035[sizeof("inspacingmodifierletters")];
     char uniname2ctype_pool_str1036[sizeof("inearlydynasticcuneiform")];
     char uniname2ctype_pool_str1049[sizeof("plrd")];
     char uniname2ctype_pool_str1067[sizeof("canadianaboriginal")];
-    char uniname2ctype_pool_str1070[sizeof("zinh")];
     char uniname2ctype_pool_str1072[sizeof("sind")];
-    char uniname2ctype_pool_str1080[sizeof("osage")];
     char uniname2ctype_pool_str1081[sizeof("inlatinextendedc")];
     char uniname2ctype_pool_str1085[sizeof("uideo")];
     char uniname2ctype_pool_str1087[sizeof("incountingrodnumerals")];
-    char uniname2ctype_pool_str1090[sizeof("xidstart")];
-    char uniname2ctype_pool_str1091[sizeof("xdigit")];
-    char uniname2ctype_pool_str1093[sizeof("osma")];
+    char uniname2ctype_pool_str1089[sizeof("zinh")];
+    char uniname2ctype_pool_str1095[sizeof("dia")];
+    char uniname2ctype_pool_str1096[sizeof("di")];
     char uniname2ctype_pool_str1097[sizeof("inkhudawadi")];
     char uniname2ctype_pool_str1102[sizeof("inhanifirohingya")];
+    char uniname2ctype_pool_str1104[sizeof("diak")];
     char uniname2ctype_pool_str1105[sizeof("gong")];
     char uniname2ctype_pool_str1107[sizeof("ingrantha")];
     char uniname2ctype_pool_str1109[sizeof("bidic")];
+    char uniname2ctype_pool_str1114[sizeof("xidstart")];
+    char uniname2ctype_pool_str1115[sizeof("xdigit")];
     char uniname2ctype_pool_str1119[sizeof("mong")];
     char uniname2ctype_pool_str1120[sizeof("cased")];
-    char uniname2ctype_pool_str1121[sizeof("incyrillicextendedc")];
     char uniname2ctype_pool_str1134[sizeof("inhiragana")];
     char uniname2ctype_pool_str1140[sizeof("sinhala")];
     char uniname2ctype_pool_str1142[sizeof("adlm")];
+    char uniname2ctype_pool_str1145[sizeof("xsux")];
     char uniname2ctype_pool_str1146[sizeof("glagolitic")];
     char uniname2ctype_pool_str1147[sizeof("sterm")];
     char uniname2ctype_pool_str1149[sizeof("bamu")];
@@ -38445,6 +42128,7 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str1151[sizeof("inosage")];
     char uniname2ctype_pool_str1152[sizeof("gunjalagondi")];
     char uniname2ctype_pool_str1153[sizeof("phoenician")];
+    char uniname2ctype_pool_str1156[sizeof("inolduyghur")];
     char uniname2ctype_pool_str1157[sizeof("multani")];
     char uniname2ctype_pool_str1158[sizeof("kaithi")];
     char uniname2ctype_pool_str1164[sizeof("joincontrol")];
@@ -38461,17 +42145,20 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str1182[sizeof("inogham")];
     char uniname2ctype_pool_str1183[sizeof("cher")];
     char uniname2ctype_pool_str1185[sizeof("chakma")];
+    char uniname2ctype_pool_str1186[sizeof("inkaktoviknumerals")];
     char uniname2ctype_pool_str1190[sizeof("emoji")];
     char uniname2ctype_pool_str1191[sizeof("insiddham")];
     char uniname2ctype_pool_str1197[sizeof("cherokee")];
     char uniname2ctype_pool_str1198[sizeof("khar")];
     char uniname2ctype_pool_str1203[sizeof("inmongolian")];
+    char uniname2ctype_pool_str1204[sizeof("innagmundari")];
     char uniname2ctype_pool_str1207[sizeof("incherokeesupplement")];
-    char uniname2ctype_pool_str1208[sizeof("diacritic")];
     char uniname2ctype_pool_str1209[sizeof("manichaean")];
-    char uniname2ctype_pool_str1210[sizeof("xsux")];
     char uniname2ctype_pool_str1212[sizeof("inolchiki")];
+    char uniname2ctype_pool_str1223[sizeof("inkhitansmallscript")];
     char uniname2ctype_pool_str1227[sizeof("quotationmark")];
+    char uniname2ctype_pool_str1229[sizeof("vithkuqi")];
+    char uniname2ctype_pool_str1230[sizeof("variationselector")];
     char uniname2ctype_pool_str1231[sizeof("adlam")];
     char uniname2ctype_pool_str1232[sizeof("inethiopic")];
     char uniname2ctype_pool_str1233[sizeof("graphemebase")];
@@ -38480,21 +42167,25 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str1235[sizeof("age=12.1")];
     char uniname2ctype_pool_str1236[sizeof("age=10.0")];
     char uniname2ctype_pool_str1237[sizeof("age=12.0")];
+    char uniname2ctype_pool_str1241[sizeof("age=13.0")];
+    char uniname2ctype_pool_str1242[sizeof("age=1.1")];
 #endif /* USE_UNICODE_AGE_PROPERTIES */
     char uniname2ctype_pool_str1243[sizeof("casedletter")];
     char uniname2ctype_pool_str1244[sizeof("ingurmukhi")];
-    char uniname2ctype_pool_str1245[sizeof("odi")];
+#ifdef USE_UNICODE_AGE_PROPERTIES
+    char uniname2ctype_pool_str1245[sizeof("age=2.1")];
+#endif /* USE_UNICODE_AGE_PROPERTIES */
     char uniname2ctype_pool_str1246[sizeof("incjkunifiedideographsextensiona")];
 #ifdef USE_UNICODE_AGE_PROPERTIES
-    char uniname2ctype_pool_str1247[sizeof("age=1.1")];
+    char uniname2ctype_pool_str1247[sizeof("age=2.0")];
 #endif /* USE_UNICODE_AGE_PROPERTIES */
     char uniname2ctype_pool_str1248[sizeof("lu")];
 #ifdef USE_UNICODE_AGE_PROPERTIES
-    char uniname2ctype_pool_str1249[sizeof("age=4.1")];
-    char uniname2ctype_pool_str1250[sizeof("age=2.1")];
-    char uniname2ctype_pool_str1251[sizeof("age=4.0")];
-    char uniname2ctype_pool_str1252[sizeof("age=2.0")];
-    char uniname2ctype_pool_str1253[sizeof("age=9.0")];
+    char uniname2ctype_pool_str1249[sizeof("age=3.1")];
+    char uniname2ctype_pool_str1250[sizeof("age=9.0")];
+    char uniname2ctype_pool_str1251[sizeof("age=3.0")];
+    char uniname2ctype_pool_str1252[sizeof("age=3.2")];
+    char uniname2ctype_pool_str1253[sizeof("age=8.0")];
 #endif /* USE_UNICODE_AGE_PROPERTIES */
     char uniname2ctype_pool_str1254[sizeof("intamilsupplement")];
 #ifdef USE_UNICODE_AGE_PROPERTIES
@@ -38504,23 +42195,28 @@ struct uniname2ctype_pool_t
 #ifdef USE_UNICODE_AGE_PROPERTIES
     char uniname2ctype_pool_str1257[sizeof("age=6.0")];
     char uniname2ctype_pool_str1258[sizeof("age=6.2")];
-    char uniname2ctype_pool_str1259[sizeof("age=3.1")];
-    char uniname2ctype_pool_str1260[sizeof("age=8.0")];
-    char uniname2ctype_pool_str1261[sizeof("age=3.0")];
-    char uniname2ctype_pool_str1262[sizeof("age=3.2")];
+    char uniname2ctype_pool_str1259[sizeof("age=15.0")];
+    char uniname2ctype_pool_str1260[sizeof("age=7.0")];
+    char uniname2ctype_pool_str1262[sizeof("age=6.3")];
 #endif /* USE_UNICODE_AGE_PROPERTIES */
     char uniname2ctype_pool_str1263[sizeof("cwt")];
 #ifdef USE_UNICODE_AGE_PROPERTIES
-    char uniname2ctype_pool_str1264[sizeof("age=7.0")];
+    char uniname2ctype_pool_str1265[sizeof("age=14.0")];
 #endif /* USE_UNICODE_AGE_PROPERTIES */
     char uniname2ctype_pool_str1266[sizeof("unassigned")];
 #ifdef USE_UNICODE_AGE_PROPERTIES
-    char uniname2ctype_pool_str1267[sizeof("age=6.3")];
-    char uniname2ctype_pool_str1268[sizeof("age=5.1")];
-    char uniname2ctype_pool_str1270[sizeof("age=5.0")];
-    char uniname2ctype_pool_str1271[sizeof("age=5.2")];
+    char uniname2ctype_pool_str1267[sizeof("age=5.1")];
+    char uniname2ctype_pool_str1269[sizeof("age=5.0")];
+    char uniname2ctype_pool_str1270[sizeof("age=5.2")];
+#endif /* USE_UNICODE_AGE_PROPERTIES */
+    char uniname2ctype_pool_str1271[sizeof("diacritic")];
+#ifdef USE_UNICODE_AGE_PROPERTIES
+    char uniname2ctype_pool_str1273[sizeof("age=4.1")];
 #endif /* USE_UNICODE_AGE_PROPERTIES */
     char uniname2ctype_pool_str1274[sizeof("ahom")];
+#ifdef USE_UNICODE_AGE_PROPERTIES
+    char uniname2ctype_pool_str1275[sizeof("age=4.0")];
+#endif /* USE_UNICODE_AGE_PROPERTIES */
     char uniname2ctype_pool_str1282[sizeof("incjkunifiedideographsextensione")];
     char uniname2ctype_pool_str1285[sizeof("khmr")];
     char uniname2ctype_pool_str1289[sizeof("insinhala")];
@@ -38531,16 +42227,17 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str1306[sizeof("punct")];
     char uniname2ctype_pool_str1314[sizeof("paucinhau")];
     char uniname2ctype_pool_str1317[sizeof("gurmukhi")];
-    char uniname2ctype_pool_str1319[sizeof("variationselector")];
+    char uniname2ctype_pool_str1328[sizeof("chorasmian")];
     char uniname2ctype_pool_str1331[sizeof("logicalorderexception")];
     char uniname2ctype_pool_str1340[sizeof("khmer")];
     char uniname2ctype_pool_str1343[sizeof("limbu")];
+    char uniname2ctype_pool_str1349[sizeof("chrs")];
+    char uniname2ctype_pool_str1352[sizeof("oriya")];
     char uniname2ctype_pool_str1354[sizeof("inscriptionalpahlavi")];
-    char uniname2ctype_pool_str1355[sizeof("oidc")];
+    char uniname2ctype_pool_str1356[sizeof("incyrillicextendedd")];
     char uniname2ctype_pool_str1358[sizeof("incjkunifiedideographsextensionc")];
     char uniname2ctype_pool_str1360[sizeof("cntrl")];
     char uniname2ctype_pool_str1365[sizeof("inlatinextendedadditional")];
-    char uniname2ctype_pool_str1366[sizeof("decimalnumber")];
     char uniname2ctype_pool_str1367[sizeof("insorasompeng")];
     char uniname2ctype_pool_str1369[sizeof("radical")];
     char uniname2ctype_pool_str1373[sizeof("emojimodifier")];
@@ -38548,103 +42245,90 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str1380[sizeof("n")];
     char uniname2ctype_pool_str1384[sizeof("math")];
     char uniname2ctype_pool_str1387[sizeof("goth")];
+    char uniname2ctype_pool_str1392[sizeof("phnx")];
     char uniname2ctype_pool_str1400[sizeof("anatolianhieroglyphs")];
     char uniname2ctype_pool_str1401[sizeof("inenclosedalphanumerics")];
     char uniname2ctype_pool_str1407[sizeof("nandinagari")];
     char uniname2ctype_pool_str1409[sizeof("no")];
+    char uniname2ctype_pool_str1415[sizeof("intangsa")];
     char uniname2ctype_pool_str1419[sizeof("nko")];
     char uniname2ctype_pool_str1420[sizeof("nkoo")];
     char uniname2ctype_pool_str1422[sizeof("ingreekandcoptic")];
-    char uniname2ctype_pool_str1423[sizeof("olck")];
     char uniname2ctype_pool_str1426[sizeof("p")];
     char uniname2ctype_pool_str1428[sizeof("grantha")];
-    char uniname2ctype_pool_str1434[sizeof("olchiki")];
+    char uniname2ctype_pool_str1429[sizeof("decimalnumber")];
     char uniname2ctype_pool_str1438[sizeof("incjkunifiedideographs")];
-    char uniname2ctype_pool_str1441[sizeof("zanb")];
     char uniname2ctype_pool_str1442[sizeof("intirhuta")];
-    char uniname2ctype_pool_str1445[sizeof("oids")];
     char uniname2ctype_pool_str1448[sizeof("inhatran")];
     char uniname2ctype_pool_str1449[sizeof("linb")];
-    char uniname2ctype_pool_str1450[sizeof("xpeo")];
     char uniname2ctype_pool_str1451[sizeof("mult")];
     char uniname2ctype_pool_str1454[sizeof("saurashtra")];
     char uniname2ctype_pool_str1457[sizeof("kthi")];
+    char uniname2ctype_pool_str1460[sizeof("zanb")];
     char uniname2ctype_pool_str1462[sizeof("inbhaiksuki")];
-    char uniname2ctype_pool_str1466[sizeof("olower")];
     char uniname2ctype_pool_str1470[sizeof("innabataean")];
     char uniname2ctype_pool_str1471[sizeof("inphoenician")];
+    char uniname2ctype_pool_str1474[sizeof("xpeo")];
     char uniname2ctype_pool_str1475[sizeof("inkanbun")];
     char uniname2ctype_pool_str1476[sizeof("inmeroitichieroglyphs")];
-    char uniname2ctype_pool_str1478[sizeof("inkayahli")];
-    char uniname2ctype_pool_str1481[sizeof("phnx")];
-    char uniname2ctype_pool_str1485[sizeof("inoriya")];
+    char uniname2ctype_pool_str1480[sizeof("ahex")];
     char uniname2ctype_pool_str1489[sizeof("enclosingmark")];
     char uniname2ctype_pool_str1495[sizeof("sd")];
     char uniname2ctype_pool_str1497[sizeof("inelbasan")];
-    char uniname2ctype_pool_str1498[sizeof("wara")];
     char uniname2ctype_pool_str1499[sizeof("inenclosedideographicsupplement")];
     char uniname2ctype_pool_str1501[sizeof("sidd")];
     char uniname2ctype_pool_str1507[sizeof("linearb")];
-    char uniname2ctype_pool_str1509[sizeof("hani")];
-    char uniname2ctype_pool_str1512[sizeof("han")];
+    char uniname2ctype_pool_str1508[sizeof("cpmn")];
     char uniname2ctype_pool_str1517[sizeof("inenclosedalphanumericsupplement")];
-    char uniname2ctype_pool_str1519[sizeof("medf")];
     char uniname2ctype_pool_str1520[sizeof("bidicontrol")];
-    char uniname2ctype_pool_str1523[sizeof("hano")];
     char uniname2ctype_pool_str1524[sizeof("inphaistosdisc")];
     char uniname2ctype_pool_str1529[sizeof("limb")];
     char uniname2ctype_pool_str1531[sizeof("inkangxiradicals")];
     char uniname2ctype_pool_str1533[sizeof("lepc")];
-    char uniname2ctype_pool_str1535[sizeof("medefaidrin")];
     char uniname2ctype_pool_str1536[sizeof("braille")];
     char uniname2ctype_pool_str1537[sizeof("regionalindicator")];
     char uniname2ctype_pool_str1542[sizeof("inlowsurrogates")];
-    char uniname2ctype_pool_str1544[sizeof("inshorthandformatcontrols")];
     char uniname2ctype_pool_str1547[sizeof("brah")];
-    char uniname2ctype_pool_str1548[sizeof("inkhojki")];
     char uniname2ctype_pool_str1549[sizeof("inoldhungarian")];
-    char uniname2ctype_pool_str1552[sizeof("hanunoo")];
-    char uniname2ctype_pool_str1555[sizeof("hira")];
     char uniname2ctype_pool_str1557[sizeof("beng")];
     char uniname2ctype_pool_str1563[sizeof("emojimodifierbase")];
     char uniname2ctype_pool_str1565[sizeof("inarabic")];
-    char uniname2ctype_pool_str1567[sizeof("lyci")];
-    char uniname2ctype_pool_str1569[sizeof("ahex")];
+    char uniname2ctype_pool_str1570[sizeof("osage")];
     char uniname2ctype_pool_str1572[sizeof("inherited")];
+    char uniname2ctype_pool_str1577[sizeof("incyprominoan")];
     char uniname2ctype_pool_str1580[sizeof("glag")];
-    char uniname2ctype_pool_str1582[sizeof("lycian")];
+    char uniname2ctype_pool_str1582[sizeof("medf")];
+    char uniname2ctype_pool_str1583[sizeof("osma")];
     char uniname2ctype_pool_str1587[sizeof("indogra")];
-    char uniname2ctype_pool_str1594[sizeof("dsrt")];
     char uniname2ctype_pool_str1597[sizeof("arab")];
-    char uniname2ctype_pool_str1602[sizeof("mymr")];
-    char uniname2ctype_pool_str1607[sizeof("myanmar")];
+    char uniname2ctype_pool_str1598[sizeof("medefaidrin")];
+    char uniname2ctype_pool_str1607[sizeof("inshorthandformatcontrols")];
     char uniname2ctype_pool_str1613[sizeof("phli")];
     char uniname2ctype_pool_str1617[sizeof("inimperialaramaic")];
+    char uniname2ctype_pool_str1618[sizeof("emod")];
     char uniname2ctype_pool_str1622[sizeof("ingreekextended")];
     char uniname2ctype_pool_str1623[sizeof("inanatolianhieroglyphs")];
     char uniname2ctype_pool_str1629[sizeof("punctuation")];
-    char uniname2ctype_pool_str1631[sizeof("takri")];
     char uniname2ctype_pool_str1635[sizeof("graphemeextend")];
-    char uniname2ctype_pool_str1638[sizeof("invai")];
     char uniname2ctype_pool_str1643[sizeof("cwl")];
+    char uniname2ctype_pool_str1644[sizeof("vith")];
     char uniname2ctype_pool_str1654[sizeof("ingeometricshapes")];
     char uniname2ctype_pool_str1655[sizeof("emojicomponent")];
+    char uniname2ctype_pool_str1657[sizeof("dsrt")];
     char uniname2ctype_pool_str1662[sizeof("coptic")];
-    char uniname2ctype_pool_str1671[sizeof("deseret")];
+    char uniname2ctype_pool_str1664[sizeof("inkayahli")];
+    char uniname2ctype_pool_str1671[sizeof("inoriya")];
     char uniname2ctype_pool_str1675[sizeof("inarabicpresentationformsa")];
-    char uniname2ctype_pool_str1676[sizeof("takr")];
     char uniname2ctype_pool_str1677[sizeof("inbasiclatin")];
     char uniname2ctype_pool_str1682[sizeof("incjkunifiedideographsextensiond")];
+    char uniname2ctype_pool_str1684[sizeof("wara")];
     char uniname2ctype_pool_str1686[sizeof("sinh")];
     char uniname2ctype_pool_str1687[sizeof("sund")];
     char uniname2ctype_pool_str1691[sizeof("shavian")];
-    char uniname2ctype_pool_str1692[sizeof("taile")];
     char uniname2ctype_pool_str1699[sizeof("insundanesesupplement")];
-    char uniname2ctype_pool_str1702[sizeof("inelymaic")];
-    char uniname2ctype_pool_str1703[sizeof("insoyombo")];
+    char uniname2ctype_pool_str1701[sizeof("inyezidi")];
     char uniname2ctype_pool_str1704[sizeof("bhks")];
     char uniname2ctype_pool_str1714[sizeof("bhaiksuki")];
-    char uniname2ctype_pool_str1716[sizeof("incjkcompatibility")];
     char uniname2ctype_pool_str1722[sizeof("inhanunoo")];
     char uniname2ctype_pool_str1724[sizeof("intangut")];
     char uniname2ctype_pool_str1728[sizeof("sogdian")];
@@ -38653,371 +42337,424 @@ struct uniname2ctype_pool_t
     char uniname2ctype_pool_str1731[sizeof("insinhalaarchaicnumbers")];
     char uniname2ctype_pool_str1732[sizeof("ideographic")];
     char uniname2ctype_pool_str1733[sizeof("ugar")];
+    char uniname2ctype_pool_str1734[sizeof("deseret")];
+    char uniname2ctype_pool_str1735[sizeof("odi")];
     char uniname2ctype_pool_str1740[sizeof("copt")];
     char uniname2ctype_pool_str1742[sizeof("imperialaramaic")];
     char uniname2ctype_pool_str1745[sizeof("insogdian")];
     char uniname2ctype_pool_str1746[sizeof("indingbats")];
     char uniname2ctype_pool_str1750[sizeof("format")];
     char uniname2ctype_pool_str1752[sizeof("ininscriptionalpahlavi")];
+    char uniname2ctype_pool_str1753[sizeof("lyci")];
     char uniname2ctype_pool_str1757[sizeof("ininscriptionalparthian")];
     char uniname2ctype_pool_str1766[sizeof("grbase")];
+    char uniname2ctype_pool_str1768[sizeof("lycian")];
     char uniname2ctype_pool_str1769[sizeof("inbatak")];
     char uniname2ctype_pool_str1776[sizeof("cprt")];
-    char uniname2ctype_pool_str1780[sizeof("cwcf")];
-    char uniname2ctype_pool_str1788[sizeof("cuneiform")];
-    char uniname2ctype_pool_str1791[sizeof("term")];
+    char uniname2ctype_pool_str1781[sizeof("inunifiedcanadianaboriginalsyllabicsextendeda")];
+    char uniname2ctype_pool_str1788[sizeof("mymr")];
+    char uniname2ctype_pool_str1793[sizeof("myanmar")];
     char uniname2ctype_pool_str1806[sizeof("intibetan")];
     char uniname2ctype_pool_str1810[sizeof("intags")];
     char uniname2ctype_pool_str1811[sizeof("asciihexdigit")];
     char uniname2ctype_pool_str1813[sizeof("sentenceterminal")];
-    char uniname2ctype_pool_str1816[sizeof("inmayannumerals")];
     char uniname2ctype_pool_str1821[sizeof("nand")];
-    char uniname2ctype_pool_str1825[sizeof("patsyn")];
-    char uniname2ctype_pool_str1826[sizeof("hatran")];
     char uniname2ctype_pool_str1828[sizeof("inblockelements")];
     char uniname2ctype_pool_str1838[sizeof("inornamentaldingbats")];
+    char uniname2ctype_pool_str1841[sizeof("inethiopicextendeda")];
     char uniname2ctype_pool_str1842[sizeof("innumberforms")];
-    char uniname2ctype_pool_str1843[sizeof("oldpersian")];
-    char uniname2ctype_pool_str1846[sizeof("inshavian")];
+    char uniname2ctype_pool_str1843[sizeof("cwcf")];
+    char uniname2ctype_pool_str1845[sizeof("oidc")];
     char uniname2ctype_pool_str1848[sizeof("bopo")];
-    char uniname2ctype_pool_str1861[sizeof("hatr")];
+    char uniname2ctype_pool_str1851[sizeof("cuneiform")];
     char uniname2ctype_pool_str1866[sizeof("caseignorable")];
     char uniname2ctype_pool_str1871[sizeof("inoldpersian")];
-    char uniname2ctype_pool_str1878[sizeof("modifierletter")];
     char uniname2ctype_pool_str1881[sizeof("cwu")];
-    char uniname2ctype_pool_str1891[sizeof("lydi")];
-    char uniname2ctype_pool_str1892[sizeof("inbyzantinemusicalsymbols")];
+    char uniname2ctype_pool_str1888[sizeof("inelymaic")];
+    char uniname2ctype_pool_str1889[sizeof("insoyombo")];
     char uniname2ctype_pool_str1896[sizeof("ingeometricshapesextended")];
+    char uniname2ctype_pool_str1902[sizeof("incjkcompatibility")];
     char uniname2ctype_pool_str1904[sizeof("inmyanmarextendedb")];
     char uniname2ctype_pool_str1905[sizeof("innushu")];
-    char uniname2ctype_pool_str1906[sizeof("lydian")];
-    char uniname2ctype_pool_str1911[sizeof("inunifiedcanadianaboriginalsyllabics")];
-    char uniname2ctype_pool_str1915[sizeof("orkh")];
-    char uniname2ctype_pool_str1928[sizeof("inyiradicals")];
+    char uniname2ctype_pool_str1912[sizeof("inkanaextendedb")];
+    char uniname2ctype_pool_str1913[sizeof("olck")];
+    char uniname2ctype_pool_str1916[sizeof("inbyzantinemusicalsymbols")];
+    char uniname2ctype_pool_str1924[sizeof("olchiki")];
     char uniname2ctype_pool_str1929[sizeof("inkatakanaphoneticextensions")];
-    char uniname2ctype_pool_str1930[sizeof("inethiopicextendeda")];
     char uniname2ctype_pool_str1932[sizeof("incoptic")];
+    char uniname2ctype_pool_str1935[sizeof("oids")];
     char uniname2ctype_pool_str1936[sizeof("inarabicextendeda")];
-    char uniname2ctype_pool_str1947[sizeof("oldpermic")];
+    char uniname2ctype_pool_str1941[sizeof("modifierletter")];
     char uniname2ctype_pool_str1950[sizeof("incjksymbolsandpunctuation")];
-    char uniname2ctype_pool_str1951[sizeof("word")];
+    char uniname2ctype_pool_str1956[sizeof("olower")];
     char uniname2ctype_pool_str1958[sizeof("bopomofo")];
-    char uniname2ctype_pool_str1961[sizeof("ogam")];
     char uniname2ctype_pool_str1964[sizeof("inlisu")];
     char uniname2ctype_pool_str1967[sizeof("inoldpermic")];
     char uniname2ctype_pool_str1968[sizeof("innoblock")];
-    char uniname2ctype_pool_str1971[sizeof("taiviet")];
+    char uniname2ctype_pool_str1969[sizeof("ext")];
+    char uniname2ctype_pool_str1974[sizeof("inunifiedcanadianaboriginalsyllabics")];
+    char uniname2ctype_pool_str1981[sizeof("takri")];
     char uniname2ctype_pool_str1985[sizeof("inbraillepatterns")];
+    char uniname2ctype_pool_str1988[sizeof("invai")];
     char uniname2ctype_pool_str1991[sizeof("alpha")];
     char uniname2ctype_pool_str1993[sizeof("inbalinese")];
     char uniname2ctype_pool_str1994[sizeof("sorasompeng")];
     char uniname2ctype_pool_str1996[sizeof("closepunctuation")];
+    char uniname2ctype_pool_str2001[sizeof("hani")];
+    char uniname2ctype_pool_str2002[sizeof("inmayannumerals")];
+    char uniname2ctype_pool_str2004[sizeof("han")];
     char uniname2ctype_pool_str2006[sizeof("inmiscellaneousmathematicalsymbolsb")];
     char uniname2ctype_pool_str2010[sizeof("inlepcha")];
+    char uniname2ctype_pool_str2011[sizeof("patsyn")];
+    char uniname2ctype_pool_str2012[sizeof("inlisusupplement")];
     char uniname2ctype_pool_str2014[sizeof("insyriacsupplement")];
+    char uniname2ctype_pool_str2015[sizeof("hano")];
     char uniname2ctype_pool_str2016[sizeof("newa")];
     char uniname2ctype_pool_str2023[sizeof("spacingmark")];
     char uniname2ctype_pool_str2024[sizeof("inpalmyrene")];
-    char uniname2ctype_pool_str2033[sizeof("cyrl")];
+    char uniname2ctype_pool_str2026[sizeof("takr")];
+    char uniname2ctype_pool_str2033[sizeof("xposixpunct")];
+    char uniname2ctype_pool_str2040[sizeof("inkhojki")];
+    char uniname2ctype_pool_str2042[sizeof("taile")];
     char uniname2ctype_pool_str2043[sizeof("assigned")];
-    char uniname2ctype_pool_str2048[sizeof("mlym")];
-    char uniname2ctype_pool_str2055[sizeof("malayalam")];
-    char uniname2ctype_pool_str2058[sizeof("ext")];
+    char uniname2ctype_pool_str2044[sizeof("hanunoo")];
+    char uniname2ctype_pool_str2047[sizeof("hira")];
+    char uniname2ctype_pool_str2048[sizeof("inarabicextendedc")];
     char uniname2ctype_pool_str2062[sizeof("newtailue")];
     char uniname2ctype_pool_str2070[sizeof("space")];
     char uniname2ctype_pool_str2073[sizeof("intelugu")];
+    char uniname2ctype_pool_str2077[sizeof("lydi")];
     char uniname2ctype_pool_str2078[sizeof("idsb")];
-    char uniname2ctype_pool_str2083[sizeof("indevanagari")];
-    char uniname2ctype_pool_str2084[sizeof("avestan")];
-    char uniname2ctype_pool_str2085[sizeof("cf")];
-    char uniname2ctype_pool_str2093[sizeof("palmyrene")];
+    char uniname2ctype_pool_str2090[sizeof("extpict")];
+    char uniname2ctype_pool_str2092[sizeof("lydian")];
     char uniname2ctype_pool_str2095[sizeof("inethiopicsupplement")];
-    char uniname2ctype_pool_str2097[sizeof("soyo")];
-    char uniname2ctype_pool_str2098[sizeof("xposixpunct")];
-    char uniname2ctype_pool_str2102[sizeof("pf")];
     char uniname2ctype_pool_str2103[sizeof("sarb")];
-    char uniname2ctype_pool_str2109[sizeof("zanabazarsquare")];
     char uniname2ctype_pool_str2110[sizeof("ugaritic")];
-    char uniname2ctype_pool_str2112[sizeof("osge")];
-    char uniname2ctype_pool_str2114[sizeof("java")];
+    char uniname2ctype_pool_str2114[sizeof("inyiradicals")];
+    char uniname2ctype_pool_str2115[sizeof("inphoneticextensions")];
     char uniname2ctype_pool_str2117[sizeof("sharada")];
-    char uniname2ctype_pool_str2119[sizeof("dogra")];
+    char uniname2ctype_pool_str2128[sizeof("zanabazarsquare")];
     char uniname2ctype_pool_str2135[sizeof("bugi")];
-    char uniname2ctype_pool_str2137[sizeof("meroitichieroglyphs")];
+    char uniname2ctype_pool_str2137[sizeof("word")];
+    char uniname2ctype_pool_str2141[sizeof("term")];
     char uniname2ctype_pool_str2145[sizeof("separator")];
     char uniname2ctype_pool_str2146[sizeof("ingeorgiansupplement")];
     char uniname2ctype_pool_str2149[sizeof("sogd")];
-    char uniname2ctype_pool_str2150[sizeof("tale")];
-    char uniname2ctype_pool_str2153[sizeof("inunifiedcanadianaboriginalsyllabicsextended")];
-    char uniname2ctype_pool_str2161[sizeof("terminalpunctuation")];
+    char uniname2ctype_pool_str2163[sizeof("extender")];
     char uniname2ctype_pool_str2165[sizeof("shrd")];
     char uniname2ctype_pool_str2166[sizeof("graph")];
-    char uniname2ctype_pool_str2167[sizeof("olditalic")];
-    char uniname2ctype_pool_str2170[sizeof("dogr")];
-    char uniname2ctype_pool_str2173[sizeof("gujr")];
+    char uniname2ctype_pool_str2174[sizeof("tnsa")];
+    char uniname2ctype_pool_str2178[sizeof("tangsa")];
     char uniname2ctype_pool_str2181[sizeof("phag")];
-    char uniname2ctype_pool_str2182[sizeof("gujarati")];
+    char uniname2ctype_pool_str2182[sizeof("dogra")];
     char uniname2ctype_pool_str2195[sizeof("inhanguljamo")];
-    char uniname2ctype_pool_str2199[sizeof("javanese")];
-    char uniname2ctype_pool_str2201[sizeof("taml")];
-    char uniname2ctype_pool_str2204[sizeof("inphoneticextensions")];
+    char uniname2ctype_pool_str2196[sizeof("inshavian")];
     char uniname2ctype_pool_str2207[sizeof("siddham")];
+    char uniname2ctype_pool_str2211[sizeof("cf")];
+    char uniname2ctype_pool_str2216[sizeof("inunifiedcanadianaboriginalsyllabicsextended")];
     char uniname2ctype_pool_str2217[sizeof("buginese")];
     char uniname2ctype_pool_str2218[sizeof("inmongoliansupplement")];
-    char uniname2ctype_pool_str2222[sizeof("invariationselectors")];
+    char uniname2ctype_pool_str2219[sizeof("cyrl")];
     char uniname2ctype_pool_str2224[sizeof("inhanguljamoextendeda")];
-    char uniname2ctype_pool_str2225[sizeof("inverticalforms")];
-    char uniname2ctype_pool_str2228[sizeof("syrc")];
+    char uniname2ctype_pool_str2228[sizeof("pf")];
     char uniname2ctype_pool_str2229[sizeof("number")];
+    char uniname2ctype_pool_str2232[sizeof("inphoneticextensionssupplement")];
+    char uniname2ctype_pool_str2233[sizeof("dogr")];
+    char uniname2ctype_pool_str2234[sizeof("mlym")];
     char uniname2ctype_pool_str2235[sizeof("incopticepactnumbers")];
-    char uniname2ctype_pool_str2238[sizeof("avst")];
+    char uniname2ctype_pool_str2241[sizeof("malayalam")];
     char uniname2ctype_pool_str2244[sizeof("inbamum")];
     char uniname2ctype_pool_str2247[sizeof("nd")];
     char uniname2ctype_pool_str2248[sizeof("insuttonsignwriting")];
-    char uniname2ctype_pool_str2252[sizeof("extender")];
-    char uniname2ctype_pool_str2258[sizeof("intaiviet")];
-    char uniname2ctype_pool_str2260[sizeof("hex")];
-    char uniname2ctype_pool_str2268[sizeof("incjkunifiedideographsextensionf")];
-    char uniname2ctype_pool_str2271[sizeof("other")];
-    char uniname2ctype_pool_str2272[sizeof("otheridcontinue")];
+    char uniname2ctype_pool_str2276[sizeof("inethiopicextended")];
     char uniname2ctype_pool_str2278[sizeof("shaw")];
-    char uniname2ctype_pool_str2282[sizeof("dash")];
-    char uniname2ctype_pool_str2285[sizeof("othernumber")];
-    char uniname2ctype_pool_str2294[sizeof("orya")];
-    char uniname2ctype_pool_str2302[sizeof("invedicextensions")];
+    char uniname2ctype_pool_str2279[sizeof("palmyrene")];
+    char uniname2ctype_pool_str2283[sizeof("soyo")];
+    char uniname2ctype_pool_str2296[sizeof("incjkunifiedideographsextensionh")];
     char uniname2ctype_pool_str2305[sizeof("sgnw")];
+    char uniname2ctype_pool_str2308[sizeof("toto")];
     char uniname2ctype_pool_str2312[sizeof("caucasianalbanian")];
     char uniname2ctype_pool_str2315[sizeof("inmathematicalalphanumericsymbols")];
-    char uniname2ctype_pool_str2321[sizeof("inphoneticextensionssupplement")];
-    char uniname2ctype_pool_str2339[sizeof("invariationselectorssupplement")];
+    char uniname2ctype_pool_str2316[sizeof("incjkunifiedideographsextensiong")];
+    char uniname2ctype_pool_str2318[sizeof("hatran")];
+    char uniname2ctype_pool_str2321[sizeof("taiviet")];
+    char uniname2ctype_pool_str2323[sizeof("meroitichieroglyphs")];
+    char uniname2ctype_pool_str2327[sizeof("ingeorgianextended")];
+    char uniname2ctype_pool_str2331[sizeof("incjkunifiedideographsextensionf")];
+    char uniname2ctype_pool_str2333[sizeof("oldpersian")];
     char uniname2ctype_pool_str2343[sizeof("induployan")];
-    char uniname2ctype_pool_str2344[sizeof("syriac")];
-    char uniname2ctype_pool_str2357[sizeof("oalpha")];
+    char uniname2ctype_pool_str2344[sizeof("incyrillicextendedb")];
+    char uniname2ctype_pool_str2345[sizeof("dash")];
+    char uniname2ctype_pool_str2353[sizeof("hatr")];
     char uniname2ctype_pool_str2361[sizeof("innyiakengpuachuehmong")];
     char uniname2ctype_pool_str2364[sizeof("incombiningdiacriticalmarks")];
-    char uniname2ctype_pool_str2365[sizeof("inethiopicextended")];
     char uniname2ctype_pool_str2373[sizeof("nl")];
     char uniname2ctype_pool_str2374[sizeof("incombiningdiacriticalmarksforsymbols")];
     char uniname2ctype_pool_str2375[sizeof("khudawadi")];
-    char uniname2ctype_pool_str2378[sizeof("otheralphabetic")];
-    char uniname2ctype_pool_str2389[sizeof("oldhungarian")];
-    char uniname2ctype_pool_str2396[sizeof("incurrencysymbols")];
     char uniname2ctype_pool_str2397[sizeof("incjkradicalssupplement")];
     char uniname2ctype_pool_str2398[sizeof("inglagolitic")];
-    char uniname2ctype_pool_str2415[sizeof("intifinagh")];
-    char uniname2ctype_pool_str2416[sizeof("ingeorgianextended")];
+    char uniname2ctype_pool_str2405[sizeof("orkh")];
+    char uniname2ctype_pool_str2414[sizeof("syrc")];
     char uniname2ctype_pool_str2427[sizeof("surrogate")];
-    char uniname2ctype_pool_str2433[sizeof("incyrillicextendedb")];
+    char uniname2ctype_pool_str2433[sizeof("indevanagari")];
+    char uniname2ctype_pool_str2434[sizeof("avestan")];
+    char uniname2ctype_pool_str2437[sizeof("oldpermic")];
     char uniname2ctype_pool_str2440[sizeof("ethi")];
-    char uniname2ctype_pool_str2451[sizeof("titlecaseletter")];
+    char uniname2ctype_pool_str2451[sizeof("ogam")];
     char uniname2ctype_pool_str2454[sizeof("rohg")];
-    char uniname2ctype_pool_str2458[sizeof("inmeroiticcursive")];
     char uniname2ctype_pool_str2460[sizeof("idstrinaryoperator")];
+    char uniname2ctype_pool_str2464[sizeof("java")];
     char uniname2ctype_pool_str2470[sizeof("inphagspa")];
     char uniname2ctype_pool_str2475[sizeof("lepcha")];
+    char uniname2ctype_pool_str2476[sizeof("indevanagariextendeda")];
+    char uniname2ctype_pool_str2478[sizeof("intifinagh")];
     char uniname2ctype_pool_str2479[sizeof("intagalog")];
-    char uniname2ctype_pool_str2480[sizeof("mathsymbol")];
     char uniname2ctype_pool_str2481[sizeof("incombiningdiacriticalmarkssupplement")];
+    char uniname2ctype_pool_str2500[sizeof("tale")];
     char uniname2ctype_pool_str2506[sizeof("inbrahmi")];
+    char uniname2ctype_pool_str2511[sizeof("terminalpunctuation")];
     char uniname2ctype_pool_str2513[sizeof("insymbolsandpictographsextendeda")];
-    char uniname2ctype_pool_str2519[sizeof("inlinearbsyllabary")];
-    char uniname2ctype_pool_str2529[sizeof("oldturkic")];
+    char uniname2ctype_pool_str2530[sizeof("syriac")];
     char uniname2ctype_pool_str2534[sizeof("inbengali")];
-    char uniname2ctype_pool_str2540[sizeof("wancho")];
-    char uniname2ctype_pool_str2542[sizeof("osmanya")];
+    char uniname2ctype_pool_str2535[sizeof("nagm")];
+    char uniname2ctype_pool_str2545[sizeof("extendedpictographic")];
     char uniname2ctype_pool_str2548[sizeof("buhd")];
-    char uniname2ctype_pool_str2552[sizeof("insmallformvariants")];
-    char uniname2ctype_pool_str2561[sizeof("indevanagariextended")];
-    char uniname2ctype_pool_str2562[sizeof("softdotted")];
+    char uniname2ctype_pool_str2549[sizeof("javanese")];
+    char uniname2ctype_pool_str2551[sizeof("taml")];
     char uniname2ctype_pool_str2564[sizeof("inbuginese")];
-    char uniname2ctype_pool_str2566[sizeof("mahj")];
     char uniname2ctype_pool_str2567[sizeof("inlatin1supplement")];
     char uniname2ctype_pool_str2570[sizeof("ingothic")];
-    char uniname2ctype_pool_str2575[sizeof("mahajani")];
-    char uniname2ctype_pool_str2576[sizeof("hang")];
-    char uniname2ctype_pool_str2579[sizeof("sylo")];
-    char uniname2ctype_pool_str2586[sizeof("warangciti")];
-    char uniname2ctype_pool_str2595[sizeof("ingujarati")];
-    char uniname2ctype_pool_str2603[sizeof("tirhuta")];
+    char uniname2ctype_pool_str2572[sizeof("invariationselectors")];
+    char uniname2ctype_pool_str2574[sizeof("hex")];
+    char uniname2ctype_pool_str2575[sizeof("inverticalforms")];
+    char uniname2ctype_pool_str2576[sizeof("ebase")];
+    char uniname2ctype_pool_str2582[sizeof("incurrencysymbols")];
+    char uniname2ctype_pool_str2588[sizeof("avst")];
+    char uniname2ctype_pool_str2602[sizeof("osge")];
     char uniname2ctype_pool_str2606[sizeof("incombiningdiacriticalmarksextended")];
+    char uniname2ctype_pool_str2608[sizeof("intaiviet")];
     char uniname2ctype_pool_str2609[sizeof("spaceseparator")];
-    char uniname2ctype_pool_str2614[sizeof("ingunjalagondi")];
-    char uniname2ctype_pool_str2624[sizeof("wcho")];
-    char uniname2ctype_pool_str2631[sizeof("hiragana")];
-    char uniname2ctype_pool_str2634[sizeof("extendedpictographic")];
-    char uniname2ctype_pool_str2643[sizeof("inrejang")];
-    char uniname2ctype_pool_str2644[sizeof("inottomansiyaqnumbers")];
+    char uniname2ctype_pool_str2625[sizeof("softdotted")];
     char uniname2ctype_pool_str2648[sizeof("nchar")];
-    char uniname2ctype_pool_str2650[sizeof("cyrillic")];
-    char uniname2ctype_pool_str2653[sizeof("khoj")];
+    char uniname2ctype_pool_str2652[sizeof("invedicextensions")];
     char uniname2ctype_pool_str2656[sizeof("inlimbu")];
-    char uniname2ctype_pool_str2663[sizeof("hmng")];
-    char uniname2ctype_pool_str2665[sizeof("thaa")];
-    char uniname2ctype_pool_str2668[sizeof("thai")];
+    char uniname2ctype_pool_str2657[sizeof("olditalic")];
+    char uniname2ctype_pool_str2665[sizeof("gujr")];
+    char uniname2ctype_pool_str2666[sizeof("mathsymbol")];
     char uniname2ctype_pool_str2670[sizeof("incjkunifiedideographsextensionb")];
-    char uniname2ctype_pool_str2673[sizeof("deva")];
-    char uniname2ctype_pool_str2676[sizeof("thaana")];
+    char uniname2ctype_pool_str2674[sizeof("gujarati")];
     char uniname2ctype_pool_str2688[sizeof("phagspa")];
-    char uniname2ctype_pool_str2691[sizeof("devanagari")];
-    char uniname2ctype_pool_str2692[sizeof("tang")];
+    char uniname2ctype_pool_str2689[sizeof("invariationselectorssupplement")];
     char uniname2ctype_pool_str2694[sizeof("currencysymbol")];
-    char uniname2ctype_pool_str2698[sizeof("tagbanwa")];
-    char uniname2ctype_pool_str2701[sizeof("inenclosedcjklettersandmonths")];
-    char uniname2ctype_pool_str2702[sizeof("tamil")];
-    char uniname2ctype_pool_str2721[sizeof("tirh")];
-    char uniname2ctype_pool_str2723[sizeof("digit")];
-    char uniname2ctype_pool_str2732[sizeof("talu")];
-    char uniname2ctype_pool_str2747[sizeof("zp")];
+    char uniname2ctype_pool_str2705[sizeof("inlinearbsyllabary")];
+    char uniname2ctype_pool_str2726[sizeof("wancho")];
     char uniname2ctype_pool_str2750[sizeof("inpaucinhau")];
-    char uniname2ctype_pool_str2760[sizeof("taitham")];
-    char uniname2ctype_pool_str2764[sizeof("otherlowercase")];
-    char uniname2ctype_pool_str2768[sizeof("telu")];
+    char uniname2ctype_pool_str2761[sizeof("other")];
+    char uniname2ctype_pool_str2762[sizeof("otheridcontinue")];
+    char uniname2ctype_pool_str2765[sizeof("sylo")];
+    char uniname2ctype_pool_str2766[sizeof("zp")];
     char uniname2ctype_pool_str2769[sizeof("inaegeannumbers")];
-    char uniname2ctype_pool_str2777[sizeof("otherletter")];
-    char uniname2ctype_pool_str2780[sizeof("whitespace")];
+    char uniname2ctype_pool_str2772[sizeof("warangciti")];
+    char uniname2ctype_pool_str2775[sizeof("othernumber")];
+    char uniname2ctype_pool_str2786[sizeof("digit")];
     char uniname2ctype_pool_str2793[sizeof("nonspacingmark")];
+    char uniname2ctype_pool_str2801[sizeof("titlecaseletter")];
+    char uniname2ctype_pool_str2808[sizeof("inmeroiticcursive")];
+    char uniname2ctype_pool_str2810[sizeof("wcho")];
     char uniname2ctype_pool_str2816[sizeof("graphemeclusterbreak=spacingmark")];
     char uniname2ctype_pool_str2821[sizeof("inletterlikesymbols")];
+    char uniname2ctype_pool_str2830[sizeof("inottomansiyaqnumbers")];
     char uniname2ctype_pool_str2834[sizeof("intagbanwa")];
-    char uniname2ctype_pool_str2841[sizeof("oldsogdian")];
-    char uniname2ctype_pool_str2848[sizeof("otheridstart")];
+    char uniname2ctype_pool_str2836[sizeof("cyrillic")];
+    char uniname2ctype_pool_str2847[sizeof("oalpha")];
     char uniname2ctype_pool_str2852[sizeof("graphemeclusterbreak=cr")];
     char uniname2ctype_pool_str2855[sizeof("narb")];
     char uniname2ctype_pool_str2856[sizeof("changeswhencasemapped")];
     char uniname2ctype_pool_str2859[sizeof("inbopomofo")];
-    char uniname2ctype_pool_str2862[sizeof("tangut")];
     char uniname2ctype_pool_str2867[sizeof("graphemeclusterbreak=regionalindicator")];
+    char uniname2ctype_pool_str2868[sizeof("otheralphabetic")];
     char uniname2ctype_pool_str2871[sizeof("noncharactercodepoint")];
-    char uniname2ctype_pool_str2883[sizeof("otheruppercase")];
-    char uniname2ctype_pool_str2885[sizeof("rjng")];
-    char uniname2ctype_pool_str2886[sizeof("sylotinagri")];
+    char uniname2ctype_pool_str2879[sizeof("oldhungarian")];
+    char uniname2ctype_pool_str2886[sizeof("insymbolsforlegacycomputing")];
+    char uniname2ctype_pool_str2902[sizeof("insmallformvariants")];
     char uniname2ctype_pool_str2904[sizeof("inhangulsyllables")];
     char uniname2ctype_pool_str2905[sizeof("emojipresentation")];
-    char uniname2ctype_pool_str2906[sizeof("inindicsiyaqnumbers")];
+    char uniname2ctype_pool_str2907[sizeof("epres")];
     char uniname2ctype_pool_str2909[sizeof("inbassavah")];
-    char uniname2ctype_pool_str2912[sizeof("ogrext")];
-    char uniname2ctype_pool_str2926[sizeof("othersymbol")];
-    char uniname2ctype_pool_str2938[sizeof("oupper")];
+    char uniname2ctype_pool_str2911[sizeof("indevanagariextended")];
     char uniname2ctype_pool_str2941[sizeof("inbuhid")];
-    char uniname2ctype_pool_str2963[sizeof("hmnp")];
+    char uniname2ctype_pool_str2953[sizeof("tirhuta")];
     char uniname2ctype_pool_str2964[sizeof("inpsalterpahlavi")];
+    char uniname2ctype_pool_str2966[sizeof("whitespace")];
     char uniname2ctype_pool_str2967[sizeof("finalpunctuation")];
+    char uniname2ctype_pool_str2970[sizeof("orya")];
     char uniname2ctype_pool_str2980[sizeof("phlp")];
     char uniname2ctype_pool_str2984[sizeof("inbamumsupplement")];
     char uniname2ctype_pool_str2986[sizeof("buhid")];
     char uniname2ctype_pool_str2987[sizeof("paragraphseparator")];
     char uniname2ctype_pool_str2988[sizeof("inalphabeticpresentationforms")];
-    char uniname2ctype_pool_str2993[sizeof("omath")];
-    char uniname2ctype_pool_str3000[sizeof("any")];
+    char uniname2ctype_pool_str2997[sizeof("inlatinextendedg")];
     char uniname2ctype_pool_str3001[sizeof("elba")];
     char uniname2ctype_pool_str3002[sizeof("changeswhentitlecased")];
     char uniname2ctype_pool_str3005[sizeof("incombininghalfmarks")];
     char uniname2ctype_pool_str3006[sizeof("intangutcomponents")];
-    char uniname2ctype_pool_str3012[sizeof("hebr")];
-    char uniname2ctype_pool_str3028[sizeof("deprecated")];
+    char uniname2ctype_pool_str3015[sizeof("thaa")];
+    char uniname2ctype_pool_str3018[sizeof("thai")];
+    char uniname2ctype_pool_str3019[sizeof("oldturkic")];
+    char uniname2ctype_pool_str3026[sizeof("thaana")];
+    char uniname2ctype_pool_str3027[sizeof("inlatinextendedf")];
+    char uniname2ctype_pool_str3035[sizeof("ougr")];
+    char uniname2ctype_pool_str3042[sizeof("tang")];
     char uniname2ctype_pool_str3045[sizeof("inarabicmathematicalalphabeticsymbols")];
-    char uniname2ctype_pool_str3055[sizeof("inprivateusearea")];
-    char uniname2ctype_pool_str3089[sizeof("kayahli")];
-    char uniname2ctype_pool_str3098[sizeof("inplayingcards")];
+    char uniname2ctype_pool_str3048[sizeof("tagbanwa")];
+    char uniname2ctype_pool_str3052[sizeof("tamil")];
+    char uniname2ctype_pool_str3053[sizeof("khitansmallscript")];
+    char uniname2ctype_pool_str3058[sizeof("mahj")];
+    char uniname2ctype_pool_str3067[sizeof("mahajani")];
+    char uniname2ctype_pool_str3068[sizeof("hang")];
+    char uniname2ctype_pool_str3071[sizeof("tirh")];
+    char uniname2ctype_pool_str3072[sizeof("sylotinagri")];
+    char uniname2ctype_pool_str3082[sizeof("talu")];
+    char uniname2ctype_pool_str3084[sizeof("nagmundari")];
+    char uniname2ctype_pool_str3086[sizeof("deva")];
+    char uniname2ctype_pool_str3087[sizeof("ingujarati")];
+    char uniname2ctype_pool_str3091[sizeof("deprecated")];
     char uniname2ctype_pool_str3099[sizeof("inarabicpresentationformsb")];
-    char uniname2ctype_pool_str3100[sizeof("ogham")];
-    char uniname2ctype_pool_str3101[sizeof("elym")];
+    char uniname2ctype_pool_str3104[sizeof("devanagari")];
+    char uniname2ctype_pool_str3106[sizeof("ingunjalagondi")];
     char uniname2ctype_pool_str3107[sizeof("graphemeclusterbreak=t")];
     char uniname2ctype_pool_str3109[sizeof("graphemeclusterbreak=lvt")];
+    char uniname2ctype_pool_str3110[sizeof("taitham")];
     char uniname2ctype_pool_str3111[sizeof("nbat")];
+    char uniname2ctype_pool_str3118[sizeof("telu")];
+    char uniname2ctype_pool_str3123[sizeof("hiragana")];
     char uniname2ctype_pool_str3125[sizeof("nabataean")];
-    char uniname2ctype_pool_str3126[sizeof("hangul")];
-    char uniname2ctype_pool_str3134[sizeof("elymaic")];
+    char uniname2ctype_pool_str3135[sizeof("inrejang")];
+    char uniname2ctype_pool_str3142[sizeof("intangutsupplement")];
+    char uniname2ctype_pool_str3145[sizeof("khoj")];
+    char uniname2ctype_pool_str3155[sizeof("hmng")];
+    char uniname2ctype_pool_str3157[sizeof("cyprominoan")];
     char uniname2ctype_pool_str3158[sizeof("inhebrew")];
-    char uniname2ctype_pool_str3165[sizeof("injavanese")];
-    char uniname2ctype_pool_str3169[sizeof("symbol")];
     char uniname2ctype_pool_str3176[sizeof("inmathematicaloperators")];
     char uniname2ctype_pool_str3180[sizeof("inarabicsupplement")];
-    char uniname2ctype_pool_str3185[sizeof("cypriot")];
-    char uniname2ctype_pool_str3194[sizeof("hung")];
-    char uniname2ctype_pool_str3205[sizeof("wspace")];
+    char uniname2ctype_pool_str3193[sizeof("inenclosedcjklettersandmonths")];
     char uniname2ctype_pool_str3209[sizeof("changeswhenlowercased")];
+    char uniname2ctype_pool_str3212[sizeof("tangut")];
     char uniname2ctype_pool_str3215[sizeof("elbasan")];
-    char uniname2ctype_pool_str3218[sizeof("hluw")];
+    char uniname2ctype_pool_str3218[sizeof("osmanya")];
     char uniname2ctype_pool_str3237[sizeof("insuperscriptsandsubscripts")];
     char uniname2ctype_pool_str3239[sizeof("graphemeclusterbreak=extend")];
     char uniname2ctype_pool_str3240[sizeof("graphemeclusterbreak=prepend")];
     char uniname2ctype_pool_str3248[sizeof("nshu")];
-    char uniname2ctype_pool_str3254[sizeof("oldnortharabian")];
-    char uniname2ctype_pool_str3266[sizeof("inyijinghexagramsymbols")];
-    char uniname2ctype_pool_str3286[sizeof("hexdigit")];
+    char uniname2ctype_pool_str3254[sizeof("otherlowercase")];
+    char uniname2ctype_pool_str3265[sizeof("inethiopicextendedb")];
+    char uniname2ctype_pool_str3267[sizeof("otherletter")];
+    char uniname2ctype_pool_str3275[sizeof("kayahli")];
+    char uniname2ctype_pool_str3284[sizeof("inplayingcards")];
+    char uniname2ctype_pool_str3287[sizeof("elym")];
     char uniname2ctype_pool_str3297[sizeof("graphemeclusterbreak=l")];
     char uniname2ctype_pool_str3303[sizeof("graphemeclusterbreak=control")];
-    char uniname2ctype_pool_str3309[sizeof("bassavah")];
-    char uniname2ctype_pool_str3317[sizeof("otherdefaultignorablecodepoint")];
+    char uniname2ctype_pool_str3313[sizeof("ogrext")];
+    char uniname2ctype_pool_str3320[sizeof("elymaic")];
     char uniname2ctype_pool_str3328[sizeof("changeswhenuppercased")];
     char uniname2ctype_pool_str3329[sizeof("inalchemicalsymbols")];
+    char uniname2ctype_pool_str3331[sizeof("oldsogdian")];
+    char uniname2ctype_pool_str3338[sizeof("otheridstart")];
     char uniname2ctype_pool_str3348[sizeof("insupplementalarrowsa")];
-    char uniname2ctype_pool_str3349[sizeof("inyisyllables")];
-    char uniname2ctype_pool_str3351[sizeof("tibt")];
-    char uniname2ctype_pool_str3360[sizeof("othermath")];
-    char uniname2ctype_pool_str3363[sizeof("tibetan")];
-    char uniname2ctype_pool_str3365[sizeof("inmahjongtiles")];
+    char uniname2ctype_pool_str3350[sizeof("invithkuqi")];
+    char uniname2ctype_pool_str3355[sizeof("symbol")];
+    char uniname2ctype_pool_str3360[sizeof("inarabicextendedb")];
+    char uniname2ctype_pool_str3371[sizeof("cypriot")];
+    char uniname2ctype_pool_str3372[sizeof("any")];
+    char uniname2ctype_pool_str3373[sizeof("otheruppercase")];
+    char uniname2ctype_pool_str3377[sizeof("rjng")];
+    char uniname2ctype_pool_str3391[sizeof("wspace")];
+    char uniname2ctype_pool_str3396[sizeof("inindicsiyaqnumbers")];
+    char uniname2ctype_pool_str3405[sizeof("inprivateusearea")];
+    char uniname2ctype_pool_str3416[sizeof("othersymbol")];
+    char uniname2ctype_pool_str3428[sizeof("oupper")];
     char uniname2ctype_pool_str3433[sizeof("signwriting")];
     char uniname2ctype_pool_str3436[sizeof("nushu")];
-    char uniname2ctype_pool_str3439[sizeof("modifiersymbol")];
-    char uniname2ctype_pool_str3442[sizeof("inhalfwidthandfullwidthforms")];
+    char uniname2ctype_pool_str3455[sizeof("hmnp")];
     char uniname2ctype_pool_str3458[sizeof("upper")];
     char uniname2ctype_pool_str3460[sizeof("insupplementalarrowsc")];
+    char uniname2ctype_pool_str3483[sizeof("omath")];
+    char uniname2ctype_pool_str3502[sizeof("modifiersymbol")];
+    char uniname2ctype_pool_str3504[sizeof("hebr")];
+    char uniname2ctype_pool_str3505[sizeof("inhalfwidthandfullwidthforms")];
     char uniname2ctype_pool_str3511[sizeof("insupplementalmathematicaloperators")];
-    char uniname2ctype_pool_str3512[sizeof("incypriotsyllabary")];
-    char uniname2ctype_pool_str3517[sizeof("dupl")];
-    char uniname2ctype_pool_str3531[sizeof("tavt")];
     char uniname2ctype_pool_str3532[sizeof("inpahawhhmong")];
     char uniname2ctype_pool_str3533[sizeof("alphabetic")];
-    char uniname2ctype_pool_str3550[sizeof("dashpunctuation")];
     char uniname2ctype_pool_str3558[sizeof("uppercase")];
-    char uniname2ctype_pool_str3613[sizeof("soyombo")];
-    char uniname2ctype_pool_str3614[sizeof("hanifirohingya")];
-    char uniname2ctype_pool_str3616[sizeof("otherpunctuation")];
-    char uniname2ctype_pool_str3628[sizeof("defaultignorablecodepoint")];
+    char uniname2ctype_pool_str3580[sizeof("dupl")];
+    char uniname2ctype_pool_str3590[sizeof("ogham")];
+    char uniname2ctype_pool_str3613[sizeof("dashpunctuation")];
+    char uniname2ctype_pool_str3618[sizeof("hangul")];
     char uniname2ctype_pool_str3648[sizeof("inhanguljamoextendedb")];
+    char uniname2ctype_pool_str3659[sizeof("bassavah")];
     char uniname2ctype_pool_str3664[sizeof("aghb")];
-    char uniname2ctype_pool_str3703[sizeof("tifinagh")];
+    char uniname2ctype_pool_str3686[sizeof("hung")];
+    char uniname2ctype_pool_str3689[sizeof("hexdigit")];
+    char uniname2ctype_pool_str3698[sizeof("incypriotsyllabary")];
+    char uniname2ctype_pool_str3699[sizeof("indivesakuru")];
+    char uniname2ctype_pool_str3701[sizeof("tibt")];
     char uniname2ctype_pool_str3705[sizeof("inlatinextendedb")];
-    char uniname2ctype_pool_str3714[sizeof("tfng")];
+    char uniname2ctype_pool_str3710[sizeof("hluw")];
+    char uniname2ctype_pool_str3713[sizeof("tibetan")];
+    char uniname2ctype_pool_str3721[sizeof("inyisyllables")];
+    char uniname2ctype_pool_str3744[sizeof("oldnortharabian")];
+    char uniname2ctype_pool_str3754[sizeof("defaultignorablecodepoint")];
     char uniname2ctype_pool_str3766[sizeof("inhighprivateusesurrogates")];
-    char uniname2ctype_pool_str3791[sizeof("changeswhencasefolded")];
-    char uniname2ctype_pool_str3805[sizeof("dep")];
-    char uniname2ctype_pool_str3819[sizeof("oldsoutharabian")];
-    char uniname2ctype_pool_str3821[sizeof("graphemeclusterbreak=lf")];
+    char uniname2ctype_pool_str3799[sizeof("soyombo")];
+    char uniname2ctype_pool_str3807[sizeof("otherdefaultignorablecodepoint")];
     char uniname2ctype_pool_str3842[sizeof("pahawhhmong")];
     char uniname2ctype_pool_str3845[sizeof("unifiedideograph")];
+    char uniname2ctype_pool_str3850[sizeof("othermath")];
+    char uniname2ctype_pool_str3854[sizeof("changeswhencasefolded")];
+    char uniname2ctype_pool_str3857[sizeof("inmahjongtiles")];
+    char uniname2ctype_pool_str3868[sizeof("dep")];
+    char uniname2ctype_pool_str3881[sizeof("divesakuru")];
+    char uniname2ctype_pool_str3884[sizeof("graphemeclusterbreak=lf")];
     char uniname2ctype_pool_str3891[sizeof("uppercaseletter")];
     char uniname2ctype_pool_str3924[sizeof("insupplementalpunctuation")];
     char uniname2ctype_pool_str3942[sizeof("ethiopic")];
+    char uniname2ctype_pool_str3944[sizeof("inyijinghexagramsymbols")];
+    char uniname2ctype_pool_str3949[sizeof("ecomp")];
     char uniname2ctype_pool_str3976[sizeof("inglagoliticsupplement")];
-    char uniname2ctype_pool_str3995[sizeof("rejang")];
-    char uniname2ctype_pool_str4087[sizeof("inbopomofoextended")];
-    char uniname2ctype_pool_str4109[sizeof("tagb")];
-    char uniname2ctype_pool_str4137[sizeof("othergraphemeextend")];
-    char uniname2ctype_pool_str4162[sizeof("inegyptianhieroglyphs")];
-    char uniname2ctype_pool_str4175[sizeof("inegyptianhieroglyphformatcontrols")];
-    char uniname2ctype_pool_str4203[sizeof("hebrew")];
-    char uniname2ctype_pool_str4254[sizeof("tglg")];
-    char uniname2ctype_pool_str4276[sizeof("tagalog")];
-    char uniname2ctype_pool_str4291[sizeof("graphemeclusterbreak=zwj")];
-    char uniname2ctype_pool_str4321[sizeof("zyyy")];
-    char uniname2ctype_pool_str4360[sizeof("hyphen")];
-    char uniname2ctype_pool_str4397[sizeof("inboxdrawing")];
-    char uniname2ctype_pool_str4405[sizeof("graphemeclusterbreak=v")];
-    char uniname2ctype_pool_str4406[sizeof("graphemeclusterbreak=lv")];
-    char uniname2ctype_pool_str4460[sizeof("telugu")];
-    char uniname2ctype_pool_str4485[sizeof("duployan")];
-    char uniname2ctype_pool_str4528[sizeof("openpunctuation")];
+    char uniname2ctype_pool_str3998[sizeof("inbopomofoextended")];
+    char uniname2ctype_pool_str4007[sizeof("injavanese")];
+    char uniname2ctype_pool_str4106[sizeof("otherpunctuation")];
+    char uniname2ctype_pool_str4116[sizeof("tifinagh")];
+    char uniname2ctype_pool_str4127[sizeof("tfng")];
+    char uniname2ctype_pool_str4169[sizeof("hanifirohingya")];
+    char uniname2ctype_pool_str4231[sizeof("tavt")];
+    char uniname2ctype_pool_str4308[sizeof("inboxdrawing")];
+    char uniname2ctype_pool_str4309[sizeof("oldsoutharabian")];
+    char uniname2ctype_pool_str4348[sizeof("inegyptianhieroglyphs")];
+    char uniname2ctype_pool_str4361[sizeof("inegyptianhieroglyphformatcontrols")];
+    char uniname2ctype_pool_str4459[sizeof("tagb")];
+    char uniname2ctype_pool_str4487[sizeof("rejang")];
+    char uniname2ctype_pool_str4604[sizeof("tglg")];
+    char uniname2ctype_pool_str4626[sizeof("tagalog")];
+    char uniname2ctype_pool_str4627[sizeof("othergraphemeextend")];
     char uniname2ctype_pool_str4674[sizeof("insupplementaryprivateuseareaa")];
     char uniname2ctype_pool_str4683[sizeof("inhighsurrogates")];
+    char uniname2ctype_pool_str4695[sizeof("hebrew")];
+    char uniname2ctype_pool_str4734[sizeof("duployan")];
+    char uniname2ctype_pool_str4755[sizeof("graphemeclusterbreak=v")];
+    char uniname2ctype_pool_str4756[sizeof("graphemeclusterbreak=lv")];
     char uniname2ctype_pool_str4772[sizeof("insupplementalarrowsb")];
-    char uniname2ctype_pool_str4948[sizeof("insupplementalsymbolsandpictographs")];
-    char uniname2ctype_pool_str4955[sizeof("egyp")];
+    char uniname2ctype_pool_str4783[sizeof("graphemeclusterbreak=zwj")];
+    char uniname2ctype_pool_str4810[sizeof("telugu")];
+    char uniname2ctype_pool_str4898[sizeof("zyyy")];
+    char uniname2ctype_pool_str4982[sizeof("olduyghur")];
     char uniname2ctype_pool_str4986[sizeof("inhangulcompatibilityjamo")];
-    char uniname2ctype_pool_str5114[sizeof("nyiakengpuachuehmong")];
-    char uniname2ctype_pool_str5608[sizeof("egyptianhieroglyphs")];
+    char uniname2ctype_pool_str5018[sizeof("openpunctuation")];
+    char uniname2ctype_pool_str5038[sizeof("hyphen")];
+    char uniname2ctype_pool_str5134[sizeof("insupplementalsymbolsandpictographs")];
+    char uniname2ctype_pool_str5141[sizeof("egyp")];
+    char uniname2ctype_pool_str5300[sizeof("nyiakengpuachuehmong")];
+    char uniname2ctype_pool_str5980[sizeof("egyptianhieroglyphs")];
     char uniname2ctype_pool_str6098[sizeof("insupplementaryprivateuseareab")];
 #endif /* USE_UNICODE_PROPERTIES */
   };
@@ -39029,7 +42766,6 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "yi",
     "yiii",
     "lana",
-    "z",
     "lina",
     "maka",
     "mani",
@@ -39043,11 +42779,12 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "cn",
     "pi",
     "innko",
-    "zzzz",
+    "z",
     "gran",
     "co",
     "lineara",
     "mark",
+    "yezi",
     "po",
     "me",
     "cari",
@@ -39074,6 +42811,7 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "c",
     "mandaic",
     "meeteimayek",
+    "zzzz",
     "inarmenian",
     "inmyanmar",
     "inmakasar",
@@ -39087,6 +42825,7 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "qaai",
     "inahom",
     "merc",
+    "inchorasmian",
     "combiningmark",
     "lc",
     "perm",
@@ -39105,6 +42844,8 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "pc",
     "armenian",
     "insharada",
+    "vai",
+    "vaii",
     "inmarchen",
     "makasar",
     "masaramgondi",
@@ -39124,19 +42865,17 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "pcm",
     "inkatakana",
     "inkaithi",
-    "inzanabazarsquare",
     "inscriptionalparthian",
     "initialpunctuation",
     "mtei",
-    "vai",
-    "vaii",
+    "inzanabazarsquare",
     "inkhmersymbols",
     "insyriac",
     "intakri",
     "arabic",
-    "zs",
     "katakana",
     "prti",
+    "zs",
     "ascii",
     "cs",
     "ps",
@@ -39155,19 +42894,19 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "l",
     "inmeeteimayek",
     "inideographicdescriptioncharacters",
-    "xidcontinue",
+    "yezidi",
     "knda",
     "innandinagari",
     "kannada",
     "inmodi",
     "inlao",
+    "xidcontinue",
     "inoldnortharabian",
     "intransportandmapsymbols",
     "letternumber",
     "gothic",
     "inlineara",
     "inmendekikakui",
-    "xidc",
     "mongolian",
     "inmiscellaneousmathematicalsymbolsa",
     "inspecials",
@@ -39176,9 +42915,11 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "inemoticons",
     "kali",
     "inolditalic",
+    "xidc",
     "inmedefaidrin",
     "inchesssymbols",
     "incjkcompatibilityideographssupplement",
+    "kits",
     "inadlam",
     "psalterpahlavi",
     "incommonindicnumberforms",
@@ -39186,18 +42927,22 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "innewa",
     "sk",
     "control",
+    "inkawi",
     "inancientsymbols",
     "palm",
     "inlycian",
     "so",
     "patternwhitespace",
-    "xids",
     "inmandaic",
     "idc",
     "meroiticcursive",
+    "intoto",
+    "vs",
+    "xids",
     "inwarangciti",
     "sora",
     "inopticalcharacterrecognition",
+    "kawi",
     "inoldsogdian",
     "inmalayalam",
     "bamum",
@@ -39212,6 +42957,7 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
 #else /* USE_UNICODE_PROPERTIES */
     "intaitham",
     "lower",
+    "patternsyntax",
     "joinc",
     "inoldsoutharabian",
     "incjkstrokes",
@@ -39219,7 +42965,6 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "samr",
     "inwancho",
     "batak",
-    "vs",
     "patws",
     "samaritan",
     "idsbinaryoperator",
@@ -39230,6 +42975,7 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
 #endif /* USE_UNICODE_PROPERTIES */
     "alnum",
 #ifdef USE_UNICODE_PROPERTIES
+    "inznamennymusicalnotation",
     "insylotinagri",
     "inugaritic",
     "incontrolpictures",
@@ -39239,7 +42985,6 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "ital",
     "inmodifiertoneletters",
     "inancientgreekmusicalnotation",
-    "patternsyntax",
     "lisu",
     "lowercase",
     "cwcm",
@@ -39247,7 +42992,6 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "bass",
     "ids",
     "inlatinextendeda",
-    "oriya",
     "intaile",
     "inmiscellaneoussymbols",
     "inmiscellaneoussymbolsandarrows",
@@ -39255,7 +42999,9 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "inmiscellaneoussymbolsandpictographs",
     "inoldturkic",
     "insaurashtra",
+    "incyrillicextendeda",
     "idcontinue",
+    "intaixuanjingsymbols",
     "intamil",
     "inmultani",
     "inlatinextendede",
@@ -39267,27 +43013,31 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "innewtailue",
     "bengali",
     "runr",
-    "zl",
-    "incyrillicextendeda",
     "ll",
     "indeseret",
-    "intaixuanjingsymbols",
     "inancientgreeknumbers",
     "idstart",
+    "zl",
     "inmeeteimayekextensions",
     "balinese",
-    "dia",
-    "di",
+    "incyrillicextendedc",
     "inspacingmodifierletters",
     "inearlydynasticcuneiform",
     "plrd",
     "canadianaboriginal",
-    "zinh",
     "sind",
-    "osage",
     "inlatinextendedc",
     "uideo",
     "incountingrodnumerals",
+    "zinh",
+    "dia",
+    "di",
+    "inkhudawadi",
+    "inhanifirohingya",
+    "diak",
+    "gong",
+    "ingrantha",
+    "bidic",
     "xidstart",
 #endif /* USE_UNICODE_PROPERTIES */
     "xdigit",
@@ -39295,18 +43045,12 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "upper",
     "ascii",
 #else /* USE_UNICODE_PROPERTIES */
-    "osma",
-    "inkhudawadi",
-    "inhanifirohingya",
-    "gong",
-    "ingrantha",
-    "bidic",
     "mong",
     "cased",
-    "incyrillicextendedc",
     "inhiragana",
     "sinhala",
     "adlm",
+    "xsux",
     "glagolitic",
     "sterm",
     "bamu",
@@ -39314,6 +43058,7 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "inosage",
     "gunjalagondi",
     "phoenician",
+    "inolduyghur",
     "multani",
     "kaithi",
     "joincontrol",
@@ -39330,17 +43075,20 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "inogham",
     "cher",
     "chakma",
+    "inkaktoviknumerals",
     "emoji",
     "insiddham",
     "cherokee",
     "khar",
     "inmongolian",
+    "innagmundari",
     "incherokeesupplement",
-    "diacritic",
     "manichaean",
-    "xsux",
     "inolchiki",
+    "inkhitansmallscript",
     "quotationmark",
+    "vithkuqi",
+    "variationselector",
     "adlam",
     "inethiopic",
     "graphemebase",
@@ -39349,21 +43097,25 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "age=12.1",
     "age=10.0",
     "age=12.0",
+    "age=13.0",
+    "age=1.1",
 #endif /* USE_UNICODE_AGE_PROPERTIES */
     "casedletter",
     "ingurmukhi",
-    "odi",
+#ifdef USE_UNICODE_AGE_PROPERTIES
+    "age=2.1",
+#endif /* USE_UNICODE_AGE_PROPERTIES */
     "incjkunifiedideographsextensiona",
 #ifdef USE_UNICODE_AGE_PROPERTIES
-    "age=1.1",
+    "age=2.0",
 #endif /* USE_UNICODE_AGE_PROPERTIES */
     "lu",
 #ifdef USE_UNICODE_AGE_PROPERTIES
-    "age=4.1",
-    "age=2.1",
-    "age=4.0",
-    "age=2.0",
+    "age=3.1",
     "age=9.0",
+    "age=3.0",
+    "age=3.2",
+    "age=8.0",
 #endif /* USE_UNICODE_AGE_PROPERTIES */
     "intamilsupplement",
 #ifdef USE_UNICODE_AGE_PROPERTIES
@@ -39373,23 +43125,28 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
 #ifdef USE_UNICODE_AGE_PROPERTIES
     "age=6.0",
     "age=6.2",
-    "age=3.1",
-    "age=8.0",
-    "age=3.0",
-    "age=3.2",
+    "age=15.0",
+    "age=7.0",
+    "age=6.3",
 #endif /* USE_UNICODE_AGE_PROPERTIES */
     "cwt",
 #ifdef USE_UNICODE_AGE_PROPERTIES
-    "age=7.0",
+    "age=14.0",
 #endif /* USE_UNICODE_AGE_PROPERTIES */
     "unassigned",
 #ifdef USE_UNICODE_AGE_PROPERTIES
-    "age=6.3",
     "age=5.1",
     "age=5.0",
     "age=5.2",
+#endif /* USE_UNICODE_AGE_PROPERTIES */
+    "diacritic",
+#ifdef USE_UNICODE_AGE_PROPERTIES
+    "age=4.1",
 #endif /* USE_UNICODE_AGE_PROPERTIES */
     "ahom",
+#ifdef USE_UNICODE_AGE_PROPERTIES
+    "age=4.0",
+#endif /* USE_UNICODE_AGE_PROPERTIES */
     "incjkunifiedideographsextensione",
     "khmr",
     "insinhala",
@@ -39400,18 +43157,21 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "punct",
     "paucinhau",
     "gurmukhi",
-    "variationselector",
+    "chorasmian",
     "logicalorderexception",
     "khmer",
     "limbu",
+    "chrs",
+    "oriya",
     "inscriptionalpahlavi",
-    "oidc",
+    "incyrillicextendedd",
     "incjkunifiedideographsextensionc",
 #endif /* USE_UNICODE_PROPERTIES */
     "cntrl",
-#ifdef USE_UNICODE_PROPERTIES
+#ifndef USE_UNICODE_PROPERTIES
+    "space",
+#else /* USE_UNICODE_PROPERTIES */
     "inlatinextendedadditional",
-    "decimalnumber",
     "insorasompeng",
     "radical",
     "emojimodifier",
@@ -39419,103 +43179,90 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "n",
     "math",
     "goth",
+    "phnx",
     "anatolianhieroglyphs",
     "inenclosedalphanumerics",
     "nandinagari",
     "no",
+    "intangsa",
     "nko",
     "nkoo",
     "ingreekandcoptic",
-    "olck",
     "p",
     "grantha",
-    "olchiki",
+    "decimalnumber",
     "incjkunifiedideographs",
-    "zanb",
     "intirhuta",
-    "oids",
     "inhatran",
     "linb",
-    "xpeo",
     "mult",
     "saurashtra",
     "kthi",
+    "zanb",
     "inbhaiksuki",
-    "olower",
     "innabataean",
     "inphoenician",
+    "xpeo",
     "inkanbun",
     "inmeroitichieroglyphs",
-    "inkayahli",
-    "phnx",
-    "inoriya",
+    "ahex",
     "enclosingmark",
     "sd",
     "inelbasan",
-    "wara",
     "inenclosedideographicsupplement",
     "sidd",
     "linearb",
-    "hani",
-    "han",
+    "cpmn",
     "inenclosedalphanumericsupplement",
-    "medf",
     "bidicontrol",
-    "hano",
     "inphaistosdisc",
     "limb",
     "inkangxiradicals",
     "lepc",
-    "medefaidrin",
     "braille",
     "regionalindicator",
     "inlowsurrogates",
-    "inshorthandformatcontrols",
     "brah",
-    "inkhojki",
     "inoldhungarian",
-    "hanunoo",
-    "hira",
     "beng",
     "emojimodifierbase",
     "inarabic",
-    "lyci",
-    "ahex",
+    "osage",
     "inherited",
+    "incyprominoan",
     "glag",
-    "lycian",
+    "medf",
+    "osma",
     "indogra",
-    "dsrt",
     "arab",
-    "mymr",
-    "myanmar",
+    "medefaidrin",
+    "inshorthandformatcontrols",
     "phli",
     "inimperialaramaic",
+    "emod",
     "ingreekextended",
     "inanatolianhieroglyphs",
     "punctuation",
-    "takri",
     "graphemeextend",
-    "invai",
     "cwl",
+    "vith",
     "ingeometricshapes",
     "emojicomponent",
+    "dsrt",
     "coptic",
-    "deseret",
+    "inkayahli",
+    "inoriya",
     "inarabicpresentationformsa",
-    "takr",
     "inbasiclatin",
     "incjkunifiedideographsextensiond",
+    "wara",
     "sinh",
     "sund",
     "shavian",
-    "taile",
     "insundanesesupplement",
-    "inelymaic",
-    "insoyombo",
+    "inyezidi",
     "bhks",
     "bhaiksuki",
-    "incjkcompatibility",
     "inhanunoo",
     "intangut",
     "sogdian",
@@ -39524,381 +43271,432 @@ static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
     "insinhalaarchaicnumbers",
     "ideographic",
     "ugar",
+    "deseret",
+    "odi",
     "copt",
     "imperialaramaic",
     "insogdian",
     "indingbats",
     "format",
     "ininscriptionalpahlavi",
+    "lyci",
     "ininscriptionalparthian",
     "grbase",
+    "lycian",
     "inbatak",
     "cprt",
-    "cwcf",
-    "cuneiform",
-    "term",
+    "inunifiedcanadianaboriginalsyllabicsextendeda",
+    "mymr",
+    "myanmar",
     "intibetan",
     "intags",
     "asciihexdigit",
     "sentenceterminal",
-    "inmayannumerals",
     "nand",
-    "patsyn",
-    "hatran",
     "inblockelements",
     "inornamentaldingbats",
+    "inethiopicextendeda",
     "innumberforms",
-    "oldpersian",
-    "inshavian",
+    "cwcf",
+    "oidc",
     "bopo",
-    "hatr",
+    "cuneiform",
     "caseignorable",
     "inoldpersian",
-    "modifierletter",
     "cwu",
-    "lydi",
-    "inbyzantinemusicalsymbols",
+    "inelymaic",
+    "insoyombo",
     "ingeometricshapesextended",
+    "incjkcompatibility",
     "inmyanmarextendedb",
     "innushu",
-    "lydian",
-    "inunifiedcanadianaboriginalsyllabics",
-    "orkh",
-    "inyiradicals",
+    "inkanaextendedb",
+    "olck",
+    "inbyzantinemusicalsymbols",
+    "olchiki",
     "inkatakanaphoneticextensions",
-    "inethiopicextendeda",
     "incoptic",
+    "oids",
     "inarabicextendeda",
-    "oldpermic",
+    "modifierletter",
     "incjksymbolsandpunctuation",
-    "word",
+    "olower",
     "bopomofo",
-    "ogam",
     "inlisu",
     "inoldpermic",
     "innoblock",
-    "taiviet",
+    "ext",
+    "inunifiedcanadianaboriginalsyllabics",
+    "takri",
     "inbraillepatterns",
+    "invai",
     "alpha",
     "inbalinese",
     "sorasompeng",
     "closepunctuation",
+    "hani",
+    "inmayannumerals",
+    "han",
     "inmiscellaneousmathematicalsymbolsb",
     "inlepcha",
-    "insyriacsupplement",
-    "newa",
-    "spacingmark",
-    "inpalmyrene",
-    "cyrl",
-    "assigned",
-    "mlym",
-    "malayalam",
-    "ext",
-    "newtailue",
-#endif /* USE_UNICODE_PROPERTIES */
-    "space",
-#ifdef USE_UNICODE_PROPERTIES
-    "intelugu",
-    "idsb",
-    "indevanagari",
-    "avestan",
-    "cf",
-    "palmyrene",
-    "inethiopicsupplement",
-    "soyo",
+    "patsyn",
+    "inlisusupplement",
+    "insyriacsupplement",
+    "hano",
+    "newa",
+    "spacingmark",
+    "inpalmyrene",
+    "takr",
 #endif /* USE_UNICODE_PROPERTIES */
     "xposixpunct",
 #ifndef USE_UNICODE_PROPERTIES
     "lower",
 #else /* USE_UNICODE_PROPERTIES */
-    "pf",
+    "inkhojki",
+    "taile",
+    "assigned",
+    "hanunoo",
+    "hira",
+    "inarabicextendedc",
+    "newtailue",
+    "space",
+    "intelugu",
+    "lydi",
+    "idsb",
+    "extpict",
+    "lydian",
+    "inethiopicsupplement",
     "sarb",
-    "zanabazarsquare",
     "ugaritic",
-    "osge",
-    "java",
+    "inyiradicals",
+    "inphoneticextensions",
     "sharada",
-    "dogra",
+    "zanabazarsquare",
     "bugi",
-    "meroitichieroglyphs",
+    "word",
+    "term",
     "separator",
     "ingeorgiansupplement",
     "sogd",
-    "tale",
-    "inunifiedcanadianaboriginalsyllabicsextended",
-    "terminalpunctuation",
+    "extender",
     "shrd",
 #endif /* USE_UNICODE_PROPERTIES */
     "graph",
 #ifdef USE_UNICODE_PROPERTIES
-    "olditalic",
-    "dogr",
-    "gujr",
+    "tnsa",
+    "tangsa",
     "phag",
-    "gujarati",
+    "dogra",
     "inhanguljamo",
-    "javanese",
-    "taml",
-    "inphoneticextensions",
+    "inshavian",
     "siddham",
+    "cf",
+    "inunifiedcanadianaboriginalsyllabicsextended",
     "buginese",
     "inmongoliansupplement",
-    "invariationselectors",
+    "cyrl",
     "inhanguljamoextendeda",
-    "inverticalforms",
-    "syrc",
+    "pf",
     "number",
+    "inphoneticextensionssupplement",
+    "dogr",
+    "mlym",
     "incopticepactnumbers",
-    "avst",
+    "malayalam",
     "inbamum",
     "nd",
     "insuttonsignwriting",
-    "extender",
-    "intaiviet",
-    "hex",
-    "incjkunifiedideographsextensionf",
-    "other",
-    "otheridcontinue",
+    "inethiopicextended",
     "shaw",
-    "dash",
-    "othernumber",
-    "orya",
-    "invedicextensions",
+    "palmyrene",
+    "soyo",
+    "incjkunifiedideographsextensionh",
     "sgnw",
+    "toto",
     "caucasianalbanian",
     "inmathematicalalphanumericsymbols",
-    "inphoneticextensionssupplement",
-    "invariationselectorssupplement",
+    "incjkunifiedideographsextensiong",
+    "hatran",
+    "taiviet",
+    "meroitichieroglyphs",
+    "ingeorgianextended",
+    "incjkunifiedideographsextensionf",
+    "oldpersian",
     "induployan",
-    "syriac",
-    "oalpha",
+    "incyrillicextendedb",
+    "dash",
+    "hatr",
     "innyiakengpuachuehmong",
     "incombiningdiacriticalmarks",
-    "inethiopicextended",
     "nl",
     "incombiningdiacriticalmarksforsymbols",
     "khudawadi",
-    "otheralphabetic",
-    "oldhungarian",
-    "incurrencysymbols",
     "incjkradicalssupplement",
     "inglagolitic",
-    "intifinagh",
-    "ingeorgianextended",
+    "orkh",
+    "syrc",
     "surrogate",
-    "incyrillicextendedb",
+    "indevanagari",
+    "avestan",
+    "oldpermic",
     "ethi",
-    "titlecaseletter",
+    "ogam",
     "rohg",
-    "inmeroiticcursive",
     "idstrinaryoperator",
+    "java",
     "inphagspa",
     "lepcha",
+    "indevanagariextendeda",
+    "intifinagh",
     "intagalog",
-    "mathsymbol",
     "incombiningdiacriticalmarkssupplement",
+    "tale",
     "inbrahmi",
+    "terminalpunctuation",
     "insymbolsandpictographsextendeda",
-    "inlinearbsyllabary",
-    "oldturkic",
+    "syriac",
     "inbengali",
-    "wancho",
-    "osmanya",
+    "nagm",
+    "extendedpictographic",
     "buhd",
-    "insmallformvariants",
-    "indevanagariextended",
-    "softdotted",
+    "javanese",
+    "taml",
     "inbuginese",
-    "mahj",
     "inlatin1supplement",
     "ingothic",
-    "mahajani",
-    "hang",
-    "sylo",
-    "warangciti",
-    "ingujarati",
-    "tirhuta",
+    "invariationselectors",
+    "hex",
+    "inverticalforms",
+    "ebase",
+    "incurrencysymbols",
+    "avst",
+    "osge",
     "incombiningdiacriticalmarksextended",
+    "intaiviet",
     "spaceseparator",
-    "ingunjalagondi",
-    "wcho",
-    "hiragana",
-    "extendedpictographic",
-    "inrejang",
-    "inottomansiyaqnumbers",
+    "softdotted",
     "nchar",
-    "cyrillic",
-    "khoj",
+    "invedicextensions",
     "inlimbu",
-    "hmng",
-    "thaa",
-    "thai",
+    "olditalic",
+    "gujr",
+    "mathsymbol",
     "incjkunifiedideographsextensionb",
-    "deva",
-    "thaana",
+    "gujarati",
     "phagspa",
-    "devanagari",
-    "tang",
+    "invariationselectorssupplement",
     "currencysymbol",
-    "tagbanwa",
-    "inenclosedcjklettersandmonths",
-    "tamil",
-    "tirh",
+    "inlinearbsyllabary",
+    "wancho",
+    "inpaucinhau",
+    "other",
+    "otheridcontinue",
+    "sylo",
+    "zp",
+    "inaegeannumbers",
+    "warangciti",
+    "othernumber",
 #endif /* USE_UNICODE_PROPERTIES */
     "digit",
 #ifndef USE_UNICODE_PROPERTIES
     "blank"
 #else /* USE_UNICODE_PROPERTIES */
-    "talu",
-    "zp",
-    "inpaucinhau",
-    "taitham",
-    "otherlowercase",
-    "telu",
-    "inaegeannumbers",
-    "otherletter",
-    "whitespace",
     "nonspacingmark",
+    "titlecaseletter",
+    "inmeroiticcursive",
+    "wcho",
     "graphemeclusterbreak=spacingmark",
     "inletterlikesymbols",
+    "inottomansiyaqnumbers",
     "intagbanwa",
-    "oldsogdian",
-    "otheridstart",
+    "cyrillic",
+    "oalpha",
     "graphemeclusterbreak=cr",
     "narb",
     "changeswhencasemapped",
     "inbopomofo",
-    "tangut",
     "graphemeclusterbreak=regionalindicator",
+    "otheralphabetic",
     "noncharactercodepoint",
-    "otheruppercase",
-    "rjng",
-    "sylotinagri",
+    "oldhungarian",
+    "insymbolsforlegacycomputing",
+    "insmallformvariants",
     "inhangulsyllables",
     "emojipresentation",
-    "inindicsiyaqnumbers",
+    "epres",
     "inbassavah",
-    "ogrext",
-    "othersymbol",
-    "oupper",
+    "indevanagariextended",
     "inbuhid",
-    "hmnp",
+    "tirhuta",
     "inpsalterpahlavi",
+    "whitespace",
     "finalpunctuation",
+    "orya",
     "phlp",
     "inbamumsupplement",
     "buhid",
     "paragraphseparator",
     "inalphabeticpresentationforms",
-    "omath",
-    "any",
+    "inlatinextendedg",
     "elba",
     "changeswhentitlecased",
     "incombininghalfmarks",
     "intangutcomponents",
-    "hebr",
-    "deprecated",
+    "thaa",
+    "thai",
+    "oldturkic",
+    "thaana",
+    "inlatinextendedf",
+    "ougr",
+    "tang",
     "inarabicmathematicalalphabeticsymbols",
-    "inprivateusearea",
-    "kayahli",
-    "inplayingcards",
+    "tagbanwa",
+    "tamil",
+    "khitansmallscript",
+    "mahj",
+    "mahajani",
+    "hang",
+    "tirh",
+    "sylotinagri",
+    "talu",
+    "nagmundari",
+    "deva",
+    "ingujarati",
+    "deprecated",
     "inarabicpresentationformsb",
-    "ogham",
-    "elym",
+    "devanagari",
+    "ingunjalagondi",
     "graphemeclusterbreak=t",
     "graphemeclusterbreak=lvt",
+    "taitham",
     "nbat",
+    "telu",
+    "hiragana",
     "nabataean",
-    "hangul",
-    "elymaic",
+    "inrejang",
+    "intangutsupplement",
+    "khoj",
+    "hmng",
+    "cyprominoan",
     "inhebrew",
-    "injavanese",
-    "symbol",
     "inmathematicaloperators",
     "inarabicsupplement",
-    "cypriot",
-    "hung",
-    "wspace",
+    "inenclosedcjklettersandmonths",
     "changeswhenlowercased",
+    "tangut",
     "elbasan",
-    "hluw",
+    "osmanya",
     "insuperscriptsandsubscripts",
     "graphemeclusterbreak=extend",
     "graphemeclusterbreak=prepend",
     "nshu",
-    "oldnortharabian",
-    "inyijinghexagramsymbols",
-    "hexdigit",
+    "otherlowercase",
+    "inethiopicextendedb",
+    "otherletter",
+    "kayahli",
+    "inplayingcards",
+    "elym",
     "graphemeclusterbreak=l",
     "graphemeclusterbreak=control",
-    "bassavah",
-    "otherdefaultignorablecodepoint",
+    "ogrext",
+    "elymaic",
     "changeswhenuppercased",
     "inalchemicalsymbols",
+    "oldsogdian",
+    "otheridstart",
     "insupplementalarrowsa",
-    "inyisyllables",
-    "tibt",
-    "othermath",
-    "tibetan",
-    "inmahjongtiles",
+    "invithkuqi",
+    "symbol",
+    "inarabicextendedb",
+    "cypriot",
+    "any",
+    "otheruppercase",
+    "rjng",
+    "wspace",
+    "inindicsiyaqnumbers",
+    "inprivateusearea",
+    "othersymbol",
+    "oupper",
     "signwriting",
     "nushu",
-    "modifiersymbol",
-    "inhalfwidthandfullwidthforms",
+    "hmnp",
     "upper",
     "insupplementalarrowsc",
+    "omath",
+    "modifiersymbol",
+    "hebr",
+    "inhalfwidthandfullwidthforms",
     "insupplementalmathematicaloperators",
-    "incypriotsyllabary",
-    "dupl",
-    "tavt",
     "inpahawhhmong",
     "alphabetic",
-    "dashpunctuation",
     "uppercase",
-    "soyombo",
-    "hanifirohingya",
-    "otherpunctuation",
-    "defaultignorablecodepoint",
+    "dupl",
+    "ogham",
+    "dashpunctuation",
+    "hangul",
     "inhanguljamoextendedb",
+    "bassavah",
     "aghb",
-    "tifinagh",
+    "hung",
+    "hexdigit",
+    "incypriotsyllabary",
+    "indivesakuru",
+    "tibt",
     "inlatinextendedb",
-    "tfng",
+    "hluw",
+    "tibetan",
+    "inyisyllables",
+    "oldnortharabian",
+    "defaultignorablecodepoint",
     "inhighprivateusesurrogates",
+    "soyombo",
+    "otherdefaultignorablecodepoint",
+    "pahawhhmong",
+    "unifiedideograph",
+    "othermath",
     "changeswhencasefolded",
+    "inmahjongtiles",
     "dep",
-    "oldsoutharabian",
+    "divesakuru",
     "graphemeclusterbreak=lf",
-    "pahawhhmong",
-    "unifiedideograph",
     "uppercaseletter",
     "insupplementalpunctuation",
     "ethiopic",
+    "inyijinghexagramsymbols",
+    "ecomp",
     "inglagoliticsupplement",
-    "rejang",
     "inbopomofoextended",
-    "tagb",
-    "othergraphemeextend",
+    "injavanese",
+    "otherpunctuation",
+    "tifinagh",
+    "tfng",
+    "hanifirohingya",
+    "tavt",
+    "inboxdrawing",
+    "oldsoutharabian",
     "inegyptianhieroglyphs",
     "inegyptianhieroglyphformatcontrols",
-    "hebrew",
+    "tagb",
+    "rejang",
     "tglg",
     "tagalog",
-    "graphemeclusterbreak=zwj",
-    "zyyy",
-    "hyphen",
-    "inboxdrawing",
+    "othergraphemeextend",
+    "insupplementaryprivateuseareaa",
+    "inhighsurrogates",
+    "hebrew",
+    "duployan",
     "graphemeclusterbreak=v",
     "graphemeclusterbreak=lv",
+    "insupplementalarrowsb",
+    "graphemeclusterbreak=zwj",
     "telugu",
-    "duployan",
+    "zyyy",
+    "olduyghur",
+    "inhangulcompatibilityjamo",
     "openpunctuation",
-    "insupplementaryprivateuseareaa",
-    "inhighsurrogates",
-    "insupplementalarrowsb",
+    "hyphen",
     "insupplementalsymbolsandpictographs",
     "egyp",
-    "inhangulcompatibilityjamo",
     "nyiakengpuachuehmong",
     "egyptianhieroglyphs",
     "insupplementaryprivateuseareab"
@@ -39918,8 +43716,7 @@ uniname2ctype_p (register const char *str, register size_t len)
       {uniname2ctype_offset(str17), 111},
       {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str22), 152},
-      {-1},
-      {uniname2ctype_offset(str24), 52},
+      {-1}, {-1},
       {uniname2ctype_offset(str25), 184},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str33), 218},
@@ -39933,14 +43730,14 @@ uniname2ctype_p (register const char *str, register size_t len)
       {uniname2ctype_offset(str48), 95},
       {uniname2ctype_offset(str49), 95},
       {-1}, {-1},
-      {uniname2ctype_offset(str52), 331},
+      {uniname2ctype_offset(str52), 346},
       {-1}, {-1},
       {uniname2ctype_offset(str55), 21},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str64), 44},
       {-1},
-      {uniname2ctype_offset(str66), 319},
-      {uniname2ctype_offset(str67), 267},
+      {uniname2ctype_offset(str66), 333},
+      {uniname2ctype_offset(str67), 52},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str71), 181},
       {-1}, {-1}, {-1},
@@ -39949,15 +43746,17 @@ uniname2ctype_p (register const char *str, register size_t len)
       {uniname2ctype_offset(str83), 184},
       {-1}, {-1},
       {uniname2ctype_offset(str86), 31},
-      {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str90), 230},
+      {-1},
       {uniname2ctype_offset(str92), 45},
       {-1},
       {uniname2ctype_offset(str94), 33},
       {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str100), 149},
-      {uniname2ctype_offset(str101), 496},
+      {uniname2ctype_offset(str101), 513},
       {uniname2ctype_offset(str102), 108},
-      {uniname2ctype_offset(str103), 252},
+      {uniname2ctype_offset(str103), 263},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str107), 31},
       {uniname2ctype_offset(str108), 77},
@@ -39976,25 +43775,27 @@ uniname2ctype_p (register const char *str, register size_t len)
       {uniname2ctype_offset(str130), 42},
       {uniname2ctype_offset(str131), 172},
       {-1}, {-1},
-      {uniname2ctype_offset(str134), 482},
+      {uniname2ctype_offset(str134), 497},
       {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str139), 170},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str145), 499},
-      {uniname2ctype_offset(str146), 548},
+      {uniname2ctype_offset(str145), 516},
+      {uniname2ctype_offset(str146), 575},
       {-1},
-      {uniname2ctype_offset(str148), 552},
-      {uniname2ctype_offset(str149), 514},
+      {uniname2ctype_offset(str148), 580},
+      {uniname2ctype_offset(str149), 535},
       {-1},
       {uniname2ctype_offset(str151), 18},
       {uniname2ctype_offset(str152), 169},
       {uniname2ctype_offset(str153), 160},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str161), 313},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str158), 278},
+      {-1}, {-1},
+      {uniname2ctype_offset(str161), 327},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str177), 337},
-      {uniname2ctype_offset(str178), 539},
+      {uniname2ctype_offset(str177), 352},
+      {uniname2ctype_offset(str178), 563},
       {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str183), 75},
       {-1}, {-1},
@@ -40003,18 +43804,19 @@ uniname2ctype_p (register const char *str, register size_t len)
       {uniname2ctype_offset(str190), 208},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str203), 345},
-      {uniname2ctype_offset(str204), 473},
+      {uniname2ctype_offset(str203), 360},
+      {uniname2ctype_offset(str204), 488},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str210), 553},
+      {uniname2ctype_offset(str210), 581},
       {-1},
-      {uniname2ctype_offset(str212), 350},
+      {uniname2ctype_offset(str212), 365},
       {uniname2ctype_offset(str213), 115},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str218), 528},
+      {uniname2ctype_offset(str218), 549},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str226), 171},
-      {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str230), 530},
       {uniname2ctype_offset(str231), 31},
       {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str236), 25},
@@ -40026,90 +43828,90 @@ uniname2ctype_p (register const char *str, register size_t len)
       {-1}, {-1},
       {uniname2ctype_offset(str253), 102},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str260), 542},
+      {uniname2ctype_offset(str260), 568},
       {-1}, {-1},
       {uniname2ctype_offset(str263), 161},
       {-1},
       {uniname2ctype_offset(str265), 19},
       {-1},
       {uniname2ctype_offset(str267), 79},
-      {uniname2ctype_offset(str268), 342},
+      {uniname2ctype_offset(str268), 357},
       {-1},
-      {uniname2ctype_offset(str270), 259},
+      {uniname2ctype_offset(str270), 270},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str274), 541},
-      {uniname2ctype_offset(str275), 500},
+      {uniname2ctype_offset(str274), 567},
+      {uniname2ctype_offset(str275), 517},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str281), 307},
+      {uniname2ctype_offset(str281), 321},
       {uniname2ctype_offset(str282), 40},
       {uniname2ctype_offset(str283), 79},
       {-1},
-      {uniname2ctype_offset(str285), 516},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str289), 536},
+      {uniname2ctype_offset(str285), 537},
+      {-1},
+      {uniname2ctype_offset(str287), 144},
+      {uniname2ctype_offset(str288), 144},
+      {uniname2ctype_offset(str289), 560},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str293), 218},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str297), 212},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str301), 380},
+      {uniname2ctype_offset(str301), 395},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str311), 311},
+      {uniname2ctype_offset(str311), 325},
       {-1},
-      {uniname2ctype_offset(str313), 441},
+      {uniname2ctype_offset(str313), 456},
       {-1},
-      {uniname2ctype_offset(str315), 232},
+      {uniname2ctype_offset(str315), 243},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str320), 260},
+      {uniname2ctype_offset(str320), 271},
       {-1},
       {uniname2ctype_offset(str322), 129},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str328), 320},
+      {uniname2ctype_offset(str328), 334},
       {-1}, {-1},
       {uniname2ctype_offset(str331), 76},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str335), 537},
+      {uniname2ctype_offset(str335), 561},
       {-1}, {-1},
-      {uniname2ctype_offset(str338), 318},
+      {uniname2ctype_offset(str338), 332},
       {-1},
       {uniname2ctype_offset(str340), 76},
       {-1},
-      {uniname2ctype_offset(str342), 334},
+      {uniname2ctype_offset(str342), 349},
       {-1}, {-1},
       {uniname2ctype_offset(str345), 53},
-      {uniname2ctype_offset(str346), 259},
+      {uniname2ctype_offset(str346), 270},
       {-1},
-      {uniname2ctype_offset(str348), 411},
+      {uniname2ctype_offset(str348), 426},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str352), 512},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str357), 532},
-      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str352), 533},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str362), 163},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str366), 44},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str373), 160},
-      {-1}, {-1},
-      {uniname2ctype_offset(str376), 144},
-      {uniname2ctype_offset(str377), 144},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str386), 356},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str381), 554},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str386), 371},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str399), 316},
+      {uniname2ctype_offset(str399), 330},
       {-1},
-      {uniname2ctype_offset(str401), 527},
+      {uniname2ctype_offset(str401), 548},
       {-1}, {-1},
       {uniname2ctype_offset(str404), 81},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str411), 55},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str418), 108},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str426), 163},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str430), 55},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1},
       {uniname2ctype_offset(str442), 14},
       {-1}, {-1},
       {uniname2ctype_offset(str445), 23},
@@ -40121,172 +43923,180 @@ uniname2ctype_p (register const char *str, register size_t len)
       {-1},
       {uniname2ctype_offset(str470), 22},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str475), 507},
+      {uniname2ctype_offset(str475), 524},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str480), 442},
+      {uniname2ctype_offset(str480), 457},
       {uniname2ctype_offset(str481), 188},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str486), 461},
+      {uniname2ctype_offset(str486), 476},
       {-1},
-      {uniname2ctype_offset(str488), 557},
+      {uniname2ctype_offset(str488), 588},
       {-1}, {-1},
-      {uniname2ctype_offset(str491), 455},
+      {uniname2ctype_offset(str491), 470},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str500), 127},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str504), 187},
-      {uniname2ctype_offset(str505), 238},
+      {uniname2ctype_offset(str505), 249},
       {uniname2ctype_offset(str506), 24},
       {-1}, {-1},
       {uniname2ctype_offset(str509), 24},
       {-1},
-      {uniname2ctype_offset(str511), 448},
+      {uniname2ctype_offset(str511), 463},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str520), 408},
+      {uniname2ctype_offset(str520), 423},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str535), 70},
-      {-1}, {-1},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str533), 230},
+      {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str538), 91},
       {-1}, {-1},
-      {uniname2ctype_offset(str541), 531},
+      {uniname2ctype_offset(str541), 553},
       {-1},
       {uniname2ctype_offset(str543), 91},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str556), 525},
-      {-1},
-      {uniname2ctype_offset(str558), 335},
+      {uniname2ctype_offset(str556), 546},
       {-1},
-      {uniname2ctype_offset(str560), 498},
+      {uniname2ctype_offset(str558), 350},
+      {uniname2ctype_offset(str559), 70},
+      {uniname2ctype_offset(str560), 515},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str565), 586},
+      {uniname2ctype_offset(str565), 624},
       {uniname2ctype_offset(str566), 37},
       {-1},
       {uniname2ctype_offset(str568), 113},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str572), 486},
+      {uniname2ctype_offset(str572), 502},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str577), 573},
-      {uniname2ctype_offset(str578), 70},
+      {uniname2ctype_offset(str577), 611},
+      {-1},
       {uniname2ctype_offset(str579), 106},
       {-1}, {-1},
-      {uniname2ctype_offset(str582), 391},
-      {uniname2ctype_offset(str583), 465},
+      {uniname2ctype_offset(str582), 406},
+      {uniname2ctype_offset(str583), 480},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str590), 74},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str594), 168},
       {-1},
-      {uniname2ctype_offset(str596), 584},
+      {uniname2ctype_offset(str596), 622},
       {uniname2ctype_offset(str597), 146},
       {-1}, {-1},
-      {uniname2ctype_offset(str600), 475},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str604), 551},
-      {uniname2ctype_offset(str605), 591},
+      {uniname2ctype_offset(str600), 490},
+      {-1},
+      {uniname2ctype_offset(str602), 70},
+      {-1},
+      {uniname2ctype_offset(str604), 579},
+      {uniname2ctype_offset(str605), 629},
       {-1}, {-1},
-      {uniname2ctype_offset(str608), 598},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str614), 574},
+      {uniname2ctype_offset(str608), 637},
+      {uniname2ctype_offset(str609), 229},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str614), 612},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str624), 195},
-      {uniname2ctype_offset(str625), 432},
+      {uniname2ctype_offset(str625), 447},
       {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str630), 29},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str636), 522},
+      {uniname2ctype_offset(str636), 543},
       {-1}, {-1},
       {uniname2ctype_offset(str639), 49},
       {-1}, {-1},
       {uniname2ctype_offset(str642), 19},
-      {-1}, {-1},
-      {uniname2ctype_offset(str645), 470},
+      {uniname2ctype_offset(str643), 564},
+      {-1},
+      {uniname2ctype_offset(str645), 485},
       {-1},
       {uniname2ctype_offset(str647), 192},
       {-1}, {-1},
-      {uniname2ctype_offset(str650), 472},
+      {uniname2ctype_offset(str650), 487},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str657), 51},
       {-1}, {-1},
-      {uniname2ctype_offset(str660), 257},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str668), 69},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str672), 321},
+      {uniname2ctype_offset(str660), 268},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1},
+      {uniname2ctype_offset(str672), 335},
       {-1}, {-1},
       {uniname2ctype_offset(str675), 68},
       {-1}, {-1},
       {uniname2ctype_offset(str678), 171},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str695), 530},
+      {uniname2ctype_offset(str679), 607},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str683), 267},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str692), 69},
+      {-1}, {-1},
+      {uniname2ctype_offset(str695), 551},
       {uniname2ctype_offset(str696), 175},
-      {uniname2ctype_offset(str697), 384},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str703), 508},
+      {uniname2ctype_offset(str697), 399},
+      {-1}, {-1},
+      {uniname2ctype_offset(str700), 236},
+      {-1}, {-1},
+      {uniname2ctype_offset(str703), 527},
       {-1},
-      {uniname2ctype_offset(str705), 332},
+      {uniname2ctype_offset(str705), 347},
       {-1},
       {uniname2ctype_offset(str707), 158},
-      {uniname2ctype_offset(str708), 556},
+      {uniname2ctype_offset(str708), 587},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str713), 361},
+      {uniname2ctype_offset(str713), 376},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str720), 72},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str737), 7},
-      {uniname2ctype_offset(str738), 358},
+      {uniname2ctype_offset(str738), 373},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str742), 6},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1},
-      {uniname2ctype_offset(str753), 229},
+      {-1}, {-1},
+      {uniname2ctype_offset(str745), 269},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str753), 240},
       {-1},
-      {uniname2ctype_offset(str755), 497},
+      {uniname2ctype_offset(str755), 514},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str760), 416},
+      {uniname2ctype_offset(str760), 431},
       {uniname2ctype_offset(str761), 167},
       {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str766), 156},
-      {uniname2ctype_offset(str767), 572},
+      {uniname2ctype_offset(str767), 608},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str771), 167},
-      {uniname2ctype_offset(str772), 256},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str776), 257},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str776), 268},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str783), 156},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str787), 245},
+      {uniname2ctype_offset(str787), 256},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str791), 193},
       {-1}, {-1},
-      {uniname2ctype_offset(str794), 558},
+      {uniname2ctype_offset(str794), 589},
       {-1}, {-1},
       {uniname2ctype_offset(str797), 50},
       {-1},
-      {uniname2ctype_offset(str799), 579},
+      {uniname2ctype_offset(str799), 617},
       {-1}, {-1},
       {uniname2ctype_offset(str802), 13},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str809), 431},
+      {uniname2ctype_offset(str803), 593},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str809), 446},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str814), 478},
+      {uniname2ctype_offset(str814), 493},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str818), 383},
+      {uniname2ctype_offset(str818), 398},
       {-1}, {-1},
-      {uniname2ctype_offset(str821), 467},
-      {uniname2ctype_offset(str822), 563},
+      {uniname2ctype_offset(str821), 482},
+      {uniname2ctype_offset(str822), 595},
       {uniname2ctype_offset(str823), 47},
       {uniname2ctype_offset(str824), 112},
-      {uniname2ctype_offset(str825), 429},
+      {uniname2ctype_offset(str825), 444},
       {-1}, {-1},
-      {uniname2ctype_offset(str828), 564},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str834), 258},
-      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str828), 596},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str838), 157},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str842), 58},
@@ -40298,32 +44108,32 @@ uniname2ctype_p (register const char *str, register size_t len)
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str855), 67},
       {-1},
-      {uniname2ctype_offset(str857), 305},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str862), 88},
+      {uniname2ctype_offset(str857), 319},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str875), 354},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str875), 369},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1},
-      {uniname2ctype_offset(str886), 389},
+      {uniname2ctype_offset(str886), 404},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str895), 397},
+      {uniname2ctype_offset(str895), 412},
       {-1}, {-1},
-      {uniname2ctype_offset(str898), 485},
+      {uniname2ctype_offset(str898), 500},
       {-1},
-      {uniname2ctype_offset(str900), 583},
+      {uniname2ctype_offset(str900), 621},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str906), 504},
-      {uniname2ctype_offset(str907), 434},
+      {uniname2ctype_offset(str906), 521},
+      {uniname2ctype_offset(str907), 449},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str920), 419},
+      {-1}, {-1}, {-1},
       {uniname2ctype_offset(str924), 68},
+      {uniname2ctype_offset(str925), 599},
+      {uniname2ctype_offset(str926), 344},
       {-1},
-      {uniname2ctype_offset(str926), 329},
-      {-1},
-      {uniname2ctype_offset(str928), 519},
-      {uniname2ctype_offset(str929), 446},
+      {uniname2ctype_offset(str928), 540},
+      {uniname2ctype_offset(str929), 461},
       {uniname2ctype_offset(str930), 41},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
@@ -40332,206 +44142,226 @@ uniname2ctype_p (register const char *str, register size_t len)
       {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str961), 2},
       {-1},
-      {uniname2ctype_offset(str963), 246},
+      {uniname2ctype_offset(str963), 257},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1},
-      {uniname2ctype_offset(str974), 493},
+      {uniname2ctype_offset(str974), 510},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1},
-      {uniname2ctype_offset(str986), 355},
+      {uniname2ctype_offset(str986), 370},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str994), 85},
       {uniname2ctype_offset(str995), 104},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1005), 53},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1009), 404},
+      {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1010), 26},
       {-1}, {-1},
-      {uniname2ctype_offset(str1013), 480},
-      {uniname2ctype_offset(str1014), 566},
-      {uniname2ctype_offset(str1015), 469},
+      {uniname2ctype_offset(str1013), 495},
+      {-1},
+      {uniname2ctype_offset(str1015), 484},
       {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1021), 67},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1025), 444},
+      {-1}, {-1},
+      {uniname2ctype_offset(str1024), 53},
+      {uniname2ctype_offset(str1025), 459},
       {-1}, {-1},
       {uniname2ctype_offset(str1028), 136},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1032), 239},
-      {uniname2ctype_offset(str1033), 71},
-      {-1},
-      {uniname2ctype_offset(str1035), 308},
-      {uniname2ctype_offset(str1036), 543},
+      {uniname2ctype_offset(str1032), 380},
+      {-1}, {-1},
+      {uniname2ctype_offset(str1035), 322},
+      {uniname2ctype_offset(str1036), 569},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1049), 173},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1067), 102},
-      {-1}, {-1},
-      {uniname2ctype_offset(str1070), 115},
-      {-1},
+      {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1072), 197},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1080), 210},
-      {uniname2ctype_offset(str1081), 399},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1081), 414},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1085), 248},
+      {uniname2ctype_offset(str1085), 259},
       {-1},
-      {uniname2ctype_offset(str1087), 567},
-      {-1}, {-1},
-      {uniname2ctype_offset(str1090), 69},
-      {uniname2ctype_offset(str1091), 11},
+      {uniname2ctype_offset(str1087), 600},
       {-1},
-      {uniname2ctype_offset(str1093), 125},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1097), 520},
+      {uniname2ctype_offset(str1089), 115},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1095), 250},
+      {uniname2ctype_offset(str1096), 71},
+      {uniname2ctype_offset(str1097), 541},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1102), 506},
-      {-1}, {-1},
+      {uniname2ctype_offset(str1102), 523},
+      {-1},
+      {uniname2ctype_offset(str1104), 228},
       {uniname2ctype_offset(str1105), 217},
       {-1},
-      {uniname2ctype_offset(str1107), 521},
+      {uniname2ctype_offset(str1107), 542},
       {-1},
-      {uniname2ctype_offset(str1109), 228},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1109), 239},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1114), 69},
+      {uniname2ctype_offset(str1115), 11},
+      {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1119), 106},
       {uniname2ctype_offset(str1120), 60},
-      {uniname2ctype_offset(str1121), 365},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1134), 410},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1134), 425},
       {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1140), 93},
       {-1},
       {uniname2ctype_offset(str1142), 206},
-      {-1}, {-1}, {-1},
+      {-1}, {-1},
+      {uniname2ctype_offset(str1145), 137},
       {uniname2ctype_offset(str1146), 131},
-      {uniname2ctype_offset(str1147), 255},
+      {uniname2ctype_offset(str1147), 266},
       {-1},
       {uniname2ctype_offset(str1149), 158},
       {uniname2ctype_offset(str1150), 98},
-      {uniname2ctype_offset(str1151), 483},
+      {uniname2ctype_offset(str1151), 498},
       {uniname2ctype_offset(str1152), 217},
       {uniname2ctype_offset(str1153), 138},
-      {-1}, {-1}, {-1},
+      {-1}, {-1},
+      {uniname2ctype_offset(str1156), 529},
       {uniname2ctype_offset(str1157), 203},
       {uniname2ctype_offset(str1158), 166},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1164), 229},
+      {uniname2ctype_offset(str1164), 240},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1168), 104},
       {-1},
-      {uniname2ctype_offset(str1170), 374},
-      {uniname2ctype_offset(str1171), 515},
+      {uniname2ctype_offset(str1170), 389},
+      {uniname2ctype_offset(str1171), 536},
       {-1}, {-1},
-      {uniname2ctype_offset(str1174), 312},
+      {uniname2ctype_offset(str1174), 326},
       {uniname2ctype_offset(str1175), 26},
       {uniname2ctype_offset(str1176), 208},
       {uniname2ctype_offset(str1177), 74},
-      {uniname2ctype_offset(str1178), 338},
+      {uniname2ctype_offset(str1178), 353},
       {-1},
       {uniname2ctype_offset(str1180), 183},
       {uniname2ctype_offset(str1181), 151},
-      {uniname2ctype_offset(str1182), 344},
+      {uniname2ctype_offset(str1182), 359},
       {uniname2ctype_offset(str1183), 101},
       {-1},
       {uniname2ctype_offset(str1185), 170},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1190), 261},
-      {uniname2ctype_offset(str1191), 524},
+      {uniname2ctype_offset(str1186), 597},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1190), 272},
+      {uniname2ctype_offset(str1191), 545},
       {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1197), 101},
       {uniname2ctype_offset(str1198), 135},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1203), 351},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1207), 447},
-      {uniname2ctype_offset(str1208), 239},
-      {uniname2ctype_offset(str1209), 186},
-      {uniname2ctype_offset(str1210), 137},
+      {uniname2ctype_offset(str1203), 366},
+      {uniname2ctype_offset(str1204), 609},
+      {-1}, {-1},
+      {uniname2ctype_offset(str1207), 462},
       {-1},
-      {uniname2ctype_offset(str1212), 364},
+      {uniname2ctype_offset(str1209), 186},
+      {-1}, {-1},
+      {uniname2ctype_offset(str1212), 379},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1227), 232},
+      {-1},
+      {uniname2ctype_offset(str1223), 584},
       {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1227), 243},
+      {-1},
+      {uniname2ctype_offset(str1229), 235},
+      {uniname2ctype_offset(str1230), 267},
       {uniname2ctype_offset(str1231), 206},
-      {uniname2ctype_offset(str1232), 340},
+      {uniname2ctype_offset(str1232), 355},
       {uniname2ctype_offset(str1233), 73},
 #ifndef USE_UNICODE_AGE_PROPERTIES
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
 #else /* USE_UNICODE_AGE_PROPERTIES */
-      {uniname2ctype_offset(str1234), 287},
-      {uniname2ctype_offset(str1235), 289},
-      {uniname2ctype_offset(str1236), 286},
-      {uniname2ctype_offset(str1237), 288},
-      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1234), 298},
+      {uniname2ctype_offset(str1235), 300},
+      {uniname2ctype_offset(str1236), 297},
+      {uniname2ctype_offset(str1237), 299},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1241), 301},
+      {uniname2ctype_offset(str1242), 279},
 #endif /* USE_UNICODE_AGE_PROPERTIES */
       {uniname2ctype_offset(str1243), 25},
-      {uniname2ctype_offset(str1244), 326},
-      {uniname2ctype_offset(str1245), 249},
-      {uniname2ctype_offset(str1246), 420},
+      {uniname2ctype_offset(str1244), 341},
 #ifndef USE_UNICODE_AGE_PROPERTIES
       {-1},
 #else /* USE_UNICODE_AGE_PROPERTIES */
-      {uniname2ctype_offset(str1247), 268},
+      {uniname2ctype_offset(str1245), 281},
+#endif /* USE_UNICODE_AGE_PROPERTIES */
+      {uniname2ctype_offset(str1246), 435},
+#ifndef USE_UNICODE_AGE_PROPERTIES
+      {-1},
+#else /* USE_UNICODE_AGE_PROPERTIES */
+      {uniname2ctype_offset(str1247), 280},
 #endif /* USE_UNICODE_AGE_PROPERTIES */
       {uniname2ctype_offset(str1248), 30},
 #ifndef USE_UNICODE_AGE_PROPERTIES
       {-1}, {-1}, {-1}, {-1}, {-1},
 #else /* USE_UNICODE_AGE_PROPERTIES */
-      {uniname2ctype_offset(str1249), 275},
-      {uniname2ctype_offset(str1250), 270},
-      {uniname2ctype_offset(str1251), 274},
-      {uniname2ctype_offset(str1252), 269},
-      {uniname2ctype_offset(str1253), 285},
+      {uniname2ctype_offset(str1249), 283},
+      {uniname2ctype_offset(str1250), 296},
+      {uniname2ctype_offset(str1251), 282},
+      {uniname2ctype_offset(str1252), 284},
+      {uniname2ctype_offset(str1253), 295},
 #endif /* USE_UNICODE_AGE_PROPERTIES */
-      {uniname2ctype_offset(str1254), 540},
+      {uniname2ctype_offset(str1254), 566},
 #ifndef USE_UNICODE_AGE_PROPERTIES
       {-1},
 #else /* USE_UNICODE_AGE_PROPERTIES */
-      {uniname2ctype_offset(str1255), 280},
+      {uniname2ctype_offset(str1255), 291},
 #endif /* USE_UNICODE_AGE_PROPERTIES */
-      {uniname2ctype_offset(str1256), 267},
+      {uniname2ctype_offset(str1256), 278},
 #ifndef USE_UNICODE_AGE_PROPERTIES
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
 #else /* USE_UNICODE_AGE_PROPERTIES */
-      {uniname2ctype_offset(str1257), 279},
-      {uniname2ctype_offset(str1258), 281},
-      {uniname2ctype_offset(str1259), 272},
-      {uniname2ctype_offset(str1260), 284},
-      {uniname2ctype_offset(str1261), 271},
-      {uniname2ctype_offset(str1262), 273},
+      {uniname2ctype_offset(str1257), 290},
+      {uniname2ctype_offset(str1258), 292},
+      {uniname2ctype_offset(str1259), 303},
+      {uniname2ctype_offset(str1260), 294},
+      {-1},
+      {uniname2ctype_offset(str1262), 293},
 #endif /* USE_UNICODE_AGE_PROPERTIES */
       {uniname2ctype_offset(str1263), 64},
 #ifndef USE_UNICODE_AGE_PROPERTIES
       {-1}, {-1},
 #else /* USE_UNICODE_AGE_PROPERTIES */
-      {uniname2ctype_offset(str1264), 283},
       {-1},
+      {uniname2ctype_offset(str1265), 302},
 #endif /* USE_UNICODE_AGE_PROPERTIES */
       {uniname2ctype_offset(str1266), 21},
 #ifndef USE_UNICODE_AGE_PROPERTIES
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1},
 #else /* USE_UNICODE_AGE_PROPERTIES */
-      {uniname2ctype_offset(str1267), 282},
-      {uniname2ctype_offset(str1268), 277},
+      {uniname2ctype_offset(str1267), 288},
       {-1},
-      {uniname2ctype_offset(str1270), 276},
-      {uniname2ctype_offset(str1271), 278},
+      {uniname2ctype_offset(str1269), 287},
+      {uniname2ctype_offset(str1270), 289},
+#endif /* USE_UNICODE_AGE_PROPERTIES */
+      {uniname2ctype_offset(str1271), 250},
+#ifndef USE_UNICODE_AGE_PROPERTIES
       {-1}, {-1},
+#else /* USE_UNICODE_AGE_PROPERTIES */
+      {-1},
+      {uniname2ctype_offset(str1273), 286},
 #endif /* USE_UNICODE_AGE_PROPERTIES */
       {uniname2ctype_offset(str1274), 200},
+#ifndef USE_UNICODE_AGE_PROPERTIES
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1282), 596},
+#else /* USE_UNICODE_AGE_PROPERTIES */
+      {uniname2ctype_offset(str1275), 285},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+#endif /* USE_UNICODE_AGE_PROPERTIES */
+      {uniname2ctype_offset(str1282), 635},
       {-1}, {-1},
       {uniname2ctype_offset(str1285), 105},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1289), 333},
+      {uniname2ctype_offset(str1289), 348},
       {-1}, {-1},
-      {uniname2ctype_offset(str1292), 382},
+      {uniname2ctype_offset(str1292), 397},
       {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1297), 145},
       {-1}, {-1},
@@ -40543,31 +44373,35 @@ uniname2ctype_p (register const char *str, register size_t len)
       {uniname2ctype_offset(str1314), 193},
       {-1}, {-1},
       {uniname2ctype_offset(str1317), 86},
-      {-1},
-      {uniname2ctype_offset(str1319), 256},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1},
+      {uniname2ctype_offset(str1328), 227},
       {-1}, {-1},
-      {uniname2ctype_offset(str1331), 252},
+      {uniname2ctype_offset(str1331), 263},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1340), 105},
       {-1}, {-1},
       {uniname2ctype_offset(str1343), 120},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1349), 227},
+      {-1}, {-1},
+      {uniname2ctype_offset(str1352), 88},
       {-1},
       {uniname2ctype_offset(str1354), 164},
-      {uniname2ctype_offset(str1355), 254},
-      {-1}, {-1},
-      {uniname2ctype_offset(str1358), 594},
+      {-1},
+      {uniname2ctype_offset(str1356), 605},
+      {-1},
+      {uniname2ctype_offset(str1358), 633},
       {-1},
       {uniname2ctype_offset(str1360), 3},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1365), 372},
-      {uniname2ctype_offset(str1366), 36},
-      {uniname2ctype_offset(str1367), 513},
+      {uniname2ctype_offset(str1365), 387},
+      {-1},
+      {uniname2ctype_offset(str1367), 534},
       {-1},
-      {uniname2ctype_offset(str1369), 247},
+      {uniname2ctype_offset(str1369), 258},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1373), 263},
+      {uniname2ctype_offset(str1373), 274},
       {-1},
       {uniname2ctype_offset(str1375), 135},
       {-1}, {-1}, {-1}, {-1},
@@ -40576,899 +44410,943 @@ uniname2ctype_p (register const char *str, register size_t len)
       {uniname2ctype_offset(str1384), 56},
       {-1}, {-1},
       {uniname2ctype_offset(str1387), 113},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1392), 138},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1400), 201},
-      {uniname2ctype_offset(str1401), 385},
+      {uniname2ctype_offset(str1401), 400},
       {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1407), 224},
       {-1},
       {uniname2ctype_offset(str1409), 38},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1415), 576},
+      {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1419), 140},
       {uniname2ctype_offset(str1420), 140},
       {-1},
-      {uniname2ctype_offset(str1422), 310},
-      {uniname2ctype_offset(str1423), 143},
-      {-1}, {-1},
+      {uniname2ctype_offset(str1422), 324},
+      {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1426), 39},
       {-1},
       {uniname2ctype_offset(str1428), 181},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1434), 143},
+      {uniname2ctype_offset(str1429), 36},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1438), 437},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1438), 422},
-      {-1}, {-1},
-      {uniname2ctype_offset(str1441), 215},
-      {uniname2ctype_offset(str1442), 523},
-      {-1}, {-1},
-      {uniname2ctype_offset(str1445), 253},
-      {-1}, {-1},
-      {uniname2ctype_offset(str1448), 491},
+      {uniname2ctype_offset(str1442), 544},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1448), 508},
       {uniname2ctype_offset(str1449), 122},
-      {uniname2ctype_offset(str1450), 134},
+      {-1},
       {uniname2ctype_offset(str1451), 203},
       {-1}, {-1},
       {uniname2ctype_offset(str1454), 145},
       {-1}, {-1},
       {uniname2ctype_offset(str1457), 166},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1462), 535},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1466), 241},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1470), 490},
-      {uniname2ctype_offset(str1471), 492},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1475), 414},
-      {uniname2ctype_offset(str1476), 494},
+      {-1}, {-1},
+      {uniname2ctype_offset(str1460), 215},
       {-1},
-      {uniname2ctype_offset(str1478), 436},
+      {uniname2ctype_offset(str1462), 559},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1470), 507},
+      {uniname2ctype_offset(str1471), 509},
       {-1}, {-1},
-      {uniname2ctype_offset(str1481), 138},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1485), 328},
+      {uniname2ctype_offset(str1474), 134},
+      {uniname2ctype_offset(str1475), 429},
+      {uniname2ctype_offset(str1476), 511},
       {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1480), 247},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1489), 33},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1495), 251},
+      {uniname2ctype_offset(str1495), 262},
       {-1},
-      {uniname2ctype_offset(str1497), 484},
-      {uniname2ctype_offset(str1498), 199},
-      {uniname2ctype_offset(str1499), 582},
+      {uniname2ctype_offset(str1497), 499},
+      {-1},
+      {uniname2ctype_offset(str1499), 620},
       {-1},
       {uniname2ctype_offset(str1501), 196},
       {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1507), 122},
-      {-1},
-      {uniname2ctype_offset(str1509), 110},
-      {-1}, {-1},
-      {uniname2ctype_offset(str1512), 110},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1517), 581},
-      {-1},
-      {uniname2ctype_offset(str1519), 219},
-      {uniname2ctype_offset(str1520), 228},
+      {uniname2ctype_offset(str1508), 231},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1517), 619},
       {-1}, {-1},
-      {uniname2ctype_offset(str1523), 117},
-      {uniname2ctype_offset(str1524), 471},
+      {uniname2ctype_offset(str1520), 239},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1524), 486},
       {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1529), 120},
       {-1},
-      {uniname2ctype_offset(str1531), 407},
+      {uniname2ctype_offset(str1531), 422},
       {-1},
       {uniname2ctype_offset(str1533), 142},
-      {-1},
-      {uniname2ctype_offset(str1535), 219},
+      {-1}, {-1},
       {uniname2ctype_offset(str1536), 127},
-      {uniname2ctype_offset(str1537), 260},
+      {uniname2ctype_offset(str1537), 271},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1542), 468},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1542), 453},
-      {-1},
-      {uniname2ctype_offset(str1544), 561},
-      {-1}, {-1},
       {uniname2ctype_offset(str1547), 168},
-      {uniname2ctype_offset(str1548), 518},
-      {uniname2ctype_offset(str1549), 505},
-      {-1}, {-1},
-      {uniname2ctype_offset(str1552), 117},
-      {-1}, {-1},
-      {uniname2ctype_offset(str1555), 107},
       {-1},
+      {uniname2ctype_offset(str1549), 522},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1557), 85},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1563), 264},
-      {-1},
-      {uniname2ctype_offset(str1565), 315},
+      {uniname2ctype_offset(str1563), 275},
       {-1},
-      {uniname2ctype_offset(str1567), 148},
+      {uniname2ctype_offset(str1565), 329},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1570), 210},
       {-1},
-      {uniname2ctype_offset(str1569), 236},
-      {-1}, {-1},
       {uniname2ctype_offset(str1572), 115},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1580), 131},
-      {-1},
-      {uniname2ctype_offset(str1582), 148},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1587), 529},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1594), 114},
+      {uniname2ctype_offset(str1577), 570},
       {-1}, {-1},
+      {uniname2ctype_offset(str1580), 131},
+      {-1},
+      {uniname2ctype_offset(str1582), 219},
+      {uniname2ctype_offset(str1583), 125},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1587), 550},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1597), 81},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1602), 97},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1607), 97},
+      {uniname2ctype_offset(str1598), 219},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1607), 592},
       {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1613), 164},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1617), 488},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1622), 373},
-      {uniname2ctype_offset(str1623), 546},
+      {uniname2ctype_offset(str1617), 505},
+      {uniname2ctype_offset(str1618), 274},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1622), 388},
+      {uniname2ctype_offset(str1623), 573},
       {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1629), 39},
-      {-1},
-      {uniname2ctype_offset(str1631), 176},
-      {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1635), 72},
-      {-1}, {-1},
-      {uniname2ctype_offset(str1638), 426},
-      {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1643), 62},
+      {uniname2ctype_offset(str1644), 235},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1654), 403},
+      {uniname2ctype_offset(str1655), 276},
       {-1},
-      {uniname2ctype_offset(str1654), 388},
-      {uniname2ctype_offset(str1655), 265},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1657), 114},
+      {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1662), 129},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1671), 114},
+      {-1},
+      {uniname2ctype_offset(str1664), 451},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1671), 343},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1675), 457},
-      {uniname2ctype_offset(str1676), 176},
-      {uniname2ctype_offset(str1677), 303},
+      {uniname2ctype_offset(str1675), 472},
+      {-1},
+      {uniname2ctype_offset(str1677), 317},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1682), 595},
-      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1682), 634},
+      {-1},
+      {uniname2ctype_offset(str1684), 199},
+      {-1},
       {uniname2ctype_offset(str1686), 93},
       {uniname2ctype_offset(str1687), 141},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1691), 124},
-      {uniname2ctype_offset(str1692), 121},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1699), 367},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1699), 382},
+      {-1},
+      {uniname2ctype_offset(str1701), 525},
       {-1}, {-1},
-      {uniname2ctype_offset(str1702), 510},
-      {uniname2ctype_offset(str1703), 533},
       {uniname2ctype_offset(str1704), 207},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1714), 207},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1722), 362},
       {-1},
-      {uniname2ctype_offset(str1716), 419},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1722), 347},
-      {-1},
-      {uniname2ctype_offset(str1724), 554},
+      {uniname2ctype_offset(str1724), 582},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1728), 221},
-      {uniname2ctype_offset(str1729), 430},
+      {uniname2ctype_offset(str1729), 445},
       {uniname2ctype_offset(str1730), 222},
-      {uniname2ctype_offset(str1731), 517},
-      {uniname2ctype_offset(str1732), 238},
+      {uniname2ctype_offset(str1731), 538},
+      {uniname2ctype_offset(str1732), 249},
       {uniname2ctype_offset(str1733), 123},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1734), 114},
+      {uniname2ctype_offset(str1735), 260},
+      {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1740), 129},
       {-1},
       {uniname2ctype_offset(str1742), 161},
       {-1}, {-1},
-      {uniname2ctype_offset(str1745), 509},
-      {uniname2ctype_offset(str1746), 390},
+      {uniname2ctype_offset(str1745), 528},
+      {uniname2ctype_offset(str1746), 405},
       {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1750), 20},
       {-1},
-      {uniname2ctype_offset(str1752), 502},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1757), 501},
+      {uniname2ctype_offset(str1752), 519},
+      {uniname2ctype_offset(str1753), 148},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1757), 518},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1766), 73},
-      {-1}, {-1},
-      {uniname2ctype_offset(str1769), 362},
+      {-1},
+      {uniname2ctype_offset(str1768), 148},
+      {uniname2ctype_offset(str1769), 377},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1776), 126},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1780), 65},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1788), 137},
-      {-1}, {-1},
-      {uniname2ctype_offset(str1791), 233},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1781), 556},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1788), 97},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1793), 97},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1806), 336},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1810), 599},
-      {uniname2ctype_offset(str1811), 236},
-      {-1},
-      {uniname2ctype_offset(str1813), 255},
-      {-1}, {-1},
-      {uniname2ctype_offset(str1816), 565},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1821), 224},
+      {uniname2ctype_offset(str1806), 351},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1825), 258},
-      {uniname2ctype_offset(str1826), 202},
+      {uniname2ctype_offset(str1810), 640},
+      {uniname2ctype_offset(str1811), 247},
       {-1},
-      {uniname2ctype_offset(str1828), 387},
+      {uniname2ctype_offset(str1813), 266},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1821), 224},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1828), 402},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1838), 585},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1842), 379},
-      {uniname2ctype_offset(str1843), 134},
+      {uniname2ctype_offset(str1838), 623},
       {-1}, {-1},
-      {uniname2ctype_offset(str1846), 481},
+      {uniname2ctype_offset(str1841), 460},
+      {uniname2ctype_offset(str1842), 394},
+      {uniname2ctype_offset(str1843), 65},
       {-1},
+      {uniname2ctype_offset(str1845), 265},
+      {-1}, {-1},
       {uniname2ctype_offset(str1848), 109},
+      {-1}, {-1},
+      {uniname2ctype_offset(str1851), 137},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1861), 202},
-      {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1866), 61},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1871), 479},
+      {uniname2ctype_offset(str1871), 494},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1881), 63},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1878), 27},
+      {uniname2ctype_offset(str1888), 531},
+      {uniname2ctype_offset(str1889), 555},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1896), 626},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1902), 434},
+      {-1},
+      {uniname2ctype_offset(str1904), 455},
+      {uniname2ctype_offset(str1905), 590},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1912), 586},
+      {uniname2ctype_offset(str1913), 143},
       {-1}, {-1},
-      {uniname2ctype_offset(str1881), 63},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1891), 150},
-      {uniname2ctype_offset(str1892), 562},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1896), 588},
+      {uniname2ctype_offset(str1916), 594},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1904), 440},
-      {uniname2ctype_offset(str1905), 559},
-      {uniname2ctype_offset(str1906), 150},
+      {uniname2ctype_offset(str1924), 143},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1911), 343},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1915), 165},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1928), 424},
-      {uniname2ctype_offset(str1929), 417},
-      {uniname2ctype_offset(str1930), 445},
-      {-1},
-      {uniname2ctype_offset(str1932), 400},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1936), 323},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1},
-      {uniname2ctype_offset(str1947), 194},
+      {uniname2ctype_offset(str1929), 432},
       {-1}, {-1},
-      {uniname2ctype_offset(str1950), 409},
-      {uniname2ctype_offset(str1951), 12},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1958), 109},
+      {uniname2ctype_offset(str1932), 415},
       {-1}, {-1},
-      {uniname2ctype_offset(str1961), 103},
+      {uniname2ctype_offset(str1935), 264},
+      {uniname2ctype_offset(str1936), 338},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1941), 27},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1950), 424},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1956), 252},
+      {-1},
+      {uniname2ctype_offset(str1958), 109},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1964), 440},
       {-1}, {-1},
-      {uniname2ctype_offset(str1964), 425},
+      {uniname2ctype_offset(str1967), 492},
+      {uniname2ctype_offset(str1968), 644},
+      {uniname2ctype_offset(str1969), 251},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1974), 358},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1981), 176},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str1985), 408},
       {-1}, {-1},
-      {uniname2ctype_offset(str1967), 477},
-      {uniname2ctype_offset(str1968), 603},
+      {uniname2ctype_offset(str1988), 441},
       {-1}, {-1},
-      {uniname2ctype_offset(str1971), 153},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str1985), 393},
-      {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str1991), 1},
       {-1},
-      {uniname2ctype_offset(str1993), 360},
+      {uniname2ctype_offset(str1993), 375},
       {uniname2ctype_offset(str1994), 175},
       {-1},
       {uniname2ctype_offset(str1996), 42},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2006), 395},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2010), 363},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2001), 110},
+      {uniname2ctype_offset(str2002), 598},
+      {-1},
+      {uniname2ctype_offset(str2004), 110},
+      {-1},
+      {uniname2ctype_offset(str2006), 410},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2014), 322},
+      {uniname2ctype_offset(str2010), 378},
+      {uniname2ctype_offset(str2011), 269},
+      {uniname2ctype_offset(str2012), 565},
       {-1},
+      {uniname2ctype_offset(str2014), 336},
+      {uniname2ctype_offset(str2015), 117},
       {uniname2ctype_offset(str2016), 209},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str2023), 32},
-      {uniname2ctype_offset(str2024), 489},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2033), 78},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2043), 17},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2048), 92},
+      {uniname2ctype_offset(str2024), 506},
+      {-1},
+      {uniname2ctype_offset(str2026), 176},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2055), 92},
+      {uniname2ctype_offset(str2033), 8},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2040), 539},
+      {-1},
+      {uniname2ctype_offset(str2042), 121},
+      {uniname2ctype_offset(str2043), 17},
+      {uniname2ctype_offset(str2044), 117},
       {-1}, {-1},
-      {uniname2ctype_offset(str2058), 240},
-      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2047), 107},
+      {uniname2ctype_offset(str2048), 526},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str2062), 130},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str2070), 9},
       {-1}, {-1},
-      {uniname2ctype_offset(str2073), 330},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2078), 245},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2083), 324},
-      {uniname2ctype_offset(str2084), 154},
-      {uniname2ctype_offset(str2085), 20},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2093), 192},
-      {-1},
-      {uniname2ctype_offset(str2095), 341},
-      {-1},
-      {uniname2ctype_offset(str2097), 214},
-      {uniname2ctype_offset(str2098), 8},
+      {uniname2ctype_offset(str2073), 345},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2102), 43},
+      {uniname2ctype_offset(str2077), 150},
+      {uniname2ctype_offset(str2078), 256},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1},
+      {uniname2ctype_offset(str2090), 277},
+      {-1},
+      {uniname2ctype_offset(str2092), 150},
+      {-1}, {-1},
+      {uniname2ctype_offset(str2095), 356},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str2103), 162},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2109), 215},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str2110), 123},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2114), 439},
+      {uniname2ctype_offset(str2115), 384},
       {-1},
-      {uniname2ctype_offset(str2112), 210},
-      {-1},
-      {uniname2ctype_offset(str2114), 159},
-      {-1}, {-1},
       {uniname2ctype_offset(str2117), 174},
-      {-1},
-      {uniname2ctype_offset(str2119), 216},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1},
+      {uniname2ctype_offset(str2128), 215},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str2135), 128},
       {-1},
-      {uniname2ctype_offset(str2137), 172},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2137), 12},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2141), 244},
+      {-1}, {-1}, {-1},
       {uniname2ctype_offset(str2145), 52},
-      {uniname2ctype_offset(str2146), 401},
+      {uniname2ctype_offset(str2146), 416},
       {-1}, {-1},
       {uniname2ctype_offset(str2149), 221},
-      {uniname2ctype_offset(str2150), 121},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2153), 352},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2161), 233},
-      {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2163), 251},
+      {-1},
       {uniname2ctype_offset(str2165), 174},
       {uniname2ctype_offset(str2166), 5},
-      {uniname2ctype_offset(str2167), 112},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2170), 216},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2173), 87},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2174), 233},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2178), 233},
+      {-1}, {-1},
       {uniname2ctype_offset(str2181), 139},
-      {uniname2ctype_offset(str2182), 87},
+      {uniname2ctype_offset(str2182), 216},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2195), 339},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2199), 159},
+      {uniname2ctype_offset(str2195), 354},
+      {uniname2ctype_offset(str2196), 496},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1},
-      {uniname2ctype_offset(str2201), 89},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2204), 369},
-      {-1}, {-1},
       {uniname2ctype_offset(str2207), 196},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2211), 20},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2216), 367},
       {uniname2ctype_offset(str2217), 128},
-      {uniname2ctype_offset(str2218), 526},
+      {uniname2ctype_offset(str2218), 547},
+      {uniname2ctype_offset(str2219), 78},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2224), 453},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2222), 458},
-      {-1},
-      {uniname2ctype_offset(str2224), 438},
-      {uniname2ctype_offset(str2225), 459},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2228), 82},
+      {uniname2ctype_offset(str2228), 43},
       {uniname2ctype_offset(str2229), 35},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2235), 474},
       {-1}, {-1},
-      {uniname2ctype_offset(str2238), 154},
+      {uniname2ctype_offset(str2232), 385},
+      {uniname2ctype_offset(str2233), 216},
+      {uniname2ctype_offset(str2234), 92},
+      {uniname2ctype_offset(str2235), 489},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2244), 428},
+      {uniname2ctype_offset(str2241), 92},
+      {-1}, {-1},
+      {uniname2ctype_offset(str2244), 443},
       {-1}, {-1},
       {uniname2ctype_offset(str2247), 36},
-      {uniname2ctype_offset(str2248), 569},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2252), 240},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2258), 443},
+      {uniname2ctype_offset(str2248), 602},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2276), 418},
       {-1},
-      {uniname2ctype_offset(str2260), 235},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2268), 597},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2271), 18},
-      {uniname2ctype_offset(str2272), 254},
-      {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str2278), 124},
+      {uniname2ctype_offset(str2279), 192},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2282), 230},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2285), 38},
+      {uniname2ctype_offset(str2283), 214},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2296), 639},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2294), 88},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2302), 368},
-      {-1}, {-1},
       {uniname2ctype_offset(str2305), 205},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2312), 177},
       {-1}, {-1},
-      {uniname2ctype_offset(str2315), 568},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2321), 370},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2339), 600},
+      {uniname2ctype_offset(str2308), 234},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2343), 560},
-      {uniname2ctype_offset(str2344), 82},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2312), 177},
+      {-1}, {-1},
+      {uniname2ctype_offset(str2315), 601},
+      {uniname2ctype_offset(str2316), 638},
+      {-1},
+      {uniname2ctype_offset(str2318), 202},
+      {-1}, {-1},
+      {uniname2ctype_offset(str2321), 153},
+      {-1},
+      {uniname2ctype_offset(str2323), 172},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2357), 237},
+      {uniname2ctype_offset(str2327), 381},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2361), 571},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2364), 309},
-      {uniname2ctype_offset(str2365), 403},
+      {uniname2ctype_offset(str2331), 636},
+      {-1},
+      {uniname2ctype_offset(str2333), 134},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2343), 591},
+      {uniname2ctype_offset(str2344), 442},
+      {uniname2ctype_offset(str2345), 241},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2353), 202},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2361), 606},
+      {-1}, {-1},
+      {uniname2ctype_offset(str2364), 323},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str2373), 37},
-      {uniname2ctype_offset(str2374), 377},
+      {uniname2ctype_offset(str2374), 392},
       {uniname2ctype_offset(str2375), 197},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2378), 237},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1},
-      {uniname2ctype_offset(str2389), 204},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2396), 376},
-      {uniname2ctype_offset(str2397), 406},
-      {uniname2ctype_offset(str2398), 398},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2415), 402},
-      {uniname2ctype_offset(str2416), 366},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2397), 421},
+      {uniname2ctype_offset(str2398), 413},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2405), 165},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2414), 82},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1},
+      {-1}, {-1}, {-1},
       {uniname2ctype_offset(str2427), 23},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2433), 427},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2433), 339},
+      {uniname2ctype_offset(str2434), 154},
+      {-1}, {-1},
+      {uniname2ctype_offset(str2437), 194},
+      {-1}, {-1},
       {uniname2ctype_offset(str2440), 100},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1},
-      {uniname2ctype_offset(str2451), 29},
+      {uniname2ctype_offset(str2451), 103},
       {-1}, {-1},
       {uniname2ctype_offset(str2454), 220},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2460), 257},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2458), 495},
-      {-1},
-      {uniname2ctype_offset(str2460), 246},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2470), 433},
+      {uniname2ctype_offset(str2464), 159},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2470), 448},
       {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str2475), 142},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2479), 346},
-      {uniname2ctype_offset(str2480), 50},
-      {uniname2ctype_offset(str2481), 371},
+      {uniname2ctype_offset(str2476), 558},
+      {-1},
+      {uniname2ctype_offset(str2478), 417},
+      {uniname2ctype_offset(str2479), 361},
+      {-1},
+      {uniname2ctype_offset(str2481), 386},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2506), 511},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2513), 592},
+      {uniname2ctype_offset(str2500), 121},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2519), 466},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2529), 165},
+      {uniname2ctype_offset(str2506), 532},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2534), 325},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2540), 226},
-      {-1},
-      {uniname2ctype_offset(str2542), 125},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2548), 118},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2552), 462},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2561), 435},
-      {uniname2ctype_offset(str2562), 251},
+      {uniname2ctype_offset(str2511), 244},
       {-1},
-      {uniname2ctype_offset(str2564), 357},
-      {-1},
-      {uniname2ctype_offset(str2566), 185},
-      {uniname2ctype_offset(str2567), 304},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2570), 476},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2575), 185},
-      {uniname2ctype_offset(str2576), 99},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2579), 133},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2586), 199},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2595), 327},
+      {uniname2ctype_offset(str2513), 630},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2603), 198},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2606), 359},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2609), 55},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2614), 538},
+      {uniname2ctype_offset(str2530), 82},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2534), 340},
+      {uniname2ctype_offset(str2535), 237},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2624), 226},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2631), 107},
+      {uniname2ctype_offset(str2545), 277},
       {-1}, {-1},
-      {uniname2ctype_offset(str2634), 266},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2643), 437},
-      {uniname2ctype_offset(str2644), 576},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2648), 243},
+      {uniname2ctype_offset(str2548), 118},
+      {uniname2ctype_offset(str2549), 159},
       {-1},
-      {uniname2ctype_offset(str2650), 78},
+      {uniname2ctype_offset(str2551), 89},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2564), 372},
       {-1}, {-1},
-      {uniname2ctype_offset(str2653), 183},
+      {uniname2ctype_offset(str2567), 318},
       {-1}, {-1},
-      {uniname2ctype_offset(str2656), 353},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2663), 182},
+      {uniname2ctype_offset(str2570), 491},
       {-1},
-      {uniname2ctype_offset(str2665), 83},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2668), 94},
+      {uniname2ctype_offset(str2572), 473},
       {-1},
-      {uniname2ctype_offset(str2670), 593},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2673), 84},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2676), 83},
+      {uniname2ctype_offset(str2574), 246},
+      {uniname2ctype_offset(str2575), 474},
+      {uniname2ctype_offset(str2576), 275},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2582), 391},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2588), 154},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2688), 139},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2691), 84},
-      {uniname2ctype_offset(str2692), 211},
-      {-1},
-      {uniname2ctype_offset(str2694), 48},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2602), 210},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2698), 119},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2701), 418},
-      {uniname2ctype_offset(str2702), 89},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2721), 198},
+      {uniname2ctype_offset(str2606), 374},
       {-1},
-      {uniname2ctype_offset(str2723), 4},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2732), 130},
+      {uniname2ctype_offset(str2608), 458},
+      {uniname2ctype_offset(str2609), 55},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2747), 54},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2750), 534},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2625), 262},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2760), 152},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2648), 254},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2764), 241},
+      {uniname2ctype_offset(str2652), 383},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2768), 90},
-      {uniname2ctype_offset(str2769), 468},
+      {uniname2ctype_offset(str2656), 368},
+      {uniname2ctype_offset(str2657), 112},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2777), 28},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2780), 227},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2665), 87},
+      {uniname2ctype_offset(str2666), 50},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2793), 34},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2670), 632},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2674), 87},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2816), 296},
+      {uniname2ctype_offset(str2688), 139},
+      {uniname2ctype_offset(str2689), 641},
       {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2821), 378},
+      {uniname2ctype_offset(str2694), 48},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2834), 349},
+      {-1},
+      {uniname2ctype_offset(str2705), 481},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1},
+      {uniname2ctype_offset(str2726), 226},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2750), 557},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1},
+      {uniname2ctype_offset(str2761), 18},
+      {uniname2ctype_offset(str2762), 265},
+      {-1}, {-1},
+      {uniname2ctype_offset(str2765), 133},
+      {uniname2ctype_offset(str2766), 54},
+      {-1}, {-1},
+      {uniname2ctype_offset(str2769), 483},
+      {-1}, {-1},
+      {uniname2ctype_offset(str2772), 199},
+      {-1}, {-1},
+      {uniname2ctype_offset(str2775), 38},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1},
+      {uniname2ctype_offset(str2786), 4},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2841), 222},
+      {uniname2ctype_offset(str2793), 34},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2801), 29},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2848), 253},
+      {uniname2ctype_offset(str2808), 512},
+      {-1},
+      {uniname2ctype_offset(str2810), 226},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2816), 310},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2821), 393},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2830), 614},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2852), 291},
+      {uniname2ctype_offset(str2834), 364},
+      {-1},
+      {uniname2ctype_offset(str2836), 78},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1},
+      {uniname2ctype_offset(str2847), 248},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2852), 305},
       {-1}, {-1},
       {uniname2ctype_offset(str2855), 190},
       {uniname2ctype_offset(str2856), 66},
       {-1}, {-1},
-      {uniname2ctype_offset(str2859), 412},
+      {uniname2ctype_offset(str2859), 427},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2867), 309},
+      {uniname2ctype_offset(str2868), 248},
       {-1}, {-1},
-      {uniname2ctype_offset(str2862), 211},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2867), 295},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2871), 243},
+      {uniname2ctype_offset(str2871), 254},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2879), 204},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2886), 631},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2883), 242},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2902), 477},
       {-1},
-      {uniname2ctype_offset(str2885), 147},
-      {uniname2ctype_offset(str2886), 133},
+      {uniname2ctype_offset(str2904), 464},
+      {uniname2ctype_offset(str2905), 273},
+      {-1},
+      {uniname2ctype_offset(str2907), 273},
+      {-1},
+      {uniname2ctype_offset(str2909), 577},
+      {-1},
+      {uniname2ctype_offset(str2911), 450},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2904), 449},
-      {uniname2ctype_offset(str2905), 262},
-      {uniname2ctype_offset(str2906), 575},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2909), 549},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2912), 244},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2926), 51},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1},
-      {uniname2ctype_offset(str2938), 242},
-      {-1}, {-1},
-      {uniname2ctype_offset(str2941), 348},
+      {uniname2ctype_offset(str2941), 363},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2963), 225},
-      {uniname2ctype_offset(str2964), 503},
       {-1}, {-1},
+      {uniname2ctype_offset(str2953), 198},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1},
+      {uniname2ctype_offset(str2964), 520},
+      {-1},
+      {uniname2ctype_offset(str2966), 238},
       {uniname2ctype_offset(str2967), 43},
+      {-1}, {-1},
+      {uniname2ctype_offset(str2970), 88},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1},
       {uniname2ctype_offset(str2980), 195},
       {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2984), 547},
+      {uniname2ctype_offset(str2984), 574},
       {-1},
       {uniname2ctype_offset(str2986), 118},
       {uniname2ctype_offset(str2987), 54},
-      {uniname2ctype_offset(str2988), 456},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str2993), 234},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3000), 16},
+      {uniname2ctype_offset(str2988), 471},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str2997), 603},
+      {-1}, {-1}, {-1},
       {uniname2ctype_offset(str3001), 180},
       {uniname2ctype_offset(str3002), 64},
       {-1}, {-1},
-      {uniname2ctype_offset(str3005), 460},
-      {uniname2ctype_offset(str3006), 555},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3012), 80},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3005), 475},
+      {uniname2ctype_offset(str3006), 583},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3015), 83},
+      {-1}, {-1},
+      {uniname2ctype_offset(str3018), 94},
+      {uniname2ctype_offset(str3019), 165},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3028), 250},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3026), 83},
+      {uniname2ctype_offset(str3027), 503},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3045), 577},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3055), 454},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3035), 232},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3089), 146},
+      {uniname2ctype_offset(str3042), 211},
+      {-1}, {-1},
+      {uniname2ctype_offset(str3045), 615},
+      {-1}, {-1},
+      {uniname2ctype_offset(str3048), 119},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3052), 89},
+      {uniname2ctype_offset(str3053), 229},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3058), 185},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3098), 580},
-      {uniname2ctype_offset(str3099), 463},
-      {uniname2ctype_offset(str3100), 103},
-      {uniname2ctype_offset(str3101), 223},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3107), 299},
+      {uniname2ctype_offset(str3067), 185},
+      {uniname2ctype_offset(str3068), 99},
+      {-1}, {-1},
+      {uniname2ctype_offset(str3071), 198},
+      {uniname2ctype_offset(str3072), 133},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3082), 130},
+      {-1},
+      {uniname2ctype_offset(str3084), 237},
+      {-1},
+      {uniname2ctype_offset(str3086), 84},
+      {uniname2ctype_offset(str3087), 342},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3091), 261},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3099), 478},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3104), 84},
       {-1},
-      {uniname2ctype_offset(str3109), 301},
+      {uniname2ctype_offset(str3106), 562},
+      {uniname2ctype_offset(str3107), 313},
       {-1},
+      {uniname2ctype_offset(str3109), 315},
+      {uniname2ctype_offset(str3110), 152},
       {uniname2ctype_offset(str3111), 191},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3118), 90},
       {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3123), 107},
+      {-1},
       {uniname2ctype_offset(str3125), 191},
-      {uniname2ctype_offset(str3126), 99},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3134), 223},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3158), 314},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3165), 439},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3169), 47},
+      {uniname2ctype_offset(str3135), 452},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3176), 381},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3180), 317},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3185), 126},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3194), 204},
+      {uniname2ctype_offset(str3142), 585},
+      {-1}, {-1},
+      {uniname2ctype_offset(str3145), 183},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3155), 182},
       {-1},
-      {uniname2ctype_offset(str3205), 227},
+      {uniname2ctype_offset(str3157), 231},
+      {uniname2ctype_offset(str3158), 328},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3176), 396},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3180), 331},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3193), 433},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str3209), 62},
-      {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1},
+      {uniname2ctype_offset(str3212), 211},
+      {-1}, {-1},
       {uniname2ctype_offset(str3215), 180},
       {-1}, {-1},
-      {uniname2ctype_offset(str3218), 201},
+      {uniname2ctype_offset(str3218), 125},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3237), 375},
+      {uniname2ctype_offset(str3237), 390},
       {-1},
-      {uniname2ctype_offset(str3239), 294},
-      {uniname2ctype_offset(str3240), 290},
+      {uniname2ctype_offset(str3239), 308},
+      {uniname2ctype_offset(str3240), 304},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str3248), 213},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3254), 190},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1},
-      {uniname2ctype_offset(str3266), 421},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3254), 252},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1},
-      {uniname2ctype_offset(str3286), 235},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3265), 610},
       {-1},
-      {uniname2ctype_offset(str3297), 297},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3303), 293},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3309), 178},
+      {uniname2ctype_offset(str3267), 28},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3317), 249},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1},
-      {uniname2ctype_offset(str3328), 63},
-      {uniname2ctype_offset(str3329), 587},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3348), 392},
-      {uniname2ctype_offset(str3349), 423},
-      {-1},
-      {uniname2ctype_offset(str3351), 96},
+      {uniname2ctype_offset(str3275), 146},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3360), 234},
+      {uniname2ctype_offset(str3284), 618},
       {-1}, {-1},
-      {uniname2ctype_offset(str3363), 96},
-      {-1},
-      {uniname2ctype_offset(str3365), 578},
+      {uniname2ctype_offset(str3287), 223},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3297), 311},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3303), 307},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3313), 255},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3320), 223},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3328), 63},
+      {uniname2ctype_offset(str3329), 625},
+      {-1},
+      {uniname2ctype_offset(str3331), 222},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3338), 264},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3348), 407},
+      {-1},
+      {uniname2ctype_offset(str3350), 501},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3355), 47},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3360), 337},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1},
+      {uniname2ctype_offset(str3371), 126},
+      {uniname2ctype_offset(str3372), 16},
+      {uniname2ctype_offset(str3373), 253},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3377), 147},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3391), 238},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3396), 613},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3405), 469},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1},
+      {uniname2ctype_offset(str3416), 51},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1},
+      {uniname2ctype_offset(str3428), 253},
       {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str3433), 205},
       {-1}, {-1},
       {uniname2ctype_offset(str3436), 213},
-      {-1}, {-1},
-      {uniname2ctype_offset(str3439), 49},
-      {-1}, {-1},
-      {uniname2ctype_offset(str3442), 464},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3455), 225},
+      {-1}, {-1},
       {uniname2ctype_offset(str3458), 10},
       {-1},
-      {uniname2ctype_offset(str3460), 589},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3460), 627},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3483), 245},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3502), 49},
+      {-1},
+      {uniname2ctype_offset(str3504), 80},
+      {uniname2ctype_offset(str3505), 479},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3511), 396},
-      {uniname2ctype_offset(str3512), 487},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3517), 179},
+      {uniname2ctype_offset(str3511), 411},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3531), 153},
-      {uniname2ctype_offset(str3532), 550},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1},
+      {uniname2ctype_offset(str3532), 578},
       {uniname2ctype_offset(str3533), 57},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3550), 41},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str3558), 59},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3580), 179},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3590), 103},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3613), 41},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3618), 99},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3613), 214},
-      {uniname2ctype_offset(str3614), 220},
-      {-1},
-      {uniname2ctype_offset(str3616), 45},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1},
-      {uniname2ctype_offset(str3628), 71},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3648), 465},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1},
-      {uniname2ctype_offset(str3648), 450},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3659), 178},
+      {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str3664), 177},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3686), 204},
       {-1}, {-1},
-      {uniname2ctype_offset(str3703), 132},
-      {-1},
-      {uniname2ctype_offset(str3705), 306},
+      {uniname2ctype_offset(str3689), 246},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3714), 132},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3698), 504},
+      {uniname2ctype_offset(str3699), 552},
+      {-1},
+      {uniname2ctype_offset(str3701), 96},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3705), 320},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3710), 201},
+      {-1}, {-1},
+      {uniname2ctype_offset(str3713), 96},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3721), 438},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3744), 190},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3754), 71},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3766), 452},
+      {-1}, {-1},
+      {uniname2ctype_offset(str3766), 467},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3791), 65},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3805), 250},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3799), 214},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3807), 260},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3819), 162},
-      {-1},
-      {uniname2ctype_offset(str3821), 292},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str3842), 182},
       {-1}, {-1},
-      {uniname2ctype_offset(str3845), 248},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3845), 259},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3850), 245},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3854), 65},
+      {-1}, {-1},
+      {uniname2ctype_offset(str3857), 616},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1},
+      {uniname2ctype_offset(str3868), 261},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3881), 228},
+      {-1}, {-1},
+      {uniname2ctype_offset(str3884), 306},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str3891), 30},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3924), 405},
+      {uniname2ctype_offset(str3924), 420},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {uniname2ctype_offset(str3942), 100},
+      {-1},
+      {uniname2ctype_offset(str3944), 436},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3949), 276},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3976), 604},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3976), 570},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str3998), 430},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4007), 454},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str3995), 147},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
@@ -41477,99 +45355,115 @@ uniname2ctype_p (register const char *str, register size_t len)
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4106), 45},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4116), 132},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1},
-      {uniname2ctype_offset(str4087), 415},
+      {uniname2ctype_offset(str4127), 132},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4109), 119},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4169), 220},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4137), 244},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4162), 544},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4175), 545},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4231), 153},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4203), 80},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4254), 116},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4276), 116},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4308), 401},
+      {uniname2ctype_offset(str4309), 162},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4291), 302},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1},
-      {uniname2ctype_offset(str4321), 75},
+      {uniname2ctype_offset(str4348), 571},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4361), 572},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1},
-      {uniname2ctype_offset(str4360), 231},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4397), 386},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4405), 298},
-      {uniname2ctype_offset(str4406), 300},
+      {uniname2ctype_offset(str4459), 119},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4487), 147},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4460), 90},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4485), 179},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4528), 46},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4604), 116},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4626), 116},
+      {uniname2ctype_offset(str4627), 255},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1},
+      {uniname2ctype_offset(str4674), 642},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4683), 466},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1},
+      {uniname2ctype_offset(str4695), 80},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1},
+      {uniname2ctype_offset(str4734), 179},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1},
+      {uniname2ctype_offset(str4755), 312},
+      {uniname2ctype_offset(str4756), 314},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4772), 409},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1},
-      {uniname2ctype_offset(str4674), 601},
+      {uniname2ctype_offset(str4783), 316},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4683), 451},
+      {uniname2ctype_offset(str4810), 90},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
@@ -41579,8 +45473,8 @@ uniname2ctype_p (register const char *str, register size_t len)
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4772), 394},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4898), 75},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
@@ -41590,18 +45484,31 @@ uniname2ctype_p (register const char *str, register size_t len)
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1},
+      {uniname2ctype_offset(str4982), 232},
+      {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str4986), 428},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str5018), 46},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1},
+      {uniname2ctype_offset(str5038), 242},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4948), 590},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str5134), 628},
 #endif /* USE_UNICODE_PROPERTIES */
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
 #ifndef USE_UNICODE_PROPERTIES
@@ -41621,31 +45528,7 @@ uniname2ctype_p (register const char *str, register size_t len)
       {uniname2ctype_offset(str19), 4},
       {uniname2ctype_offset(str20), 2}
 #else /* USE_UNICODE_PROPERTIES */
-      {uniname2ctype_offset(str4955), 155},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str4986), 413},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1},
-      {uniname2ctype_offset(str5114), 225},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str5141), 155},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
@@ -41663,6 +45546,8 @@ uniname2ctype_p (register const char *str, register size_t len)
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str5300), 225},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
@@ -41697,8 +45582,6 @@ uniname2ctype_p (register const char *str, register size_t len)
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str5608), 155},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
@@ -41740,6 +45623,8 @@ uniname2ctype_p (register const char *str, register size_t len)
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1},
+      {uniname2ctype_offset(str5980), 155},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
@@ -41753,8 +45638,7 @@ uniname2ctype_p (register const char *str, register size_t len)
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
       {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
-      {-1}, {-1}, {-1},
-      {uniname2ctype_offset(str6098), 602}
+      {uniname2ctype_offset(str6098), 643}
 #endif /* USE_UNICODE_PROPERTIES */
     };
 
@@ -41785,13 +45669,13 @@ uniname2ctype(const UChar *name, unsigned int len)
   return -1;
 }
 #if defined ONIG_UNICODE_VERSION_STRING && !( \
-      ONIG_UNICODE_VERSION_MAJOR == 12 && \
-      ONIG_UNICODE_VERSION_MINOR == 1 && \
+      ONIG_UNICODE_VERSION_MAJOR == 15 && \
+      ONIG_UNICODE_VERSION_MINOR == 0 && \
       ONIG_UNICODE_VERSION_TEENY == 0 && \
       1)
 # error ONIG_UNICODE_VERSION_STRING mismatch
 #endif
-#define ONIG_UNICODE_VERSION_STRING "12.1.0"
-#define ONIG_UNICODE_VERSION_MAJOR 12
-#define ONIG_UNICODE_VERSION_MINOR 1
+#define ONIG_UNICODE_VERSION_STRING "15.0.0"
+#define ONIG_UNICODE_VERSION_MAJOR 15
+#define ONIG_UNICODE_VERSION_MINOR 0
 #define ONIG_UNICODE_VERSION_TEENY 0
diff --git a/lib/onigmo/onigmo.h b/lib/onigmo/onigmo.h
index d1d705ff34e..aa96a9fe092 100644
--- a/lib/onigmo/onigmo.h
+++ b/lib/onigmo/onigmo.h
@@ -357,8 +357,11 @@ int onigenc_ascii_only_case_map(OnigCaseFoldType* flagP, const OnigUChar** pp, c
 
 ONIG_EXTERN
 int onigenc_mbclen_approximate(const OnigUChar* p,const OnigUChar* e, const struct OnigEncodingTypeST* enc);
+ONIG_EXTERN
+int onigenc_mbclen(const OnigUChar* p,const OnigUChar* e, const struct OnigEncodingTypeST* enc);
 
-#define ONIGENC_MBC_ENC_LEN(enc,p,e)           onigenc_mbclen_approximate(p,e,enc)
+#define ONIGENC_MBC_ENC_LEN_APPROX(enc,p,e)   onigenc_mbclen_approximate(p,e,enc)
+#define ONIGENC_MBC_ENC_LEN(enc,p,e)          onigenc_mbclen(p,e,enc)
 #define ONIGENC_MBC_MAXLEN(enc)               ((enc)->max_enc_len)
 #define ONIGENC_MBC_MAXLEN_DIST(enc)           ONIGENC_MBC_MAXLEN(enc)
 #define ONIGENC_MBC_MINLEN(enc)               ((enc)->min_enc_len)
diff --git a/lib/onigmo/regcomp.c b/lib/onigmo/regcomp.c
index 177977ec5c2..c8b8943a56d 100644
--- a/lib/onigmo/regcomp.c
+++ b/lib/onigmo/regcomp.c
@@ -3747,10 +3747,8 @@ setup_comb_exp_check(Node* node, int state, ScanEnv* env)
   switch (type) {
   case NT_LIST:
     {
-      Node* prev = NULL_NODE;
       do {
 	r = setup_comb_exp_check(NCAR(node), r, env);
-	prev = NCAR(node);
       } while (r >= 0 && IS_NOT_NULL(node = NCDR(node)));
     }
     break;
diff --git a/lib/onigmo/regenc.c b/lib/onigmo/regenc.c
index 8cbb3dca28c..91944f8ed62 100644
--- a/lib/onigmo/regenc.c
+++ b/lib/onigmo/regenc.c
@@ -51,6 +51,21 @@ onigenc_set_default_encoding(OnigEncoding enc)
   return 0;
 }
 
+extern int
+onigenc_mbclen(const OnigUChar* p,const OnigUChar* e, OnigEncoding enc)
+{
+  int ret = ONIGENC_PRECISE_MBC_ENC_LEN(enc, p, e);
+  if (ONIGENC_MBCLEN_CHARFOUND_P(ret)) {
+    ret = ONIGENC_MBCLEN_CHARFOUND_LEN(ret);
+    if (ret > (int)(e - p)) ret = (int)(e - p); // just for case
+    return ret;
+  }
+  else if (ONIGENC_MBCLEN_NEEDMORE_P(ret)) {
+    return (int)(e - p);
+  }
+  return p < e ? 1 : 0;
+}
+
 extern int
 onigenc_mbclen_approximate(const OnigUChar* p,const OnigUChar* e, OnigEncoding enc)
 {
diff --git a/lib/onigmo/regenc.h b/lib/onigmo/regenc.h
index 56eb968d0b2..ca25d837fa3 100644
--- a/lib/onigmo/regenc.h
+++ b/lib/onigmo/regenc.h
@@ -91,6 +91,7 @@ typedef struct {
 #define ONIG_CHECK_NULL_RETURN_VAL(p,val)  if (ONIG_IS_NULL(p)) return (val)
 
 #define enclen(enc,p,e) ((enc->max_enc_len == enc->min_enc_len) ? enc->min_enc_len : ONIGENC_MBC_ENC_LEN(enc,p,e))
+#define enclen_approximate(enc,p,e) ((enc->max_enc_len == enc->min_enc_len) ? enc->min_enc_len : ONIGENC_MBC_ENC_LEN_APPROX(enc,p,e))
 
 /* character types bit flag */
 #define BIT_CTYPE_NEWLINE  (1<< ONIGENC_CTYPE_NEWLINE)
diff --git a/lib/onigmo/regexec.c b/lib/onigmo/regexec.c
index 9b3e7e62452..d408f61997c 100644
--- a/lib/onigmo/regexec.c
+++ b/lib/onigmo/regexec.c
@@ -421,6 +421,7 @@ onig_region_copy(OnigRegion* to, const OnigRegion* from)
   (msa).start    = (arg_start);\
   (msa).gpos     = (arg_gpos);\
   (msa).best_len = ONIG_MISMATCH;\
+  (msa).counter  = 0;\
 } while(0)
 #else
 # define MATCH_ARG_INIT(msa, arg_option, arg_region, arg_start, arg_gpos) do {\
@@ -429,6 +430,7 @@ onig_region_copy(OnigRegion* to, const OnigRegion* from)
   (msa).region   = (arg_region);\
   (msa).start    = (arg_start);\
   (msa).gpos     = (arg_gpos);\
+  (msa).counter  = 0;\
 } while(0)
 #endif
 
@@ -601,7 +603,7 @@ stack_double(OnigStackType** arg_stk_base, OnigStackType** arg_stk_end,
   (((s) - str) * num_comb_exp_check + ((snum) - 1))
 # define STATE_CHECK_VAL(v,snum) do {\
   if (state_check_buff != NULL) {\
-    int x = STATE_CHECK_POS(s,snum);\
+    ptrdiff_t x = STATE_CHECK_POS(s,snum);\
     (v) = state_check_buff[x/8] & (1<<(x%8));\
   }\
   else (v) = 0;\
@@ -610,7 +612,7 @@ stack_double(OnigStackType** arg_stk_base, OnigStackType** arg_stk_end,
 
 # define ELSE_IF_STATE_CHECK_MARK(stk) \
   else if ((stk)->type == STK_STATE_CHECK_MARK) { \
-    int x = STATE_CHECK_POS(stk->u.state.pstr, stk->u.state.state_check);\
+    ptrdiff_t x = STATE_CHECK_POS(stk->u.state.pstr, stk->u.state.state_check);\
     state_check_buff[x/8] |= (1<<(x%8));				\
   }
 
@@ -1176,11 +1178,13 @@ static int string_cmp_ic(OnigEncoding enc, int case_fold_flag,
 # define DATA_ENSURE_CHECK1    (s < right_range)
 # define DATA_ENSURE_CHECK(n)  (s + (n) <= right_range)
 # define DATA_ENSURE(n)        if (s + (n) > right_range) goto fail
+# define DATA_ENSURE_CONTINUE(n) if (s + (n) > right_range) continue
 # define ABSENT_END_POS        right_range
 #else
 # define DATA_ENSURE_CHECK1    (s < end)
 # define DATA_ENSURE_CHECK(n)  (s + (n) <= end)
 # define DATA_ENSURE(n)        if (s + (n) > end) goto fail
+# define DATA_ENSURE_CONTINUE(n) if (s + (n) > end) continue
 # define ABSENT_END_POS        end
 #endif /* USE_MATCH_RANGE_MUST_BE_INSIDE_OF_SPECIFIED_RANGE */
 
@@ -2633,7 +2637,7 @@ match_at(regex_t* reg, const UChar* str, const UChar* end,
 		  ? STACK_AT(mem_end_stk[mem])->u.mem.pstr
 		  : (UChar* )((void* )mem_end_stk[mem]));
 	  n = pend - pstart;
-	  DATA_ENSURE(n);
+	  DATA_ENSURE_CONTINUE(n);
 	  sprev = s;
 	  swork = s;
 	  STRING_CMP_VALUE(pstart, swork, n, is_fail);
@@ -2672,7 +2676,7 @@ match_at(regex_t* reg, const UChar* str, const UChar* end,
 		  ? STACK_AT(mem_end_stk[mem])->u.mem.pstr
 		  : (UChar* )((void* )mem_end_stk[mem]));
 	  n = pend - pstart;
-	  DATA_ENSURE(n);
+	  DATA_ENSURE_CONTINUE(n);
 	  sprev = s;
 	  swork = s;
 	  STRING_CMP_VALUE_IC(case_fold_flag, pstart, &swork, n, end, is_fail);
@@ -3088,7 +3092,8 @@ match_at(regex_t* reg, const UChar* str, const UChar* end,
 	}
 	else {
 	  STACK_PUSH_ALT(p + addr, s, sprev, pkeep); /* Push possible point. */
-	  n = enclen(encode, s, end);
+	  /* For approximating enclen. Strict version of enclen does not work here. */
+	  n = enclen_approximate(encode, s, end);
 	  STACK_PUSH_ABSENT_POS(absent, ABSENT_END_POS); /* Save the original pos. */
 	  STACK_PUSH_ALT(selfp, s + n, s, pkeep); /* Next iteration. */
 	  STACK_PUSH_ABSENT;
@@ -3159,6 +3164,7 @@ match_at(regex_t* reg, const UChar* str, const UChar* end,
 #endif
 
       MOP_OUT;
+      CHECK_INTERRUPT_IN_MATCH_AT;
       JUMP;
 
     DEFAULT
@@ -3525,7 +3531,7 @@ onig_match(regex_t* reg, const UChar* str, const UChar* end, const UChar* at, On
   MATCH_ARG_INIT(msa, option, region, at, at);
 #ifdef USE_COMBINATION_EXPLOSION_CHECK
   {
-    int offset = at - str;
+    ptrdiff_t offset = at - str;
     STATE_CHECK_BUFF_INIT(msa, end - str, offset, reg->num_comb_exp_check);
   }
 #endif
@@ -3990,7 +3996,7 @@ onig_search_gpos(regex_t* reg, const UChar* str, const UChar* end,
   MATCH_ARG_INIT(msa, option, region, start, global_pos);
 #ifdef USE_COMBINATION_EXPLOSION_CHECK
   {
-    int offset = (MIN(start, range) - str);
+    ptrdiff_t offset = (MIN(start, range) - str);
     STATE_CHECK_BUFF_INIT(msa, end - str, offset, reg->num_comb_exp_check);
   }
 #endif
diff --git a/lib/onigmo/regint.h b/lib/onigmo/regint.h
index a58d3b8f000..9bd97fe36e2 100644
--- a/lib/onigmo/regint.h
+++ b/lib/onigmo/regint.h
@@ -147,7 +147,13 @@
 
 #ifdef RUBY
 
-# define CHECK_INTERRUPT_IN_MATCH_AT rb_thread_check_ints()
+# define CHECK_INTERRUPT_IN_MATCH_AT do { \
+  msa->counter++;                         \
+  if (msa->counter >= 128) {              \
+    msa->counter = 0;                     \
+    rb_thread_check_ints();               \
+  }                                       \
+} while(0)
 # define onig_st_init_table                  st_init_table
 # define onig_st_init_table_with_size        st_init_table_with_size
 # define onig_st_init_numtable               st_init_numtable
@@ -877,6 +883,7 @@ typedef struct {
   void* state_check_buff;
   int   state_check_buff_size;
 #endif
+  int counter;
 } OnigMatchArg;
 
 
diff --git a/lib/onigmo/regparse.c b/lib/onigmo/regparse.c
index 49b7e9c841d..d8a7752bfbc 100644
--- a/lib/onigmo/regparse.c
+++ b/lib/onigmo/regparse.c
@@ -4659,7 +4659,15 @@ parse_char_class(Node** np, Node** asc_np, OnigToken* tok, UChar** src, UChar* e
 	  goto err;
 	}
 
-	len = enclen(env->enc, buf, buf + i);
+	if (env->enc == ONIG_ENCODING_EUC_JP ||
+		env->enc == ONIG_ENCODING_SJIS) {
+	  /* Strict version of enclen does not handle invalid single code
+	   * point for SJIS and EUC-JP...*/
+	  len = enclen_approximate(env->enc, buf, buf + i);
+	}
+	else {
+	  len = enclen(env->enc, buf, buf + i);
+	}
 	if (i < len) {
 	  r = ONIGERR_TOO_SHORT_MULTI_BYTE_STRING;
 	  goto err;
diff --git a/lib/onigmo/tool/Makefile b/lib/onigmo/tool/Makefile
index 38390ceea52..cca6e732cee 100644
--- a/lib/onigmo/tool/Makefile
+++ b/lib/onigmo/tool/Makefile
@@ -1,5 +1,5 @@
-UNICODE_VERSION = 12.1.0
-EMOJI_VERSION = 12.0
+UNICODE_VERSION = 15.0.0
+EMOJI_VERSION = 15.0.0
 
 PROP_FILES = \
 	    $(UNICODE_VERSION)/Blocks.txt \
diff --git a/lib/onigmo/tool/case-folding.rb b/lib/onigmo/tool/case-folding.rb
index e0e9e3d1aee..c299074f012 100755
--- a/lib/onigmo/tool/case-folding.rb
+++ b/lib/onigmo/tool/case-folding.rb
@@ -232,7 +232,7 @@ def initialize(mapping_directory)
     @version = nil
     IO.foreach(File.join(mapping_directory, 'UnicodeData.txt'), mode: "rb") do |line|
       next if line =~ /^</
-      code, _1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11, upper, lower, title = line.chomp.split ';'
+      code, __1,__2,__3,__4,__5,__6,__7,__8,__9,__10,__11, upper, lower, title = line.chomp.split ';'
       unless upper and lower and title and (upper+lower+title)==''
         @mappings[code] = MapItem.new(code, upper, lower, title)
       end
diff --git a/lib/onigmo/tool/download-ucd.sh b/lib/onigmo/tool/download-ucd.sh
index 4f60dafe83d..b6b46581f89 100755
--- a/lib/onigmo/tool/download-ucd.sh
+++ b/lib/onigmo/tool/download-ucd.sh
@@ -26,5 +26,5 @@ for i in $files; do
 done | xargs wget
 mv GraphemeBreakProperty.txt auxiliary
 for i in $emoji_files; do
-	echo http://www.unicode.org/Public/emoji/${EMOJI_VERSION}/$i
+	echo http://www.unicode.org/Public/${EMOJI_VERSION}/ucd/emoji/$i
 done | xargs wget
diff --git a/lib/onigmo/tool/update-doc.py b/lib/onigmo/tool/update-doc.py
index f66791d2537..4126adff48d 100755
--- a/lib/onigmo/tool/update-doc.py
+++ b/lib/onigmo/tool/update-doc.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # -*- coding: utf-8 -*-
 
 # Usage:
@@ -10,7 +10,7 @@
 import re
 import datetime
 
-onig_ver = "6.2.1"
+onig_ver = "6.2.2"
 ucddir = "."
 
 def print_list(arr, title):
