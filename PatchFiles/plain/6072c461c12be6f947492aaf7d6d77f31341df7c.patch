From 6072c461c12be6f947492aaf7d6d77f31341df7c Mon Sep 17 00:00:00 2001
From: Yermalayeu Ihar <ermig@tut.by>
Date: Wed, 19 Jan 2022 11:23:34 +0300
Subject: [PATCH] *fix bug: Error in SSE4.1, AVX2, AVX-512BW optimizations of
 function BgraToRgba.

---
 docs/2022.html                     | 4 ++++
 src/Simd/SimdAvx2BgraToBgr.cpp     | 4 ++--
 src/Simd/SimdAvx512bwBgraToBgr.cpp | 2 +-
 src/Simd/SimdSse41BgraToBgr.cpp    | 4 ++--
 src/Test/TestResize.cpp            | 2 +-
 5 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/docs/2022.html b/docs/2022.html
index 0c7b7ed2f..a4e0e84a0 100644
--- a/docs/2022.html
+++ b/docs/2022.html
@@ -39,6 +39,10 @@ <h5>New features</h5>
 <ul>
  <li>Base implementation of ResizerByteBicubic class.</li>
 </ul>
+<h5>Bug fixing</h5>
+<ul>
+ <li>Error in SSE4.1, AVX2, AVX-512BW optimizations of function BgraToRgba.</li>
+</ul>
 
 <a href="#HOME">Home</a> 
 <hr/>
diff --git a/src/Simd/SimdAvx2BgraToBgr.cpp b/src/Simd/SimdAvx2BgraToBgr.cpp
index aac574d71..1b16e6fee 100644
--- a/src/Simd/SimdAvx2BgraToBgr.cpp
+++ b/src/Simd/SimdAvx2BgraToBgr.cpp
@@ -128,10 +128,10 @@ namespace Simd
 
             for (size_t row = 0; row < height; ++row)
             {
-                for (size_t i = 0; i < size; i += A)
+                for (size_t i = 0; i < sizeA; i += A)
                     BgraToRgba<align>(bgra + i, rgba + i);
                 if (size != sizeA)
-                    BgraToRgba<false>(bgra + size - sizeA, rgba + size - sizeA);
+                    BgraToRgba<false>(bgra + size - A, rgba + size - A);
                 bgra += bgraStride;
                 rgba += rgbaStride;
             }
diff --git a/src/Simd/SimdAvx512bwBgraToBgr.cpp b/src/Simd/SimdAvx512bwBgraToBgr.cpp
index 335af4251..467a852bc 100644
--- a/src/Simd/SimdAvx512bwBgraToBgr.cpp
+++ b/src/Simd/SimdAvx512bwBgraToBgr.cpp
@@ -173,7 +173,7 @@ namespace Simd
             for (size_t row = 0; row < height; ++row)
             {
                 size_t i = 0;
-                for (; i < size; i += A)
+                for (; i < sizeA; i += A)
                     BgraToRgba<align, false>(bgra + i, rgba + i);
                 if (i < size)
                     BgraToRgba<align, true>(bgra + i, rgba + i, tail);
diff --git a/src/Simd/SimdSse41BgraToBgr.cpp b/src/Simd/SimdSse41BgraToBgr.cpp
index a3000972e..1e0820d85 100644
--- a/src/Simd/SimdSse41BgraToBgr.cpp
+++ b/src/Simd/SimdSse41BgraToBgr.cpp
@@ -144,10 +144,10 @@ namespace Simd
 
             for (size_t row = 0; row < height; ++row)
             {
-                for (size_t i = 0; i < size; i += A)
+                for (size_t i = 0; i < sizeA; i += A)
                     BgraToRgba<align>(bgra + i, rgba + i);
                 if (size != sizeA)
-                    BgraToRgba<false>(bgra + size - sizeA, rgba + size - sizeA);
+                    BgraToRgba<false>(bgra + size - A, rgba + size - A);
                 bgra += bgraStride;
                 rgba += rgbaStride;
             }
diff --git a/src/Test/TestResize.cpp b/src/Test/TestResize.cpp
index 785ccdb0b..507615d2b 100644
--- a/src/Test/TestResize.cpp
+++ b/src/Test/TestResize.cpp
@@ -323,7 +323,7 @@ namespace Test
         bool result = true;
 
 #if !defined(__aarch64__) || 1  
-        std::vector<SimdResizeMethodType> methods = { /*SimdResizeMethodNearest, SimdResizeMethodBilinear, */SimdResizeMethodBicubic/*, SimdResizeMethodArea*/};
+        std::vector<SimdResizeMethodType> methods = { /*SimdResizeMethodNearest, */SimdResizeMethodBilinear, SimdResizeMethodBicubic/*, SimdResizeMethodArea*/};
         for (size_t m = 0; m < methods.size(); ++m)
         {
             result = result && ResizerAutoTest(methods[m], SimdResizeChannelByte, 1, f1, f2);
