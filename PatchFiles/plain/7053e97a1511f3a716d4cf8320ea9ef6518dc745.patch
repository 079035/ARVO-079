commit 7053e97a1511f3a716d4cf8320ea9ef6518dc745
Author: thomp-j <58603847+thomp-j@users.noreply.github.com>
Date:   Sun Aug 6 00:33:08 2023 -0400

    Fix vulnerabilities found by fuzzer. (#6579)
    
    * Fix vulnerabilities found by fuzzer.
    
    * Fix Typo in RWMol.cpp
    
    * Update RWMol.cpp
    
    This is an attempt to double check where the test failure is coming from.
    
    * Update RWMol.cpp
    
    Re-adding changes to test tests.

diff --git a/Code/GraphMol/FileParsers/MolFileParser.cpp b/Code/GraphMol/FileParsers/MolFileParser.cpp
index c28567d06..b383df6b0 100644
--- a/Code/GraphMol/FileParsers/MolFileParser.cpp
+++ b/Code/GraphMol/FileParsers/MolFileParser.cpp
@@ -302,6 +302,12 @@ void ParseOldAtomList(RWMol *mol, const std::string_view &text,
   int nQueries;
   try {
     nQueries = FileParserUtils::toInt(text.substr(9, 1));
+  } catch (const std::out_of_range &) {
+    delete q;
+    std::ostringstream errout;
+    errout << "Cannot convert position 9 of '" << text << "' to int on line "
+           << line;
+    throw FileParseException(errout.str());
   } catch (boost::bad_lexical_cast &) {
     delete q;
     std::ostringstream errout;
@@ -316,6 +322,12 @@ void ParseOldAtomList(RWMol *mol, const std::string_view &text,
     int atNum;
     try {
       atNum = FileParserUtils::toInt(text.substr(pos, 3));
+    } catch (const std::out_of_range &) {
+      delete q;
+      std::ostringstream errout;
+      errout << "Cannot convert position " << pos << " of '" << text
+             << "' to int on line " << line;
+      throw FileParseException(errout.str());
     } catch (boost::bad_lexical_cast &) {
       delete q;
       std::ostringstream errout;
diff --git a/Code/GraphMol/RWMol.cpp b/Code/GraphMol/RWMol.cpp
index 858bf5b4a..e92e6cc5e 100644
--- a/Code/GraphMol/RWMol.cpp
+++ b/Code/GraphMol/RWMol.cpp
@@ -158,10 +158,12 @@ void RWMol::replaceAtom(unsigned int idx, Atom *atom_pin, bool,
   for (auto &group : d_stereo_groups) {
     auto atoms = group.getAtoms();
     auto aiter = std::find(atoms.begin(), atoms.end(), orig_p);
-    if (aiter != atoms.end()) {
+    while (aiter != atoms.end()) {
       *aiter = atom_p;
-      group = StereoGroup(group.getGroupType(), std::move(atoms));
+      ++aiter;
+      aiter = std::find(aiter, atoms.end(), orig_p);
     }
+    group = StereoGroup(group.getGroupType(), std::move(atoms));
   }
 };
 
