From 5a65e3d8322f16eb50fdf2ece0481bd9714313da Mon Sep 17 00:00:00 2001
From: Nathan Moinvaziri <nathan@nathanm.com>
Date: Tue, 26 Jan 2021 20:25:52 -0800
Subject: [PATCH] Fixed ASAN heap-buffer-overflow when reading frame index
 chunk. https://oss-fuzz.com/testcase-detail/5963546544439296

---
 blosc/blosc2.c |  5 +++++
 blosc/frame.c  | 10 ++++------
 2 files changed, 9 insertions(+), 6 deletions(-)

diff --git a/blosc/blosc2.c b/blosc/blosc2.c
index f909e9b55..996062cfa 100644
--- a/blosc/blosc2.c
+++ b/blosc/blosc2.c
@@ -2673,6 +2673,11 @@ int blosc2_getitem_ctx(blosc2_context* context, const void* src, int32_t srcsize
   uint8_t* _src = (uint8_t*)(src);
   int result;
 
+  if (srcsize < BLOSC_MIN_HEADER_LENGTH) {
+    /* Not enough input to parse Blosc1 header */
+    return -1;
+  }
+
   /* Minimally populate the context */
   context->typesize = _src[BLOSC2_CHUNK_TYPESIZE];
   context->blocksize = sw32_(_src + BLOSC2_CHUNK_BLOCKSIZE);
diff --git a/blosc/frame.c b/blosc/frame.c
index 79b015a32..6832cd2c7 100644
--- a/blosc/frame.c
+++ b/blosc/frame.c
@@ -914,17 +914,15 @@ uint8_t* get_coffsets(blosc2_frame *frame, int32_t header_len, int64_t cbytes, i
     return frame->coffsets;
   }
   if (frame->sdata != NULL) {
-    if (header_len + cbytes > frame->len) {
+    int32_t off_pos = header_len + cbytes;
+    // Check that there is enough room to read Blosc header
+    if (off_pos + BLOSC_EXTENDED_HEADER_LENGTH > frame->len) {
       BLOSC_TRACE_ERROR("Cannot read the offsets past frame boundary.");
       return NULL;
     }
     // For in-memory frames, the coffset is just one pointer away
-    uint8_t* off_start = frame->sdata + header_len + cbytes;
+    uint8_t* off_start = frame->sdata + off_pos;
     if (off_cbytes != NULL) {
-      if (header_len + cbytes + BLOSC2_CHUNK_CBYTES + (signed)sizeof(int32_t) > frame->len) {
-        BLOSC_TRACE_ERROR("Cannot read the offsets compressed size past frame boundary.");
-        return NULL;
-      }
       *off_cbytes = *(int32_t*) (off_start + BLOSC2_CHUNK_CBYTES);
     }
     return off_start;
