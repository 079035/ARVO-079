From 86a550dc7e182a53eb950278b42d0243b7185f73 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Sun, 25 Jun 2023 17:01:40 -0600
Subject: [PATCH] [subset/cff1] Speed up string writing

---
 src/hb-ot-cff1-table.hh | 10 +++++-----
 src/hb-subset-cff1.cc   | 17 ++++++++++++++++-
 2 files changed, 21 insertions(+), 6 deletions(-)

diff --git a/src/hb-ot-cff1-table.hh b/src/hb-ot-cff1-table.hh
index 6a9dcc663eb..8896a66871a 100644
--- a/src/hb-ot-cff1-table.hh
+++ b/src/hb-ot-cff1-table.hh
@@ -639,10 +639,10 @@ struct Charset
 struct CFF1StringIndex : CFF1Index
 {
   bool serialize (hb_serialize_context_t *c, const CFF1StringIndex &strings,
-		  const hb_map_t &sidmap)
+		  const hb_vector_t<unsigned> &sidmap)
   {
     TRACE_SERIALIZE (this);
-    if (unlikely ((strings.count == 0) || (sidmap.get_population () == 0)))
+    if (unlikely ((strings.count == 0) || (sidmap.length == 0)))
     {
       if (unlikely (!c->extend_min (this->count)))
 	return_trace (false);
@@ -653,10 +653,10 @@ struct CFF1StringIndex : CFF1Index
     if (unlikely (sidmap.in_error ())) return_trace (false);
 
     hb_vector_t<hb_ubytes_t> bytesArray;
-    if (!bytesArray.resize (sidmap.get_population (), false))
+    if (!bytesArray.resize (sidmap.length, false))
       return_trace (false);
-    for (auto _ : sidmap)
-      bytesArray.arrayZ[_.second] = strings[_.first];
+    for (auto _ : hb_enumerate (sidmap))
+      bytesArray.arrayZ[_.first] = strings[_.second];
 
     bool result = CFF1Index::serialize (c, bytesArray);
     return_trace (result);
diff --git a/src/hb-subset-cff1.cc b/src/hb-subset-cff1.cc
index 74cfc5ad3da..079352d46d5 100644
--- a/src/hb-subset-cff1.cc
+++ b/src/hb-subset-cff1.cc
@@ -40,6 +40,15 @@ using namespace CFF;
 
 struct remap_sid_t : hb_map_t
 {
+  void resize (unsigned size)
+  {
+    hb_map_t::resize (size);
+    vector.alloc (size);
+  }
+
+  bool in_error () const
+  { return hb_map_t::in_error () || vector.in_error (); }
+
   unsigned int add (unsigned int sid)
   {
     if ((sid != CFF_UNDEF_SID) && !is_std_std (sid))
@@ -47,7 +56,10 @@ struct remap_sid_t : hb_map_t
       sid = unoffset_sid (sid);
       unsigned v = next;
       if (set (sid, v, false))
+      {
+        vector.push (sid);
         next++;
+      }
       else
         v = get (sid); // already exists
       return offset_sid (v);
@@ -70,6 +82,8 @@ struct remap_sid_t : hb_map_t
   static unsigned int offset_sid (unsigned int sid) { return sid + num_std_strings; }
   static unsigned int unoffset_sid (unsigned int sid) { return sid - num_std_strings; }
   unsigned next = 0;
+
+  hb_vector_t<unsigned> vector;
 };
 
 struct cff1_sub_table_info_t : cff_sub_table_info_t
@@ -903,7 +917,8 @@ OT::cff1::accelerator_subset_t::serialize (hb_serialize_context_t *c,
   /* String INDEX */
   {
     auto *dest = c->push<CFF1StringIndex> ();
-    if (likely (dest->serialize (c, *stringIndex, plan.sidmap)))
+    if (likely (!plan.sidmap.in_error () &&
+		dest->serialize (c, *stringIndex, plan.sidmap.vector)))
       c->pop_pack ();
     else
     {
