From 8a6467c1da264ec8420d776d667fda3a3b04b601 Mon Sep 17 00:00:00 2001
From: g0483hqg3 <61545863+g0483hqg3@users.noreply.github.com>
Date: Tue, 30 Jun 2020 02:02:31 +0200
Subject: [PATCH] ensure that data_index is within the bounds (#2215)

---
 coders/jp2.c | 17 ++++++++++++++---
 1 file changed, 14 insertions(+), 3 deletions(-)

diff --git a/coders/jp2.c b/coders/jp2.c
index 0d1a3342857..238c142816e 100644
--- a/coders/jp2.c
+++ b/coders/jp2.c
@@ -472,10 +472,21 @@ static Image *ReadJP2Image(const ImageInfo *image_info,ExceptionInfo *exception)
           pixel,
           scale;
 
+        ssize_t data_index = y/jp2_image->comps[i].dy*
+                             image->columns/jp2_image->comps[i].dx+
+                             x/jp2_image->comps[i].dx;
+        if(data_index < 0 ||
+           data_index >= (jp2_image->comps[i].h * jp2_image->comps[i].w))
+        {
+          opj_destroy_codec(jp2_codec);
+          opj_image_destroy(jp2_image);
+          ThrowReaderException(CoderError,
+                               "IrregularChannelGeometryNotSupported")
+        }
         scale=QuantumRange/(double) ((1UL << jp2_image->comps[i].prec)-1);
-        pixel=scale*(jp2_image->comps[i].data[y/jp2_image->comps[i].dy*
-          image->columns/jp2_image->comps[i].dx+x/jp2_image->comps[i].dx]+
-          (jp2_image->comps[i].sgnd ? 1UL << (jp2_image->comps[i].prec-1) : 0));
+        pixel=scale*(jp2_image->comps[i].data[data_index] +
+              (jp2_image->comps[i].sgnd ?
+               1UL << (jp2_image->comps[i].prec-1) : 0));
         switch (i)
         {
            case 0:
