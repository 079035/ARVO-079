From 90d9e92bdbed0af58fdce4eb3b9b3af6698746ab Mon Sep 17 00:00:00 2001
From: Roman Lebedev <lebedev.ri@gmail.com>
Date: Thu, 19 Oct 2017 19:40:26 +0300
Subject: [PATCH] NefDecoder::DecodeNikonSNef(): don't accept truncated images.

---
 src/librawspeed/decoders/NefDecoder.cpp | 10 ++--------
 1 file changed, 2 insertions(+), 8 deletions(-)

diff --git a/src/librawspeed/decoders/NefDecoder.cpp b/src/librawspeed/decoders/NefDecoder.cpp
index e00cf5883..5eb54e3f9 100644
--- a/src/librawspeed/decoders/NefDecoder.cpp
+++ b/src/librawspeed/decoders/NefDecoder.cpp
@@ -581,14 +581,8 @@ void NefDecoder::DecodeNikonSNef(ByteStream* input, uint32 w, uint32 h) {
   if (w < 6)
     ThrowIOE("got a %u wide sNEF, aborting", w);
 
-  if (input->getRemainSize() < (w * h * 3)) {
-    if (static_cast<uint32>(input->getRemainSize()) > w * 3) {
-      h = input->getRemainSize() / (w * 3) - 1;
-      mRaw->setError("Image truncated (file is too short)");
-    } else
-      ThrowIOE(
-          "Not enough data to decode a single line. Image file truncated.");
-  }
+  if (input->getRemainSize() < (w * h * 3))
+    ThrowIOE("Not enough data to decode. Image file truncated.");
 
   // We need to read the applied whitebalance, since we should return
   // data before whitebalance, so we "unapply" it.
