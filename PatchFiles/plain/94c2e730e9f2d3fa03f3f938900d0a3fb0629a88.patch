From 7e6b198840404294014fb0553dae25a5705bab1e Mon Sep 17 00:00:00 2001
From: Bart Van Assche <bvanassche@acm.org>
Date: Mon, 9 Aug 2021 17:08:09 -0700
Subject: [PATCH 1/2] libsnmp: Add more netsnmp_assert() statements

---
 snmplib/read_config.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/snmplib/read_config.c b/snmplib/read_config.c
index f9c21ce414..225e49e7a1 100644
--- a/snmplib/read_config.c
+++ b/snmplib/read_config.c
@@ -512,6 +512,8 @@ read_config_find_handler(struct config_line *line_handlers,
 {
     struct config_line *lptr;
 
+    netsnmp_assert(token);
+
     for (lptr = line_handlers; lptr != NULL; lptr = lptr->next) {
         if (!strcasecmp(token, lptr->config_token)) {
             return lptr;
@@ -529,6 +531,9 @@ run_config_handler(struct config_line *lptr,
                    const char *token, char *cptr, int when)
 {
     char           *cp;
+
+    netsnmp_assert(token);
+
     lptr = read_config_find_handler(lptr, token);
     if (lptr != NULL) {
         if (when == EITHER_CONFIG || lptr->config_time == when) {
@@ -609,6 +614,7 @@ snmp_config_when(char *line, int when)
             return SNMPERR_GENERR;
         }
         cptr = strtok_r(NULL, SNMP_CONFIG_DELIMETERS, &st);
+        netsnmp_assert(cptr);
         lptr = read_config_find_handler(lptr, cptr);
     } else {
         /*
@@ -759,6 +765,9 @@ read_config(const char *filename,
     char           *line = NULL;  /* current line buffer */
     size_t          linesize = 0; /* allocated size of line */
 
+    netsnmp_assert(line_handler);
+    netsnmp_assert(line_handler->config_token);
+
     /* reset file counter when recursion depth is 0 */
     if (depth == 0)
         files = 0;

From b3353512d8e4c7dc26a0e37bb08c7089df2ee40f Mon Sep 17 00:00:00 2001
From: Bart Van Assche <bvanassche@acm.org>
Date: Mon, 9 Aug 2021 16:28:58 -0700
Subject: [PATCH 2/2] testing: Add a read_config() unit test

---
 .../unit-tests/T026read_config_clib.c          | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)
 create mode 100644 testing/fulltests/unit-tests/T026read_config_clib.c

diff --git a/testing/fulltests/unit-tests/T026read_config_clib.c b/testing/fulltests/unit-tests/T026read_config_clib.c
new file mode 100644
index 0000000000..266b872b16
--- /dev/null
+++ b/testing/fulltests/unit-tests/T026read_config_clib.c
@@ -0,0 +1,18 @@
+/*
+ * HEADER Testing read_config()
+ */
+
+static const unsigned char data[] = { 0xff, 0x20, 0xff };
+char *path;
+FILE *f;
+
+register_mib_handlers();
+
+OK(asprintf(&path, "/tmp/read-config-input-%d", getpid()) >= 0,
+   "asprintf() failed");
+f = fopen(path, "wb");
+OK(f != NULL, "fopen() failed");
+OK(fwrite(data, sizeof(data), 1, f) == 1, "fwrite() failed");
+fclose(f);
+read_config(path, read_config_get_handlers("snmp"), 0);
+free(path);
