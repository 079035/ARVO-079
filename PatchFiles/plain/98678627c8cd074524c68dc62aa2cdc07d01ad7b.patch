From 98678627c8cd074524c68dc62aa2cdc07d01ad7b Mon Sep 17 00:00:00 2001
From: Roman Lebedev <lebedev.ri@gmail.com>
Date: Mon, 28 Aug 2017 22:09:08 +0300
Subject: [PATCH] AbstractLJpegDecompressor::getHuffmanTables(): sanitize
 dcTblNo

The deeper problem is that decode() does not fail if one
of these JpegMarker's is not found / or the order is wrong.
---
 .../decompressors/AbstractLJpegDecompressor.h        | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/src/librawspeed/decompressors/AbstractLJpegDecompressor.h b/src/librawspeed/decompressors/AbstractLJpegDecompressor.h
index 7c5ea3ff8..c5af0a1ed 100644
--- a/src/librawspeed/decompressors/AbstractLJpegDecompressor.h
+++ b/src/librawspeed/decompressors/AbstractLJpegDecompressor.h
@@ -23,6 +23,7 @@
 
 #include "common/Common.h"                      // for uint32, ushort16
 #include "common/RawImage.h"                    // for RawImage
+#include "decoders/RawDecoderException.h"       // for ThrowRDE
 #include "decompressors/AbstractDecompressor.h" // for AbstractDecompressor
 #include "decompressors/HuffmanTable.h"         // for HuffmanTable
 #include "io/Buffer.h"                          // for Buffer, Buffer::size_type
@@ -164,8 +165,15 @@ class AbstractLJpegDecompressor : public AbstractDecompressor {
   template <int N_COMP>
   std::array<HuffmanTable*, N_COMP> getHuffmanTables() const {
     std::array<HuffmanTable*, N_COMP> ht;
-    for (int i = 0; i < N_COMP; ++i)
-      ht[i] = huff[frame.compInfo[i].dcTblNo];
+    for (int i = 0; i < N_COMP; ++i) {
+      const auto dcTblNo = frame.compInfo[i].dcTblNo;
+      if (dcTblNo > huff.size()) {
+        ThrowRDE("Decoding table %u for comp %i does not exist (tables = %lu)",
+                 dcTblNo, i, huff.size());
+      }
+      ht[i] = huff[dcTblNo];
+    }
+
     return ht;
   }
 
