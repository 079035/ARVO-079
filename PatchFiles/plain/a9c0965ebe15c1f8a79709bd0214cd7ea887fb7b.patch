From a9c0965ebe15c1f8a79709bd0214cd7ea887fb7b Mon Sep 17 00:00:00 2001
From: Alex Rebert <alexandre.rebert@gmail.com>
Date: Mon, 3 Jan 2022 23:52:46 -0500
Subject: [PATCH] ucl_object_copy_internal: use memcpy instead of strdup

Keys may have null bytes, when they are decoded from json in
ucl_unescape_json_string and contain \u0000. Not copying the full key
resulted in out-of-bounds reads. The copy now relies on memcpy and
keylen instead of strdup.

Fix https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=38579
Fix https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=38675
---
 src/ucl_util.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/src/ucl_util.c b/src/ucl_util.c
index a0fdcc9..30385fe 100644
--- a/src/ucl_util.c
+++ b/src/ucl_util.c
@@ -3594,9 +3594,10 @@ ucl_object_copy_internal (const ucl_object_t *other, bool allow_array)
 
 		/* deep copy of values stored */
 		if (other->trash_stack[UCL_TRASH_KEY] != NULL) {
-			new->trash_stack[UCL_TRASH_KEY] =
-					strdup (other->trash_stack[UCL_TRASH_KEY]);
+			new->trash_stack[UCL_TRASH_KEY] = NULL;
 			if (other->key == (const char *)other->trash_stack[UCL_TRASH_KEY]) {
+				new->trash_stack[UCL_TRASH_KEY] = malloc(other->keylen);
+				memcpy(new->trash_stack[UCL_TRASH_KEY], other->trash_stack[UCL_TRASH_KEY], other->keylen);
 				new->key = new->trash_stack[UCL_TRASH_KEY];
 			}
 		}
