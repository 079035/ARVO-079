commit af7ef37d6f0c61a79a8bd66f603273245198e069
Author: David Korczynski <david@adalogics.com>
Date:   Sat Mar 19 21:25:10 2022 +0000

    tests: internal: fuzzers: fix malloc denial
    
    Ensure all fuzzers set flb_malloc_p to 0 and decrease the chance of a
    malloc failing. We need to do this as otherwise the impact of denying
    malloc is too large.
    
    Signed-off-by: David Korczynski <david@adalogics.com>

diff --git a/include/fluent-bit/flb_mem.h b/include/fluent-bit/flb_mem.h
index f7cae99a4..4e31d61d8 100644
--- a/include/fluent-bit/flb_mem.h
+++ b/include/fluent-bit/flb_mem.h
@@ -54,7 +54,7 @@ int flb_malloc_p;
 
 static inline int flb_fuzz_get_probability(int val) {
   flb_malloc_p += 1;
-  flb_malloc_p = flb_malloc_p % 100;
+  flb_malloc_p = flb_malloc_p % 1000;
   if (val > flb_malloc_p) {
     return 1;
   }
diff --git a/tests/internal/fuzzers/config_fuzzer.c b/tests/internal/fuzzers/config_fuzzer.c
index 3b8353901..dbf02c1db 100644
--- a/tests/internal/fuzzers/config_fuzzer.c
+++ b/tests/internal/fuzzers/config_fuzzer.c
@@ -320,6 +320,7 @@ char conf_file[] = "# Parser: no_year\n"
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
 {
+    flb_malloc_p = 0;
     /* Limit the size of the config files to 32KB. */
     if (size > 32768) {
         return 0;
diff --git a/tests/internal/fuzzers/config_map_fuzzer.c b/tests/internal/fuzzers/config_map_fuzzer.c
index 5db8d7d0f..1e5425c3e 100644
--- a/tests/internal/fuzzers/config_map_fuzzer.c
+++ b/tests/internal/fuzzers/config_map_fuzzer.c
@@ -155,6 +155,7 @@ struct flb_config_map *configs[] = {config_map_mult, config_map};
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
 {
+    flb_malloc_p = 0;
     if (size < 40) {
         return 0;
     }
diff --git a/tests/internal/fuzzers/config_random_fuzzer.c b/tests/internal/fuzzers/config_random_fuzzer.c
index df635b6bf..48c4aa677 100644
--- a/tests/internal/fuzzers/config_random_fuzzer.c
+++ b/tests/internal/fuzzers/config_random_fuzzer.c
@@ -24,6 +24,8 @@
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
 {
+    flb_malloc_p = 0;
+
     /* Limit the size of the config files to 32KB. */
     if (size > 32768) {
         return 0;
diff --git a/tests/internal/fuzzers/engine_fuzzer.c b/tests/internal/fuzzers/engine_fuzzer.c
index 9c16072b7..ea286d564 100644
--- a/tests/internal/fuzzers/engine_fuzzer.c
+++ b/tests/internal/fuzzers/engine_fuzzer.c
@@ -121,7 +121,7 @@ struct flb_lib_out_cb cb;
 
 
 int LLVMFuzzerInitialize(int *argc, char ***argv) {
-
+    flb_malloc_p = 0;
     ctx = flb_create();
     flb_service_set(ctx, "Flush", "0", "Grace", 
                     "0", "Log_Level", "debug", NULL);
diff --git a/tests/internal/fuzzers/filter_stdout_fuzzer.c b/tests/internal/fuzzers/filter_stdout_fuzzer.c
index a882e52dd..bd526b32f 100644
--- a/tests/internal/fuzzers/filter_stdout_fuzzer.c
+++ b/tests/internal/fuzzers/filter_stdout_fuzzer.c
@@ -27,7 +27,7 @@ int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
     flb_ctx_t *ctx;
     int in_ffd;
     int out_ffd;
-
+    flb_malloc_p = 0;
     ctx = flb_create();
     flb_service_set(ctx, "Flush", "1", "Grace", "1", "Log_Level", "error", NULL);
     in_ffd = flb_input(ctx, (char *) "lib", NULL);
diff --git a/tests/internal/fuzzers/flb_json_fuzzer.c b/tests/internal/fuzzers/flb_json_fuzzer.c
index 597b2dfdb..d560e9087 100644
--- a/tests/internal/fuzzers/flb_json_fuzzer.c
+++ b/tests/internal/fuzzers/flb_json_fuzzer.c
@@ -24,7 +24,7 @@
 int LLVMFuzzerTestOneInput(unsigned char *data, size_t size)
 {
     TIMEOUT_GUARD
-
+    flb_malloc_p = 0;
     if (size < 1) {
         return 0;
     }
diff --git a/tests/internal/fuzzers/http_fuzzer.c b/tests/internal/fuzzers/http_fuzzer.c
index ca056ddf9..c331d4111 100644
--- a/tests/internal/fuzzers/http_fuzzer.c
+++ b/tests/internal/fuzzers/http_fuzzer.c
@@ -14,6 +14,7 @@ extern int fuzz_check_connection(struct flb_http_client *c);
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
 {
+    flb_malloc_p = 0;
     struct flb_upstream *u;
     struct flb_upstream_conn *u_conn = NULL;
     struct flb_http_client *c;
diff --git a/tests/internal/fuzzers/msgpack_parse_fuzzer.c b/tests/internal/fuzzers/msgpack_parse_fuzzer.c
index b43f70e79..86e14e648 100644
--- a/tests/internal/fuzzers/msgpack_parse_fuzzer.c
+++ b/tests/internal/fuzzers/msgpack_parse_fuzzer.c
@@ -4,6 +4,7 @@
 #include <fluent-bit/flb_pack.h>
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size){
+    flb_malloc_p = 0;
     if (size != 512)
         return 0;
 
diff --git a/tests/internal/fuzzers/msgpack_to_gelf_fuzzer.c b/tests/internal/fuzzers/msgpack_to_gelf_fuzzer.c
index a5158c93c..e99ad14e5 100644
--- a/tests/internal/fuzzers/msgpack_to_gelf_fuzzer.c
+++ b/tests/internal/fuzzers/msgpack_to_gelf_fuzzer.c
@@ -4,6 +4,7 @@
 #include <fluent-bit/flb_pack.h>
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size){
+    flb_malloc_p = 0;
     if (size != 512)
         return 0;
 
diff --git a/tests/internal/fuzzers/multiline_fuzzer.c b/tests/internal/fuzzers/multiline_fuzzer.c
index 643ac1cd8..090364899 100644
--- a/tests/internal/fuzzers/multiline_fuzzer.c
+++ b/tests/internal/fuzzers/multiline_fuzzer.c
@@ -132,7 +132,7 @@ void test_multiline_parser(msgpack_object *root2, int rand_val) {
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
     TIMEOUT_GUARD
-
+    flb_malloc_p = 0;
     /* Ensure there's enough data */
     if (size < 250) {
         return 0;
diff --git a/tests/internal/fuzzers/pack_json_state_fuzzer.c b/tests/internal/fuzzers/pack_json_state_fuzzer.c
index b834e72bf..1df7bb8e8 100644
--- a/tests/internal/fuzzers/pack_json_state_fuzzer.c
+++ b/tests/internal/fuzzers/pack_json_state_fuzzer.c
@@ -6,6 +6,7 @@ int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size){
     int out_size= 0;
     char *out_buf = NULL;
     struct flb_pack_state state;
+    flb_malloc_p = 0;
 
     /* Target json packer */
     flb_pack_state_init(&state);
diff --git a/tests/internal/fuzzers/parse_json_fuzzer.c b/tests/internal/fuzzers/parse_json_fuzzer.c
index a0b9ffb58..2aac37bd4 100644
--- a/tests/internal/fuzzers/parse_json_fuzzer.c
+++ b/tests/internal/fuzzers/parse_json_fuzzer.c
@@ -24,12 +24,12 @@
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size){
     TIMEOUT_GUARD
-
     void *out_buf = NULL;
     size_t out_size = 0;
     struct flb_time out_time;
     struct flb_config *fuzz_config;
     struct flb_parser *fuzz_parser;
+    flb_malloc_p = 0;
 
     /* json parser */
     fuzz_config = flb_config_init();
diff --git a/tests/internal/fuzzers/parse_logfmt_fuzzer.c b/tests/internal/fuzzers/parse_logfmt_fuzzer.c
index ee0eaf417..2a2218cab 100644
--- a/tests/internal/fuzzers/parse_logfmt_fuzzer.c
+++ b/tests/internal/fuzzers/parse_logfmt_fuzzer.c
@@ -11,6 +11,8 @@ int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size){
     struct flb_config *fuzz_config;
     struct flb_parser *fuzz_parser;
 
+    flb_malloc_p = 0;
+
     /* logfmt parser */
     fuzz_config = flb_config_init();
     fuzz_parser = flb_parser_create("fuzzer", "logfmt", NULL, FLB_TRUE,
diff --git a/tests/internal/fuzzers/parse_ltsv_fuzzer.c b/tests/internal/fuzzers/parse_ltsv_fuzzer.c
index e1fe581a8..b9eb754bb 100644
--- a/tests/internal/fuzzers/parse_ltsv_fuzzer.c
+++ b/tests/internal/fuzzers/parse_ltsv_fuzzer.c
@@ -11,6 +11,8 @@ int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size){
     struct flb_config *fuzz_config;
     struct flb_parser *fuzz_parser;
 
+    flb_malloc_p = 0;
+
     /* ltsvc parser */
     fuzz_config = flb_config_init();
     fuzz_parser = flb_parser_create("fuzzer", "ltsv", NULL, FLB_TRUE,
diff --git a/tests/internal/fuzzers/parser_fuzzer.c b/tests/internal/fuzzers/parser_fuzzer.c
index c33329639..8216bb59b 100644
--- a/tests/internal/fuzzers/parser_fuzzer.c
+++ b/tests/internal/fuzzers/parser_fuzzer.c
@@ -42,6 +42,8 @@ int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
     int time_keep = 0;
     int types_len = 0;
 
+    flb_malloc_p = 0;
+
     if (size < 100) {
         return 0;
     }
diff --git a/tests/internal/fuzzers/record_ac_fuzzer.c b/tests/internal/fuzzers/record_ac_fuzzer.c
index 48616e206..9ba3bce81 100644
--- a/tests/internal/fuzzers/record_ac_fuzzer.c
+++ b/tests/internal/fuzzers/record_ac_fuzzer.c
@@ -22,6 +22,8 @@ int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
     size_t off = 0;
     msgpack_object map;
 
+    flb_malloc_p = 0;
+
     if (size < 100) {
        return 0;
     }
diff --git a/tests/internal/fuzzers/signv4_fuzzer.c b/tests/internal/fuzzers/signv4_fuzzer.c
index cba5e96e7..e5089e663 100644
--- a/tests/internal/fuzzers/signv4_fuzzer.c
+++ b/tests/internal/fuzzers/signv4_fuzzer.c
@@ -19,6 +19,8 @@ int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
         return 0;
     }
 
+    flb_malloc_p = 0;
+
     char s3_mode = data[0];
     MOVE_INPUT(1)
     int method = (int)data[0];
diff --git a/tests/internal/fuzzers/strp_fuzzer.c b/tests/internal/fuzzers/strp_fuzzer.c
index a23ef679d..69596255e 100644
--- a/tests/internal/fuzzers/strp_fuzzer.c
+++ b/tests/internal/fuzzers/strp_fuzzer.c
@@ -19,6 +19,8 @@ int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
         return 0;
     }
 
+    flb_malloc_p = 0;
+
     char *fmt = get_null_terminated(size - 30, &data, &size);
     char *buf = get_null_terminated(size, &data, &size);
 
