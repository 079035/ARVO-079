commit b08b150e21a096e49f56dc044537295991986fa4
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Sun Dec 3 18:15:33 2017 +0300

    PanasonicDecompressor: attemp to sanitize load_flags.

diff --git a/src/librawspeed/decompressors/PanasonicDecompressor.cpp b/src/librawspeed/decompressors/PanasonicDecompressor.cpp
index a1f91b5b..cb7ba3bb 100644
--- a/src/librawspeed/decompressors/PanasonicDecompressor.cpp
+++ b/src/librawspeed/decompressors/PanasonicDecompressor.cpp
@@ -46,11 +46,13 @@ PanasonicDecompressor::PanasonicDecompressor(const RawImage& img,
   if (width == 0 || height == 0 || width > 5488 || height > 3904)
     ThrowRDE("Unexpected image dimensions found: (%u; %u)", width, height);
 
+  if (BufSize < load_flags)
+    ThrowRDE("Bad load_flags: %u, less than BufSize (%u)", load_flags, BufSize);
+
   input.check(load_flags);
 }
 
 struct PanasonicDecompressor::PanaBitpump {
-  static constexpr uint32 BufSize = 0x4000;
   ByteStream input;
   std::vector<uchar8> buf;
   int vbits = 0;
@@ -76,6 +78,7 @@ struct PanasonicDecompressor::PanaBitpump {
        * part of the file. Since there is no chance of affecting output buffer
        * size we allow the decoder to decode this
        */
+      assert(BufSize >= load_flags);
       auto size = std::min(input.getRemainSize(), BufSize - load_flags);
       memcpy(buf.data() + load_flags, input.getData(size), size);
 
diff --git a/src/librawspeed/decompressors/PanasonicDecompressor.h b/src/librawspeed/decompressors/PanasonicDecompressor.h
index d2da0350..2fdb9fd3 100644
--- a/src/librawspeed/decompressors/PanasonicDecompressor.h
+++ b/src/librawspeed/decompressors/PanasonicDecompressor.h
@@ -29,6 +29,7 @@ namespace rawspeed {
 class RawImage;
 
 class PanasonicDecompressor final : public AbstractParallelizedDecompressor {
+  static constexpr uint32 BufSize = 0x4000;
   struct PanaBitpump;
 
   void decompressThreaded(const RawDecompressorThread* t) const final;
