From b8b582af3d54b924c6ae89cfaaa47ce1cbd3c958 Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Tue, 5 Mar 2019 13:25:31 -0800
Subject: [PATCH] Fix up size calculations.

The elements in the tables listing UTF-8 and Boolean properties are
guints, which are *not* the same size as guint16's.  (This isn't a
PDP-11 or a 68k-based machine with a compiler that has 16-bit ints or a
machine running 16-bit x86 code or....)

Bug: 15556
Change-Id: I14076584fea74c9c04e2d6b647212e7a2603c275
Reviewed-on: https://code.wireshark.org/review/32336
Reviewed-by: Guy Harris <guy@alum.mit.edu>
---
 epan/dissectors/packet-noe.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/epan/dissectors/packet-noe.c b/epan/dissectors/packet-noe.c
index e32b25e605a..2806d3bd0f2 100644
--- a/epan/dissectors/packet-noe.c
+++ b/epan/dissectors/packet-noe.c
@@ -608,6 +608,9 @@ static guint utf8_properties[] = {
     ((OPCODE_C_ime_context       << 8) | OPCODE_P_A_name         )
 };
 
+#define N_UTF8_PROPERTIES (sizeof utf8_properties / sizeof utf8_properties[0])
+#define UTF8_PROPERTY_SIZE (sizeof utf8_properties[0])
+
 static guint bool_properties[] = {
     ((OPCODE_C_terminal          << 8) | OPCODE_P_B_negative_ack     ),
     ((OPCODE_C_terminal          << 8) | OPCODE_P_B_CS_idle_state    ),
@@ -672,6 +675,9 @@ static guint bool_properties[] = {
     ((OPCODE_C_ime_context       << 8) | OPCODE_P_A_enable           )
 };
 
+#define N_BOOL_PROPERTIES (sizeof bool_properties / sizeof bool_properties[0])
+#define BOOL_PROPERTY_SIZE (sizeof bool_properties[0])
+
 /*-----------------------------------------------------------------------------
   globals
   ---------------------------------------------------------------------------*/
@@ -1059,13 +1065,13 @@ static int compcp(const void *pcp1, const void *pcp2)
 static gboolean property_is_bool(guint8 noe_class, guint8 property_code)
 {
     guint key = ((noe_class << 8) | property_code);
-    return (bsearch(&key, bool_properties, (sizeof(bool_properties)/sizeof(guint16)), sizeof(guint16), compcp) != NULL);
+    return (bsearch(&key, bool_properties, N_BOOL_PROPERTIES, BOOL_PROPERTY_SIZE, compcp) != NULL);
 }
 
 static gboolean property_is_utf8(guint8 noe_class, guint8 property_code)
 {
     guint key = ((noe_class << 8) | property_code);
-    return (bsearch(&key, utf8_properties, (sizeof(utf8_properties)/sizeof(guint16)), sizeof(guint16), compcp) != NULL);
+    return (bsearch(&key, utf8_properties, N_UTF8_PROPERTIES, UTF8_PROPERTY_SIZE, compcp) != NULL);
 }
 
 /*-----------------------------------------------------------------------------
