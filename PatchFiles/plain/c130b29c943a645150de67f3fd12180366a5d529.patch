From c130b29c943a645150de67f3fd12180366a5d529 Mon Sep 17 00:00:00 2001
From: Reini Urban <rurban@cpan.org>
Date: Sun, 14 Mar 2021 11:49:16 +0100
Subject: [PATCH] more bit_utf8_to_TV src overflow protections

commit 54fdafc75275f1848bcb4e79c0313b9a13a8b01b
introduced src overflow protection, but not really.
acctually check unprotected inc's.

Fixes oss-fuzz issue 32029
---
 src/bits.c | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/src/bits.c b/src/bits.c
index b46b6d707d..6823d90f75 100644
--- a/src/bits.c
+++ b/src/bits.c
@@ -2471,7 +2471,7 @@ bit_utf8_to_TV (char *restrict dest, const unsigned char *restrict src,
     {
       if (dest >= endp)
         return NULL;
-      else if (cquoted && c == '\\' && dest+1 < endp &&
+      else if (cquoted && c == '\\' && dest+1 < endp && s + 1 <= ends &&
           // skip \" to " and \\ to \.
           (*s == '"' || *s == '\\' || *s == 'r' || *s == 'n'))
         {
@@ -2487,7 +2487,7 @@ bit_utf8_to_TV (char *restrict dest, const unsigned char *restrict src,
               }
         }
       // \uxxxx => \U+XXXX as in bit_embed_TU
-      else if (c == '\\' && dest+7 < endp && *s == 'u')
+      else if (c == '\\' && dest+7 < endp && *s == 'u' && s + 5 <= ends)
         {
           *dest++ = c;
           *dest++ = 'U';
@@ -2502,7 +2502,7 @@ bit_utf8_to_TV (char *restrict dest, const unsigned char *restrict src,
         {
           *dest++ = c;
         }
-      else if ((c & 0xe0) == 0xc0)
+      else if ((c & 0xe0) == 0xc0 && s + 1 <= ends)
         {
           /* ignore invalid utf8 for now */
           if (dest+7 < endp)
@@ -2523,7 +2523,7 @@ bit_utf8_to_TV (char *restrict dest, const unsigned char *restrict src,
       else if ((c & 0xf0) == 0xe0)
         {
           /* warn on invalid utf8 */
-          if (dest+2 < endp &&
+          if (dest+2 < endp && s + 1 <= ends &&
               (*s < 0x80 || *s > 0xBF || *(s+1) < 0x80 || *(s+1) > 0xBF))
             {
               LOG_WARN ("utf-8: BAD_CONTINUATION_BYTE %s", s);
@@ -2532,7 +2532,7 @@ bit_utf8_to_TV (char *restrict dest, const unsigned char *restrict src,
             {
               LOG_WARN ("utf-8: NON_SHORTEST %s", s);
             }
-          if (dest+7 < endp)
+          if (dest+7 < endp && s + 1 <= ends)
             {
               BITCODE_RS wc = ((c & 0x0f) << 12) | ((*s & 0x3f) << 6) | (*(s+1) & 0x3f);
               *dest++ = '\\';
@@ -2545,6 +2545,8 @@ bit_utf8_to_TV (char *restrict dest, const unsigned char *restrict src,
             }
           else
             return NULL;
+          if (s + 2 > ends)
+            break;
           s++;
           s++;
         }
