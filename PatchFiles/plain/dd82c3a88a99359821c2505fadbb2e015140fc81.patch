From dd82c3a88a99359821c2505fadbb2e015140fc81 Mon Sep 17 00:00:00 2001
From: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date: Sat, 16 Jun 2018 23:35:02 +0200
Subject: [PATCH] EVM fuzz fixes (#1181)

Sets id to instruction
Completes missing set and enforces number of instructions
---
 arch/EVM/EVMDisassembler.c  | 2 +-
 arch/EVM/EVMMapping.c       | 5 +++--
 arch/EVM/EVMMappingInsn.inc | 1 +
 3 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/arch/EVM/EVMDisassembler.c b/arch/EVM/EVMDisassembler.c
index 6fde18b47e..f9a991578d 100644
--- a/arch/EVM/EVMDisassembler.c
+++ b/arch/EVM/EVMDisassembler.c
@@ -6,7 +6,7 @@
 #include "EVMDisassembler.h"
 #include "EVMMapping.h"
 
-static short opcodes[] = {
+static short opcodes[256] = {
 	EVM_INS_STOP,
 	EVM_INS_ADD,
 	EVM_INS_MUL,
diff --git a/arch/EVM/EVMMapping.c b/arch/EVM/EVMMapping.c
index 212a815b18..1e0881c650 100644
--- a/arch/EVM/EVMMapping.c
+++ b/arch/EVM/EVMMapping.c
@@ -11,7 +11,7 @@
 #include "EVMMapping.h"
 
 #ifndef CAPSTONE_DIET
-static cs_evm insns[] = {
+static cs_evm insns[256] = {
 #include "EVMMappingInsn.inc"
 };
 #endif
@@ -20,7 +20,7 @@ static cs_evm insns[] = {
 // return 0 if not found
 static int evm_insn_find(cs_evm *insns, unsigned int max, unsigned int id)
 {
-	if (id > max)
+	if (id >= max)
 		return -1;
 
 	if (insns[id].fee == 0xffffffff)
@@ -33,6 +33,7 @@ static int evm_insn_find(cs_evm *insns, unsigned int max, unsigned int id)
 // fill in details
 void EVM_get_insn_id(cs_struct *h, cs_insn *insn, unsigned int id)
 {
+	insn->id = id;
 #ifndef CAPSTONE_DIET
 	int i = evm_insn_find(insns, ARR_SIZE(insns), id);
 	//printf(">> id = %u\n", id);
diff --git a/arch/EVM/EVMMappingInsn.inc b/arch/EVM/EVMMappingInsn.inc
index 64f072fef3..148b8844b3 100644
--- a/arch/EVM/EVMMappingInsn.inc
+++ b/arch/EVM/EVMMappingInsn.inc
@@ -240,6 +240,7 @@
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
+{ 0, 0, 0xffffffff }, // unused
 { 3, 1, 32000 }, // CREATE
 { 7, 1, 40 }, // CALL
 { 7, 1, 40 }, // CALLCODE
