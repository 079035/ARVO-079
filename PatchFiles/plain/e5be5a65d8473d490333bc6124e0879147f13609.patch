From e5be5a65d8473d490333bc6124e0879147f13609 Mon Sep 17 00:00:00 2001
From: Reini Urban <rurban@cpan.org>
Date: Thu, 1 Apr 2021 15:39:11 +0200
Subject: [PATCH] indxf: reset j on non-vector fields

we have several special cases for vectors or pts, where we
need a global j counter. but when we set a single field, such as a
num_clip_verts 91 or such. then we need to reset j, otherwise
we could run into vector or pts overflows.
As in oss-fuzz issue 32755 and 32785
---
 src/in_dxf.c | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/src/in_dxf.c b/src/in_dxf.c
index 8e463c5d89..a8e394c8e8 100644
--- a/src/in_dxf.c
+++ b/src/in_dxf.c
@@ -10856,8 +10856,8 @@ new_object (char *restrict name, char *restrict dxfname,
                                    || strEQc (&f->type[1], "DPOINT*"))
                                && (num_f = find_numfield (fields, f->name)))
                         {
-                          long size = get_numfield_value (
-                              _obj, num_f); // how many points
+                          // how many points
+                          long size = get_numfield_value (_obj, num_f);
                           double *pts;
                           int is2d = *f->type == '2';
                           if (!size)
@@ -10877,16 +10877,16 @@ new_object (char *restrict name, char *restrict dxfname,
                               dwg_dynapi_entity_set_value (_obj, obj->name,
                                                            f->name, &pts, 0);
                             }
-                          else if (j < size)
+                          else if (j > 0 && j < size)
                             {
                               int _i = is2d ? j * 2 : j * 3;
                               dwg_dynapi_entity_value (_obj, obj->name,
                                                        f->name, &pts, NULL);
-                              if (pair->code < 20 && pts)
+                              if (pair->code < 20 && pts != NULL)
                                 {
                                   pts[_i] = pair->value.d;
                                 }
-                              else if (pair->code < 30 && pts)
+                              else if (pair->code < 30 && pts != NULL)
                                 {
                                   if (is2d)
                                     LOG_TRACE (
@@ -11200,6 +11200,7 @@ new_object (char *restrict name, char *restrict dxfname,
                           LOG_TRACE ("%s.%s = %ld [%s %d]\n", name, f->name,
                                      pair->value.l, f->type, pair->code);
                         }
+                      j = 0; // not a point nor vector member, so reset
                       goto next_pair; // found, early exit
                     }
                   // wrong code, maybe a point .y or .z
