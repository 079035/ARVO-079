From ee86f51fcfe18e6517caedcc63f5a2d70ddef8aa Mon Sep 17 00:00:00 2001
From: Cristy <mikayla-grace@urban-warrior.org>
Date: Wed, 15 Jan 2020 19:34:58 -0500
Subject: [PATCH] Trace stroke polygon paths extents separately

---
 MagickCore/draw.c | 26 +++++++++++++++++++++-----
 1 file changed, 21 insertions(+), 5 deletions(-)

diff --git a/MagickCore/draw.c b/MagickCore/draw.c
index 853e10e16cb..208447595ce 100644
--- a/MagickCore/draw.c
+++ b/MagickCore/draw.c
@@ -7080,18 +7080,34 @@ static PrimitiveInfo *TraceStrokePolygon(const Image *image,
 {
 #define MaxStrokePad  (6*BezierQuantum+360)
 #define CheckPathExtent(pad) \
-  if ((ssize_t) (q+(pad)) >= (ssize_t) max_strokes) \
+  if ((ssize_t) (p+(pad)) >= (ssize_t) max_strokes) \
     { \
       if (~max_strokes < (pad)) \
-        { \
-          path_p=(PointInfo *) RelinquishMagickMemory(path_p); \
-          path_q=(PointInfo *) RelinquishMagickMemory(path_q); \
-        } \
+        path_p=(PointInfo *) RelinquishMagickMemory(path_p); \
       else \
         { \
           max_strokes+=(pad); \
           path_p=(PointInfo *) ResizeQuantumMemory(path_p,max_strokes+ \
             MaxStrokePad,sizeof(*path_p)); \
+        } \
+      if ((path_p == (PointInfo *) NULL) || (path_q == (PointInfo *) NULL)) \
+        { \
+          if (path_p != (PointInfo *) NULL) \
+            path_p=(PointInfo *) RelinquishMagickMemory(path_p); \
+          if (path_q != (PointInfo *) NULL) \
+            path_q=(PointInfo *) RelinquishMagickMemory(path_q); \
+          polygon_primitive=(PrimitiveInfo *) \
+            RelinquishMagickMemory(polygon_primitive); \
+          return((PrimitiveInfo *) NULL); \
+        } \
+    } \
+  if ((ssize_t) (q+(pad)) >= (ssize_t) max_strokes) \
+    { \
+      if (~max_strokes < (pad)) \
+        path_q=(PointInfo *) RelinquishMagickMemory(path_q); \
+      else \
+        { \
+          max_strokes+=(pad); \
           path_q=(PointInfo *) ResizeQuantumMemory(path_q,max_strokes+ \
             MaxStrokePad,sizeof(*path_q)); \
         } \
