commit efd5f9a71af7bd5ab3816ba49edc8c3f7c370bae
Author: Ken Sharp <ken.sharp@artifex.com>
Date:   Wed Dec 22 10:17:57 2021 +0000

    OSS-fuzz #42783 - limit debug string copying to destination buffer size
    
    A debug message copied a potentially large string, if it exceeded the
    destination buffer size we would overrun. Prevent that (can only happen
    for broken files) and check other similar constructs because this isn't
    the first one we've seen. Found one more.

diff --git a/pdf/pdf_annot.c b/pdf/pdf_annot.c
index f1cd9d63e..09bbb8d0c 100644
--- a/pdf/pdf_annot.c
+++ b/pdf/pdf_annot.c
@@ -1446,8 +1446,8 @@ static int pdfi_annot_draw_LE_one(pdf_context *ctx, pdf_dict *annot, pdf_name *L
     }
     if (!dispatch_ptr->name) {
         char str[100];
-        memcpy(str, (const char *)LE->data, LE->length);
-        str[LE->length] = '\0';
+        memcpy(str, (const char *)LE->data, LE->length < 100 ? LE->length : 99);
+        str[LE->length < 100 ? LE->length : 99] = '\0';
         dbgmprintf1(ctx->memory, "ANNOT: WARNING No handler for LE %s\n", str);
     }
 
@@ -3712,8 +3712,8 @@ static int pdfi_annot_draw_NotImplemented(pdf_context *ctx, pdf_dict *annot, pdf
     code = pdfi_dict_get_type(ctx, annot, "Subtype", PDF_NAME, (pdf_obj **)&Subtype);
     if (code < 0) goto exit;
 
-    memcpy(str, (const char *)Subtype->data, Subtype->length);
-    str[Subtype->length] = '\0';
+    memcpy(str, (const char *)Subtype->data, Subtype->length < 100 ? Subtype->length : 99);
+    str[Subtype->length < 100 ? Subtype->length : 99] = '\0';
     dbgmprintf1(ctx->memory, "ANNOT: No AP, default appearance for Subtype %s Not Implemented\n", str);
 
  exit:
