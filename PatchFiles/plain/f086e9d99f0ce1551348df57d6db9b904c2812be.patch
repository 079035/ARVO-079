From f086e9d99f0ce1551348df57d6db9b904c2812be Mon Sep 17 00:00:00 2001
From: Reini Urban <rurban@cpan.org>
Date: Tue, 2 Mar 2021 09:45:02 +0100
Subject: [PATCH] more decode bounds-checking

when the common entity already overflowed, dont parse further.
such as e.g. with EED overflow.
Fixes oss-fuzz issue 31576
---
 src/bits.c       | 6 ++----
 src/dec_macros.h | 4 ++--
 2 files changed, 4 insertions(+), 6 deletions(-)

diff --git a/src/bits.c b/src/bits.c
index c7f2f64e4a..f954c17578 100644
--- a/src/bits.c
+++ b/src/bits.c
@@ -491,12 +491,10 @@ bit_read_RD (Bit_Chain *dat)
   unsigned char byte[8];
   double *result;
 
+  //CHK_OVERFLOW_PLUS (8, __FUNCTION__, bit_nan ())
   // TODO: big-endian
   for (i = 0; i < 8; i++)
-    {
-      byte[i] = bit_read_RC (dat);
-      CHK_OVERFLOW(__FUNCTION__, bit_nan ())
-    }
+    byte[i] = bit_read_RC (dat);
 
   result = (double *)byte;
   return (*result);
diff --git a/src/dec_macros.h b/src/dec_macros.h
index 90868e550d..dea03a6ddb 100644
--- a/src/dec_macros.h
+++ b/src/dec_macros.h
@@ -1511,7 +1511,7 @@
     _obj->parent = obj->tio.entity;                                           \
     SINCE (R_13) { error = dwg_decode_entity (dat, hdl_dat, str_dat, _ent); } \
     else { error = decode_entity_preR13 (dat, obj, _ent); }                   \
-    if (error >= DWG_ERR_CRITICAL)                                            \
+    if (error >= DWG_ERR_CRITICAL || dat->byte > dat->size)                   \
       return error;
 
 // Does size include the CRC?
@@ -1611,7 +1611,7 @@
       {                                                                       \
         _obj = obj->tio.object->tio.token;                                    \
         error = dwg_decode_object (dat, hdl_dat, str_dat, obj->tio.object);   \
-        if (error >= DWG_ERR_CRITICAL)                                        \
+        if (error >= DWG_ERR_CRITICAL || dat->byte > dat->size)               \
           return error;                                                       \
       }
 
