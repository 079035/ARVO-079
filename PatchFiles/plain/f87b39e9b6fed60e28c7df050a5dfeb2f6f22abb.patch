From f87b39e9b6fed60e28c7df050a5dfeb2f6f22abb Mon Sep 17 00:00:00 2001
From: Guy Harris <gharris@sonic.net>
Date: Sun, 31 May 2020 03:13:40 -0700
Subject: [PATCH] Don't introduce pcap_handle() unless a need for it is
 demonstrated.

---
 pcap.c      |  6 ------
 pcap/pcap.h | 10 +++++-----
 2 files changed, 5 insertions(+), 11 deletions(-)

diff --git a/pcap.c b/pcap.c
index 173ec7ab4e..9dc16cff38 100644
--- a/pcap.c
+++ b/pcap.c
@@ -3467,12 +3467,6 @@ pcap_file(pcap_t *p)
 }
 
 #ifdef _WIN32
-HANDLE
-pcap_handle(pcap_t *p)
-{
-	return (p->handle);
-}
-
 int
 pcap_fileno(pcap_t *p)
 {
diff --git a/pcap/pcap.h b/pcap/pcap.h
index 9385e4e983..7649eab9eb 100644
--- a/pcap/pcap.h
+++ b/pcap/pcap.h
@@ -550,12 +550,12 @@ PCAP_API int	pcap_bufsize(pcap_t *);
 PCAP_API FILE	*pcap_file(pcap_t *);
 #ifdef _WIN32
 /*
- * This returns a HANDLE, cast to an int; UN*X code that uses the
- * result of pcap_fileno() will probably not work on Windows.
- * We keep it around for backwards compatibility, but also provide
- * pcap_handle(), which returns a HANDLE.
+ * This probably shouldn't have been kept in WinPcap; most if not all
+ * UN*X code that used it won't work on Windows.  We deprecate it; if
+ * anybody really needs access to whatever HANDLE may be associated
+ * with a pcap_t (there's no guarantee that there is one), we can add
+ * a Windows-only pcap_handle() API that returns the HANDLE.
  */
-PCAP_API HANDLE	pcap_handle(pcap_t *);
 PCAP_API int	pcap_fileno(pcap_t *)
 PCAP_DEPRECATED(pcap_fileno, "use 'pcap_handle'");
 #else /* _WIN32 */
